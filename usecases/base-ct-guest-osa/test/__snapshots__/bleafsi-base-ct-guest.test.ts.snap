// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BLEA-FSI-BASE ControlTower Stacks GuestOsa1Account Stacks 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "IamAdminGroupA13BD09E": Object {
      "Properties": Object {
        "ManagedPolicyArns": Array [
          Object {
            "Ref": "IamAdminPolicy0D291B9C",
          },
        ],
      },
      "Type": "AWS::IAM::Group",
    },
    "IamAdminPolicy0D291B9C": Object {
      "Properties": Object {
        "Description": "",
        "Path": "/",
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "iam:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:MultiFactorAuthPresent": "true",
                },
              },
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "aws-portal:*Billing",
              "Effect": "Deny",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "IamAdminRole7F81A4F9": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Ref": "IamAdminPolicy0D291B9C",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "InstanceOpsGroup70D35B0F": Object {
      "Properties": Object {
        "ManagedPolicyArns": Array [
          Object {
            "Ref": "InstanceOpsPolicyACF13D80",
          },
        ],
      },
      "Type": "AWS::IAM::Group",
    },
    "InstanceOpsPolicyACF13D80": Object {
      "Properties": Object {
        "Description": "",
        "Path": "/",
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ec2:*",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "elasticloadbalancing:*",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "cloudwatch:*",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "autoscaling:*",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "ec2:CreateVpc*",
                "ec2:DeleteVpc*",
                "ec2:ModifyVpc*",
                "ec2:CreateSubnet*",
                "ec2:DeleteSubnet*",
                "ec2:ModifySubnet*",
                "ec2:Create*Route*",
                "ec2:DeleteRoute*",
                "ec2:AssociateRoute*",
                "ec2:ReplaceRoute*",
                "ec2:CreateVpn*",
                "ec2:DeleteVpn*",
                "ec2:AttachVpn*",
                "ec2:DetachVpn*",
                "ec2:CreateNetworkAcl*",
                "ec2:DeleteNetworkAcl*",
                "ec2:ReplaceNetworkAcl*",
                "ec2:*Gateway*",
                "ec2:*PeeringConnection*",
              ],
              "Effect": "Deny",
              "Resource": "*",
            },
            Object {
              "Action": "aws-portal:*Billing",
              "Effect": "Deny",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Create*",
                "kms:Revoke*",
                "kms:Enable*",
                "kms:Get*",
                "kms:Disable*",
                "kms:Delete*",
                "kms:Put*",
                "kms:Update*",
              ],
              "Effect": "Deny",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "InstanceOpsRole4285322B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Ref": "InstanceOpsPolicyACF13D80",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ReadOnlyAdminGroup48654107": Object {
      "Properties": Object {
        "ManagedPolicyArns": Array [
          Object {
            "Ref": "ReadOnlyAdminPolicyBB7EEA25",
          },
        ],
      },
      "Type": "AWS::IAM::Group",
    },
    "ReadOnlyAdminPolicyBB7EEA25": Object {
      "Properties": Object {
        "Description": "",
        "Path": "/",
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "appstream:Get*",
                "autoscaling:Describe*",
                "cloudformation:DescribeStacks",
                "cloudformation:DescribeStackEvents",
                "cloudformation:DescribeStackResource",
                "cloudformation:DescribeStackResources",
                "cloudformation:GetTemplate",
                "cloudformation:List*",
                "cloudfront:Get*",
                "cloudfront:List*",
                "cloudtrail:DescribeTrails",
                "cloudtrail:GetTrailStatus",
                "cloudwatch:Describe*",
                "cloudwatch:Get*",
                "cloudwatch:List*",
                "directconnect:Describe*",
                "dynamodb:GetItem",
                "dynamodb:BatchGetItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:DescribeTable",
                "dynamodb:ListTables",
                "ec2:Describe*",
                "elasticache:Describe*",
                "elasticbeanstalk:Check*",
                "elasticbeanstalk:Describe*",
                "elasticbeanstalk:List*",
                "elasticbeanstalk:RequestEnvironmentInfo",
                "elasticbeanstalk:RetrieveEnvironmentInfo",
                "elasticloadbalancing:Describe*",
                "elastictranscoder:Read*",
                "elastictranscoder:List*",
                "iam:List*",
                "iam:Get*",
                "kinesis:Describe*",
                "kinesis:Get*",
                "kinesis:List*",
                "opsworks:Describe*",
                "opsworks:Get*",
                "route53:Get*",
                "route53:List*",
                "redshift:Describe*",
                "redshift:ViewQueriesInConsole",
                "rds:Describe*",
                "rds:ListTagsForResource",
                "s3:Get*",
                "s3:List*",
                "sdb:GetAttributes",
                "sdb:List*",
                "sdb:Select*",
                "ses:Get*",
                "ses:List*",
                "sns:Get*",
                "sns:List*",
                "sqs:GetQueueAttributes",
                "sqs:ListQueues",
                "sqs:ReceiveMessage",
                "storagegateway:List*",
                "storagegateway:Describe*",
                "trustedadvisor:Describe*",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "aws-portal:*Billing",
              "Effect": "Deny",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "ReadOnlyAdminRole76DC872B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Ref": "ReadOnlyAdminPolicyBB7EEA25",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SysAdminGroupA408C9E0": Object {
      "Properties": Object {
        "ManagedPolicyArns": Array [
          Object {
            "Ref": "SysAdminPolicy90C47C4A",
          },
        ],
      },
      "Type": "AWS::IAM::Group",
    },
    "SysAdminPolicy90C47C4A": Object {
      "Properties": Object {
        "Description": "",
        "Path": "/",
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Condition": Object {
                "Bool": Object {
                  "aws:MultiFactorAuthPresent": "true",
                },
              },
              "Effect": "Allow",
              "NotAction": "iam:*",
              "Resource": "*",
            },
            Object {
              "Action": "aws-portal:*Billing",
              "Effect": "Deny",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "cloudtrail:DeleteTrail",
                "cloudtrail:StopLogging",
                "cloudtrail:UpdateTrail",
              ],
              "Effect": "Deny",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Create*",
                "kms:Revoke*",
                "kms:Enable*",
                "kms:Get*",
                "kms:Disable*",
                "kms:Delete*",
                "kms:Put*",
                "kms:Update*",
              ],
              "Effect": "Deny",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "SysAdminRoleC29628DF": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Ref": "SysAdminPolicy90C47C4A",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`BLEA-FSI-BASE ControlTower Stacks GuestOsa1Account Stacks 2`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "BLEAFSIRuleDefaultSecurityGroupClosed3A0D9AF3": Object {
      "Properties": Object {
        "ConfigRuleName": "bb-default-security-group-closed",
        "Description": "Checks that the default security group of any Amazon Virtual Private Cloud (VPC) does not allow inbound or outbound traffic. The rule is non-compliant if the default security group has one or more inbound or outbound traffic.",
        "Scope": Object {
          "ComplianceResourceTypes": Array [
            "AWS::EC2::SecurityGroup",
          ],
        },
        "Source": Object {
          "Owner": "AWS",
          "SourceIdentifier": "VPC_DEFAULT_SECURITY_GROUP_CLOSED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "CheckForEbsOptimizedInstance": Object {
      "Properties": Object {
        "ConfigRuleName": "CheckForEbsOptimizedInstance",
        "Description": "Disallow launch of EC2 instance types that are not EBS-optimized - Checks whether EBS optimization is enabled for your EC2 instances that can be EBS-optimized",
        "Scope": Object {
          "ComplianceResourceTypes": Array [
            "AWS::EC2::Instance",
          ],
        },
        "Source": Object {
          "Owner": "AWS",
          "SourceIdentifier": "EBS_OPTIMIZED_INSTANCE",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "CheckForEc2VolumesInUse": Object {
      "Properties": Object {
        "ConfigRuleName": "CheckForEc2VolumesInUs",
        "Description": "Disallow EBS volumes that are unattached to an EC2 instance - Checks whether EBS volumes are attached to EC2 instances",
        "InputParameters": Object {
          "deleteOnTermination": true,
        },
        "Scope": Object {
          "ComplianceResourceTypes": Array [
            "AWS::EC2::Volume",
          ],
        },
        "Source": Object {
          "Owner": "AWS",
          "SourceIdentifier": "EC2_VOLUME_INUSE_CHECK",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "CheckForIAMUserConsoleMFA": Object {
      "Properties": Object {
        "ConfigRuleName": "CheckForIAMUserConsoleMFA",
        "Description": "Disallow console access to IAM users without MFA - Checks whether AWS Multi-Factor Authentication (MFA) is enabled for all AWS Identity and Access Management (IAM) users that use a console password. The rule is COMPLIANT if MFA is enabled.",
        "MaximumExecutionFrequency": "One_Hour",
        "Source": Object {
          "Owner": "AWS",
          "SourceIdentifier": "MFA_ENABLED_FOR_IAM_CONSOLE_ACCESS",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "CheckForIAMUserMFA": Object {
      "Properties": Object {
        "ConfigRuleName": "CheckForIAMUserMFA",
        "Description": "Disallow access to IAM users without MFA - Checks whether the AWS Identity and Access Management users have multi-factor authentication (MFA) enabled. The rule is COMPLIANT if MFA is enabled.",
        "MaximumExecutionFrequency": "One_Hour",
        "Source": Object {
          "Owner": "AWS",
          "SourceIdentifier": "IAM_USER_MFA_ENABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "CheckForRdsPublicAccess": Object {
      "Properties": Object {
        "ConfigRuleName": "CheckForRdsPublicAccess",
        "Description": "Disallow public access to RDS database instances - Checks whether the Amazon Relational Database Service (RDS) instances are not publicly accessible. The rule is non-compliant if the publiclyAccessible field is true in the instance configuration item.",
        "Scope": Object {
          "ComplianceResourceTypes": Array [
            "AWS::RDS::DBInstance",
          ],
        },
        "Source": Object {
          "Owner": "AWS",
          "SourceIdentifier": "RDS_INSTANCE_PUBLIC_ACCESS_CHECK",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "CheckForRdsStorageEncryption": Object {
      "Properties": Object {
        "ConfigRuleName": "CheckForRdsStorageEncryption",
        "Description": "Disallow RDS database instances that are not storage encrypted - Checks whether storage encryption is enabled for your RDS DB instances.",
        "Scope": Object {
          "ComplianceResourceTypes": Array [
            "AWS::RDS::DBInstance",
          ],
        },
        "Source": Object {
          "Owner": "AWS",
          "SourceIdentifier": "RDS_STORAGE_ENCRYPTED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "CheckForRootMfa": Object {
      "Properties": Object {
        "ConfigRuleName": "CheckForRootMfa",
        "Description": "Enable MFA for the root user - Checks whether the root user of your AWS account requires multi-factor authentication for console sign-in.",
        "MaximumExecutionFrequency": "One_Hour",
        "Source": Object {
          "Owner": "AWS",
          "SourceIdentifier": "ROOT_ACCOUNT_MFA_ENABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "CheckForS3PublicRead": Object {
      "Properties": Object {
        "ConfigRuleName": "CheckForS3PublicRead",
        "Description": "Disallow public read access to S3 buckets - Checks that your S3 buckets do not allow public read access. If an S3 bucket policy or bucket ACL allows public read access, the bucket is noncompliant.",
        "Scope": Object {
          "ComplianceResourceTypes": Array [
            "AWS::S3::Bucket",
          ],
        },
        "Source": Object {
          "Owner": "AWS",
          "SourceIdentifier": "S3_BUCKET_PUBLIC_READ_PROHIBITED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "CheckForS3PublicWrite": Object {
      "Properties": Object {
        "ConfigRuleName": "CheckForS3PublicWrite",
        "Description": "Disallow public write access to S3 buckets - Checks that your S3 buckets do not allow public write access. If an S3 bucket policy or bucket ACL allows public write access, the bucket is noncompliant.",
        "Scope": Object {
          "ComplianceResourceTypes": Array [
            "AWS::S3::Bucket",
          ],
        },
        "Source": Object {
          "Owner": "AWS",
          "SourceIdentifier": "S3_BUCKET_PUBLIC_WRITE_PROHIBITED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`BLEA-FSI-BASE ControlTower Stacks GuestOsa1Account Stacks 3`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "BLEAFSIRuleConfigRules61AF7956": Object {
      "Properties": Object {
        "Description": "EventBridge Event Rule to send notification on Config Rule compliance changes.",
        "EventPattern": Object {
          "detail": Object {
            "configRuleName": Array [
              "bb-default-security-group-closed",
            ],
            "newEvaluationResult": Object {
              "complianceType": Array [
                "NON_COMPLIANT",
              ],
            },
          },
          "detail-type": Array [
            "Config Rules Compliance Change",
          ],
          "source": Array [
            "aws.config",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Ref": "SecurityAlarmTopicEE71C633",
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "BLEAFSIRuleGuardDutyDF84F1F0": Object {
      "Properties": Object {
        "Description": "EventBridge Event Rule to send notification on GuardDuty findings.",
        "EventPattern": Object {
          "detail": Object {
            "severity": Array [
              4,
              4,
              4.1,
              4.2,
              4.3,
              4.4,
              4.5,
              4.6,
              4.7,
              4.8,
              4.9,
              5,
              5,
              5.1,
              5.2,
              5.3,
              5.4,
              5.5,
              5.6,
              5.7,
              5.8,
              5.9,
              6,
              6,
              6.1,
              6.2,
              6.3,
              6.4,
              6.5,
              6.6,
              6.7,
              6.8,
              6.9,
              7,
              7,
              7.1,
              7.2,
              7.3,
              7.4,
              7.5,
              7.6,
              7.7,
              7.8,
              7.9,
              8,
              8,
              8.1,
              8.2,
              8.3,
              8.4,
              8.5,
              8.6,
              8.7,
              8.8,
              8.9,
            ],
          },
          "detail-type": Array [
            "GuardDuty Finding",
          ],
          "source": Array [
            "aws.guardduty",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Ref": "SecurityAlarmTopicEE71C633",
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "BLEAFSIRuleNetworkAclChangeA9DAE2F4": Object {
      "Properties": Object {
        "Description": "Notify to create, update or delete a Network ACL.",
        "EventPattern": Object {
          "detail": Object {
            "eventName": Array [
              "CreateNetworkAcl",
              "CreateNetworkAclEntry",
              "DeleteNetworkAcl",
              "DeleteNetworkAclEntry",
              "ReplaceNetworkAclEntry",
              "ReplaceNetworkAclAssociation",
            ],
            "eventSource": Array [
              "ec2.amazonaws.com",
            ],
          },
          "detail-type": Array [
            "AWS API Call via CloudTrail",
          ],
          "source": Array [
            "aws.ec2",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Ref": "SecurityAlarmTopicEE71C633",
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "BLEAFSIRuleSecurityGroupChange2271640D": Object {
      "Properties": Object {
        "Description": "Notify to create, update or delete a Security Group.",
        "EventPattern": Object {
          "detail": Object {
            "eventName": Array [
              "AuthorizeSecurityGroupIngress",
              "AuthorizeSecurityGroupEgress",
              "RevokeSecurityGroupIngress",
              "RevokeSecurityGroupEgress",
            ],
            "eventSource": Array [
              "ec2.amazonaws.com",
            ],
          },
          "detail-type": Array [
            "AWS API Call via CloudTrail",
          ],
          "source": Array [
            "aws.ec2",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Ref": "SecurityAlarmTopicEE71C633",
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "BLEAFSIRuleSecurityHubB06479F1": Object {
      "Properties": Object {
        "Description": "EventBridge Event Rule to send notification on SecurityHub all new findings and all updates.",
        "EventPattern": Object {
          "detail": Object {
            "findings": Object {
              "Compliance": Object {
                "Status": Array [
                  "FAILED",
                ],
              },
              "RecordState": Array [
                "ACTIVE",
              ],
              "Severity": Object {
                "Label": Array [
                  "CRITICAL",
                  "HIGH",
                ],
              },
              "Workflow": Object {
                "Status": Array [
                  "NEW",
                  "NOTIFIED",
                ],
              },
            },
          },
          "detail-type": Array [
            "Security Hub Findings - Imported",
          ],
          "source": Array [
            "aws.securityhub",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Ref": "SecurityAlarmTopicEE71C633",
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "BLEFSIARuleAwsHealthF24B007F": Object {
      "Properties": Object {
        "Description": "Notify AWS Health event",
        "EventPattern": Object {
          "detail-type": Array [
            "AWS Health Event",
          ],
          "source": Array [
            "aws.health",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Ref": "SecurityAlarmTopicEE71C633",
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "SecurityAlarmEmailD5EA4C2D": Object {
      "Properties": Object {
        "Endpoint": "dummy@amazon.co.jp",
        "Protocol": "email",
        "TopicArn": Object {
          "Ref": "SecurityAlarmTopicEE71C633",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "SecurityAlarmTopicEE71C633": Object {
      "Type": "AWS::SNS::Topic",
    },
    "SecurityAlarmTopicPolicyA4A1405F": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "SNS:Publish",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "cloudwatch.amazonaws.com",
              },
              "Resource": Object {
                "Ref": "SecurityAlarmTopicEE71C633",
              },
              "Sid": "0",
            },
            Object {
              "Action": "SNS:Publish",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": false,
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Object {
                "Ref": "SecurityAlarmTopicEE71C633",
              },
              "Sid": "AllowPublishThroughSSLOnly",
            },
            Object {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
              "Resource": Object {
                "Ref": "SecurityAlarmTopicEE71C633",
              },
              "Sid": "2",
            },
          ],
          "Version": "2012-10-17",
        },
        "Topics": Array [
          Object {
            "Ref": "SecurityAlarmTopicEE71C633",
          },
        ],
      },
      "Type": "AWS::SNS::TopicPolicy",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
