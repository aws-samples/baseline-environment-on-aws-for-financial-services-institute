// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BLEAFSI-CoreBanking snapshot check Core banking sample Stacks 1`] = `
{
  "Outputs": {
    "NlbTestNlbUrl5D253295": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "NlbNlbOnlyForTest6E63B1BF",
                "DNSName",
              ],
            },
          ],
        ],
      },
    },
    "SampleAppClientInstanceBastionHostId012E92EB": {
      "Description": "Instance ID of the bastion host. Use this to connect via SSM Session Manager",
      "Value": {
        "Ref": "SampleAppClientInstanceF6BD53A1",
      },
    },
    "SampleMultiRegionAppBalanceMigrationCommandE57D7C97": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws ecs run-task --cluster ",
            {
              "Fn::GetAtt": [
                "SampleMultiRegionAppCluster9D88E1C2",
                "Arn",
              ],
            },
            " --task-definition ",
            {
              "Ref": "SampleMultiRegionAppBalanceMigrationTaskE0DE7B86",
            },
            " --launch-type FARGATE --overrides '{"containerOverrides": [{"name": "EcsApp", "command": ["npx", "prisma", "db", "push"] }]}' --network-configuration "awsvpcConfiguration={subnets=[",
            {
              "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
            },
            "],securityGroups=[",
            {
              "Fn::GetAtt": [
                "SampleMultiRegionAppBalanceFargateServiceSecurityGroup3FD93178",
                "GroupId",
              ],
            },
            "]}" --region ap-northeast-1 --profile ct-guest-sso",
          ],
        ],
      },
    },
    "SampleMultiRegionAppCountMigrationCommandD5EB9AC2": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws ecs run-task --cluster ",
            {
              "Fn::GetAtt": [
                "SampleMultiRegionAppCluster9D88E1C2",
                "Arn",
              ],
            },
            " --task-definition ",
            {
              "Ref": "SampleMultiRegionAppCountMigrationTask5AEF8925",
            },
            " --launch-type FARGATE --overrides '{"containerOverrides": [{"name": "EcsApp", "command": ["npx", "prisma", "db", "push"] }]}' --network-configuration "awsvpcConfiguration={subnets=[",
            {
              "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
            },
            "],securityGroups=[",
            {
              "Fn::GetAtt": [
                "SampleMultiRegionAppCountFargateServiceSecurityGroup12EC9FEF",
                "GroupId",
              ],
            },
            "]}" --region ap-northeast-1 --profile ct-guest-sso",
          ],
        ],
      },
    },
    "SampleMultiRegionAppParamTableName1EDCBB71": {
      "Value": {
        "Ref": "SampleMultiRegionAppParamTable7082CE0D",
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SampleMultiRegionAppBalanceTaskCwAgentConfigParameterD8E57378": {
      "Default": "/ecs/cloudwatch-agent/application-signals-config",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SampleMultiRegionAppCountTaskCwAgentConfigParameter4DE954CF": {
      "Default": "/ecs/cloudwatch-agent/application-signals-config",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SampleMultiRegionAppTransactionTaskCwAgentConfigParameter78C5D1CB": {
      "Default": "/ecs/cloudwatch-agent/application-signals-config",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SampleMultiRegionAppTransactionWorkerTaskCwAgentConfigParameter827C8A14": {
      "Default": "/ecs/cloudwatch-agent/application-signals-config",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
      "DependsOn": [
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-111111111111-ap-northeast-1",
          "S3Key": "4cd2f2411231aa073e609dc99a49b5c5e974252bf9abf0f9350d237d17cce8be.zip",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 120,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AppKey2AF25043": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "Description": "for App",
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::111111111111:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Encrypt*",
                "kms:Decrypt*",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
                "kms:Describe*",
              ],
              "Condition": {
                "ArnLike": {
                  "kms:EncryptionContext:aws:logs:arn": "arn:aws:logs:ap-northeast-1:111111111111:*",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "logs.ap-northeast-1.amazonaws.com",
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "AppKeyAlias41A6B934": {
      "Properties": {
        "AliasName": "alias/AppKey-for-app",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "AppKey2AF25043",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
    "BLEAFSICoreBankingprimaryDBAuroraPgAuroraClusterSecret7B31D2F13fdaad7efa858a3daf9490cf0a702aeb": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Description": {
          "Fn::Join": [
            "",
            [
              "Generated by the CDK for stack: ",
              {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@"\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{"username":"dbadmin"}",
        },
        "ReplicaRegions": [
          {
            "Region": "ap-northeast-3",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "BackupAWSBackupDefaultServiceRole62616D2E": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "backup.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSBackupServiceRolePolicyForBackup",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSBackupServiceRolePolicyForRestores",
              ],
            ],
          },
        ],
        "Path": "/service-role/",
        "RoleName": "AWSBackupDefaultServiceRole",
      },
      "Type": "AWS::IAM::Role",
    },
    "BackupBackupPlan6FE80559": {
      "Properties": {
        "BackupPlan": {
          "BackupPlanName": "BackupPlan",
          "BackupPlanRule": [
            {
              "CompletionWindowMinutes": 480,
              "EnableContinuousBackup": true,
              "Lifecycle": {
                "DeleteAfterDays": 10,
              },
              "RuleName": "BackupPlanRule0",
              "ScheduleExpression": "cron(0 16 * * ? *)",
              "StartWindowMinutes": 60,
              "TargetBackupVault": {
                "Fn::GetAtt": [
                  "BackupBackupVault4EE1ADCE",
                  "BackupVaultName",
                ],
              },
            },
          ],
        },
      },
      "Type": "AWS::Backup::BackupPlan",
    },
    "BackupBackupSelectionE620CB8C": {
      "Properties": {
        "BackupPlanId": {
          "Fn::GetAtt": [
            "BackupBackupPlan6FE80559",
            "BackupPlanId",
          ],
        },
        "BackupSelection": {
          "IamRoleArn": {
            "Fn::GetAtt": [
              "BackupBackupSelectionRoleCC3073D1",
              "Arn",
            ],
          },
          "Resources": [
            {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":rds:ap-northeast-1:111111111111:cluster:",
                  {
                    "Ref": "DBAuroraPgAuroraCluster654F0C65",
                  },
                ],
              ],
            },
            {
              "Fn::GetAtt": [
                "transactionDBDynamoDb",
                "Arn",
              ],
            },
          ],
          "SelectionName": "BackupSelection",
        },
      },
      "Type": "AWS::Backup::BackupSelection",
    },
    "BackupBackupSelectionRoleCC3073D1": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "backup.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSBackupServiceRolePolicyForBackup",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "BackupBackupVault4EE1ADCE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "BackupVaultName": "BLEAFSICoreBankingprimaryBackupBackupVaultB2DFAF93",
        "LockConfiguration": {
          "MaxRetentionDays": 10,
          "MinRetentionDays": 1,
        },
      },
      "Type": "AWS::Backup::BackupVault",
      "UpdateReplacePolicy": "Retain",
    },
    "ContainerImagesampleecsappproject3CC5178F": {
      "Properties": {
        "Artifacts": {
          "Type": "NO_ARTIFACTS",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "EncryptionKey": "alias/aws/s3",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": [
            {
              "Name": "AWS_DEFAULT_REGION",
              "Type": "PLAINTEXT",
              "Value": "ap-northeast-1",
            },
            {
              "Name": "AWS_ACCOUNT_ID",
              "Type": "PLAINTEXT",
              "Value": "111111111111",
            },
            {
              "Name": "IMAGE_TAG",
              "Type": "PLAINTEXT",
              "Value": "sample-ecs-app",
            },
            {
              "Name": "IMAGE_REPO_NAME",
              "Type": "PLAINTEXT",
              "Value": {
                "Ref": "ECRapprepo376558DE",
              },
            },
          ],
          "Image": "aws/codebuild/standard:4.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": true,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "ContainerImagesampleecsappprojectRole2779E57F",
            "Arn",
          ],
        },
        "Source": {
          "Location": "cdk-hnb659fds-assets-111111111111-ap-northeast-1/80f730532f1195ed4fede75fbf8191acdfc52e6721de3b612c0c6a7eab1dbbc1.zip",
          "Type": "S3",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "ContainerImagesampleecsappprojectRole2779E57F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "ContainerImagesampleecsappprojectRoleDefaultPolicy4CA66C3B": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::cdk-hnb659fds-assets-111111111111-ap-northeast-1",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::cdk-hnb659fds-assets-111111111111-ap-northeast-1/80f730532f1195ed4fede75fbf8191acdfc52e6721de3b612c0c6a7eab1dbbc1.zip",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:ap-northeast-1:111111111111:log-group:/aws/codebuild/",
                      {
                        "Ref": "ContainerImagesampleecsappproject3CC5178F",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:ap-northeast-1:111111111111:log-group:/aws/codebuild/",
                      {
                        "Ref": "ContainerImagesampleecsappproject3CC5178F",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:ap-northeast-1:111111111111:report-group/",
                    {
                      "Ref": "ContainerImagesampleecsappproject3CC5178F",
                    },
                    "-*",
                  ],
                ],
              },
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:CompleteLayerUpload",
                "ecr:InitiateLayerUpload",
                "ecr:PutImage",
                "ecr:UploadLayerPart",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ecr:ap-northeast-1:111111111111:repository/",
                    {
                      "Ref": "ECRapprepo376558DE",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ContainerImagesampleecsappprojectRoleDefaultPolicy4CA66C3B",
        "Roles": [
          {
            "Ref": "ContainerImagesampleecsappprojectRole2779E57F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ContainerImagestartBuild34814DC1": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "ContainerImagestartBuildCustomResourcePolicy53F65DAB",
      ],
      "Properties": {
        "Create": {
          "Fn::Join": [
            "",
            [
              "{"service":"CodeBuild","action":"startBuild","parameters":{"projectName":"",
              {
                "Ref": "ContainerImagesampleecsappproject3CC5178F",
              },
              ""},"physicalResourceId":{"id":"",
              {
                "Fn::GetAtt": [
                  "ContainerImagesampleecsappproject3CC5178F",
                  "Arn",
                ],
              },
              ""}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "ContainerImagestartBuildCustomResourcePolicy53F65DAB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "codebuild:StartBuild",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ContainerImagesampleecsappproject3CC5178F",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ContainerImagestartBuildCustomResourcePolicy53F65DAB",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
      "DependsOn": [
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-111111111111-ap-northeast-1",
          "S3Key": "4fe0aba5e672b596d0f72505a9eec502f98d46906bb30fae2511fbdc1df4956f.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem",
          },
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "SampleAppClientDeployAwsCliLayer84CF29A7",
          },
        ],
        "Role": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::cdk-hnb659fds-assets-111111111111-ap-northeast-1",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::cdk-hnb659fds-assets-111111111111-ap-northeast-1/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SampleAppClientBucket4BBBAACF",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "SampleAppClientBucket4BBBAACF",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "Roles": [
          {
            "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CustomCrossRegionExportWriterCustomResourceProviderHandlerD8786E8A": {
      "DependsOn": [
        "CustomCrossRegionExportWriterCustomResourceProviderRoleC951B1E1",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-111111111111-ap-northeast-1",
          "S3Key": "8a17fb3ceee821f797100bf65fa3047c164a08c03aa5a07fbcff9a676fb73b97.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomCrossRegionExportWriterCustomResourceProviderRoleC951B1E1",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomCrossRegionExportWriterCustomResourceProviderRoleC951B1E1": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:DeleteParameters",
                    "ssm:ListTagsForResource",
                    "ssm:GetParameters",
                    "ssm:PutParameter",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":ssm:ap-northeast-3:111111111111:parameter/cdk/exports/*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":ssm:us-west-2:111111111111:parameter/cdk/exports/*",
                        ],
                      ],
                    },
                  ],
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-111111111111-ap-northeast-1",
          "S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "SampleAppClientBucket4BBBAACF",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DBAuroraPgAuroraCPUUtil8FD0DC1C": {
      "Properties": {
        "ActionsEnabled": true,
        "AlarmActions": [
          {
            "Ref": "MonitorAlarmTopic1E34119C",
          },
        ],
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 3,
        "Dimensions": [
          {
            "Name": "DBClusterIdentifier",
            "Value": {
              "Ref": "DBAuroraPgAuroraCluster654F0C65",
            },
          },
        ],
        "EvaluationPeriods": 3,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "DBAuroraPgAuroraCluster654F0C65": {
      "DeletionPolicy": "Snapshot",
      "Properties": {
        "CopyTagsToSnapshot": true,
        "DBClusterParameterGroupName": "default.aurora-postgresql11",
        "DBSubnetGroupName": {
          "Ref": "DBAuroraPgAuroraClusterSubnets4FFFB644",
        },
        "DatabaseName": "mydbname",
        "EnableCloudwatchLogsExports": [
          "postgresql",
        ],
        "Engine": "aurora-postgresql",
        "EngineVersion": "11.9",
        "KmsKeyId": {
          "Fn::GetAtt": [
            "AppKey2AF25043",
            "Arn",
          ],
        },
        "MasterUserPassword": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:",
              {
                "Ref": "BLEAFSICoreBankingprimaryDBAuroraPgAuroraClusterSecret7B31D2F13fdaad7efa858a3daf9490cf0a702aeb",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": "dbadmin",
        "Port": 5432,
        "StorageEncrypted": true,
        "VpcSecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "DBAuroraPgSgRdsF3DC7367",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBCluster",
      "UpdateReplacePolicy": "Snapshot",
    },
    "DBAuroraPgAuroraClusterInstance1CA8DBC8C": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "VpcProtectedSubnet1DefaultRouteAEBDEDB0",
        "VpcProtectedSubnet1RouteTableAssociation62F625F2",
        "VpcProtectedSubnet2DefaultRouteA5CFB1D1",
        "VpcProtectedSubnet2RouteTableAssociation960FE2AC",
      ],
      "Properties": {
        "DBClusterIdentifier": {
          "Ref": "DBAuroraPgAuroraCluster654F0C65",
        },
        "DBInstanceClass": "db.r6g.large",
        "DBInstanceIdentifier": "instance1",
        "DBSubnetGroupName": {
          "Ref": "DBAuroraPgAuroraClusterSubnets4FFFB644",
        },
        "EnablePerformanceInsights": true,
        "Engine": "aurora-postgresql",
        "PerformanceInsightsKMSKeyId": {
          "Fn::GetAtt": [
            "AppKey2AF25043",
            "Arn",
          ],
        },
        "PerformanceInsightsRetentionPeriod": 7,
        "PubliclyAccessible": false,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "DBAuroraPgAuroraClusterInstance20FAB99C5": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "VpcProtectedSubnet1DefaultRouteAEBDEDB0",
        "VpcProtectedSubnet1RouteTableAssociation62F625F2",
        "VpcProtectedSubnet2DefaultRouteA5CFB1D1",
        "VpcProtectedSubnet2RouteTableAssociation960FE2AC",
      ],
      "Properties": {
        "DBClusterIdentifier": {
          "Ref": "DBAuroraPgAuroraCluster654F0C65",
        },
        "DBInstanceClass": "db.r6g.large",
        "DBInstanceIdentifier": "instance2",
        "DBSubnetGroupName": {
          "Ref": "DBAuroraPgAuroraClusterSubnets4FFFB644",
        },
        "EnablePerformanceInsights": true,
        "Engine": "aurora-postgresql",
        "PerformanceInsightsKMSKeyId": {
          "Fn::GetAtt": [
            "AppKey2AF25043",
            "Arn",
          ],
        },
        "PerformanceInsightsRetentionPeriod": 7,
        "PubliclyAccessible": false,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "DBAuroraPgAuroraClusterLogRetentionpostgresql3C66E2AA": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/rds/cluster/",
              {
                "Ref": "DBAuroraPgAuroraCluster654F0C65",
              },
              "/postgresql",
            ],
          ],
        },
        "RetentionInDays": 90,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "DBAuroraPgAuroraClusterSecretAttachment79578D24": {
      "Properties": {
        "SecretId": {
          "Ref": "BLEAFSICoreBankingprimaryDBAuroraPgAuroraClusterSecret7B31D2F13fdaad7efa858a3daf9490cf0a702aeb",
        },
        "TargetId": {
          "Ref": "DBAuroraPgAuroraCluster654F0C65",
        },
        "TargetType": "AWS::RDS::DBCluster",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "DBAuroraPgAuroraClusterSubnets4FFFB644": {
      "Properties": {
        "DBSubnetGroupDescription": "Subnets for AuroraCluster database",
        "SubnetIds": [
          {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "DBAuroraPgMyCfnGlobalCluster713F685E": {
      "Properties": {
        "DeletionProtection": false,
        "GlobalClusterIdentifier": "core-banking-global-db",
        "SourceDBClusterIdentifier": {
          "Ref": "DBAuroraPgAuroraCluster654F0C65",
        },
      },
      "Type": "AWS::RDS::GlobalCluster",
    },
    "DBAuroraPgRdsEventsCluster22EF9729": {
      "Properties": {
        "Enabled": true,
        "EventCategories": [
          "failure",
          "failover",
          "maintenance",
        ],
        "SnsTopicArn": {
          "Ref": "MonitorAlarmTopic1E34119C",
        },
        "SourceType": "db-cluster",
      },
      "Type": "AWS::RDS::EventSubscription",
    },
    "DBAuroraPgRdsEventsInstances6B46FC66": {
      "Properties": {
        "Enabled": true,
        "EventCategories": [
          "availability",
          "configuration change",
          "deletion",
          "failover",
          "failure",
          "maintenance",
          "notification",
          "recovery",
        ],
        "SnsTopicArn": {
          "Ref": "MonitorAlarmTopic1E34119C",
        },
        "SourceType": "db-instance",
      },
      "Type": "AWS::RDS::EventSubscription",
    },
    "DBAuroraPgSgRdsF3DC7367": {
      "Properties": {
        "GroupDescription": "BLEAFSI-CoreBanking-primary/DBAuroraPg/SgRds",
        "SecurityGroupEgress": [
          {
            "CidrIp": "255.255.255.255/32",
            "Description": "Disallow all traffic",
            "FromPort": 252,
            "IpProtocol": "icmp",
            "ToPort": 86,
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "DBAuroraPgSgRdsfromBLEAFSICoreBankingprimaryECSAppcontainerAppSampleBaseSgFargate4AFF3AB3IndirectPort26A274F5": {
      "Properties": {
        "Description": "from BLEAFSICoreBankingprimaryECSAppcontainerAppSampleBaseSgFargate4AFF3AB3:{IndirectPort}",
        "FromPort": {
          "Fn::GetAtt": [
            "DBAuroraPgAuroraCluster654F0C65",
            "Endpoint.Port",
          ],
        },
        "GroupId": {
          "Fn::GetAtt": [
            "DBAuroraPgSgRdsF3DC7367",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "ECSAppcontainerAppSampleBaseSgFargateA0785180",
            "GroupId",
          ],
        },
        "ToPort": {
          "Fn::GetAtt": [
            "DBAuroraPgAuroraCluster654F0C65",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "DBAuroraPgSgRdsfromBLEAFSICoreBankingprimarySampleMultiRegionAppBalanceFargateServiceSecurityGroup12675873IndirectPortB0E3CD0B": {
      "Properties": {
        "Description": "from BLEAFSICoreBankingprimarySampleMultiRegionAppBalanceFargateServiceSecurityGroup12675873:{IndirectPort}",
        "FromPort": {
          "Fn::GetAtt": [
            "DBAuroraPgAuroraCluster654F0C65",
            "Endpoint.Port",
          ],
        },
        "GroupId": {
          "Fn::GetAtt": [
            "DBAuroraPgSgRdsF3DC7367",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppBalanceFargateServiceSecurityGroup3FD93178",
            "GroupId",
          ],
        },
        "ToPort": {
          "Fn::GetAtt": [
            "DBAuroraPgAuroraCluster654F0C65",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "DBAuroraPgSgRdsfromBLEAFSICoreBankingprimarySampleMultiRegionAppCountFargateServiceSecurityGroupCBCB28B1IndirectPort9FC922E2": {
      "Properties": {
        "Description": "from BLEAFSICoreBankingprimarySampleMultiRegionAppCountFargateServiceSecurityGroupCBCB28B1:{IndirectPort}",
        "FromPort": {
          "Fn::GetAtt": [
            "DBAuroraPgAuroraCluster654F0C65",
            "Endpoint.Port",
          ],
        },
        "GroupId": {
          "Fn::GetAtt": [
            "DBAuroraPgSgRdsF3DC7367",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppCountFargateServiceSecurityGroup12EC9FEF",
            "GroupId",
          ],
        },
        "ToPort": {
          "Fn::GetAtt": [
            "DBAuroraPgAuroraCluster654F0C65",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "ECRCrrConfEC77F062": {
      "Properties": {
        "ReplicationConfiguration": {
          "Rules": [
            {
              "Destinations": [
                {
                  "Region": "ap-northeast-3",
                  "RegistryId": "111111111111",
                },
              ],
            },
          ],
        },
      },
      "Type": "AWS::ECR::ReplicationConfiguration",
    },
    "ECRapprepo376558DE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "ImageScanningConfiguration": {
          "ScanOnPush": true,
        },
      },
      "Type": "AWS::ECR::Repository",
      "UpdateReplacePolicy": "Retain",
    },
    "ECRapprepoImageScanComplete3439F67A": {
      "Properties": {
        "EventPattern": {
          "detail": {
            "repository-name": [
              {
                "Ref": "ECRapprepo376558DE",
              },
            ],
            "scan-status": [
              "COMPLETE",
            ],
          },
          "detail-type": [
            "ECR Image Scan",
          ],
          "source": [
            "aws.ecr",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Ref": "MonitorAlarmTopic1E34119C",
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "ECSAppcontainerAppSampleBaseAlbDB2A3544": {
      "DependsOn": [
        "ContainerImagesampleecsappproject3CC5178F",
        "ContainerImagesampleecsappprojectRoleDefaultPolicy4CA66C3B",
        "ContainerImagesampleecsappprojectRole2779E57F",
        "ContainerImagestartBuildCustomResourcePolicy53F65DAB",
        "ContainerImagestartBuild34814DC1",
      ],
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
          {
            "Key": "access_logs.s3.enabled",
            "Value": "true",
          },
          {
            "Key": "access_logs.s3.bucket",
            "Value": {
              "Ref": "ECSAppcontainerAppSampleBasealblogbucket0B3FD4EA",
            },
          },
        ],
        "Scheme": "internal",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "ECSAppcontainerAppSampleBaseSgAlb1B19B99D",
              "GroupId",
            ],
          },
        ],
        "Subnets": [
          {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "ECSAppcontainerAppSampleBaseAlbhttp258CB6B9": {
      "DependsOn": [
        "ContainerImagesampleecsappproject3CC5178F",
        "ContainerImagesampleecsappprojectRoleDefaultPolicy4CA66C3B",
        "ContainerImagesampleecsappprojectRole2779E57F",
        "ContainerImagestartBuildCustomResourcePolicy53F65DAB",
        "ContainerImagestartBuild34814DC1",
      ],
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "ECSAppcontainerAppSampleBaseAlbhttpEcsAppGroup5462138A",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "ECSAppcontainerAppSampleBaseAlbDB2A3544",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "ECSAppcontainerAppSampleBaseAlbhttpEcsAppGroup5462138A": {
      "DependsOn": [
        "ContainerImagesampleecsappproject3CC5178F",
        "ContainerImagesampleecsappprojectRoleDefaultPolicy4CA66C3B",
        "ContainerImagesampleecsappprojectRole2779E57F",
        "ContainerImagestartBuildCustomResourcePolicy53F65DAB",
        "ContainerImagestartBuild34814DC1",
      ],
      "Properties": {
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "30",
          },
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "ECSAppcontainerAppSampleBaseCluster569A303B": {
      "DependsOn": [
        "ContainerImagesampleecsappproject3CC5178F",
        "ContainerImagesampleecsappprojectRoleDefaultPolicy4CA66C3B",
        "ContainerImagesampleecsappprojectRole2779E57F",
        "ContainerImagestartBuildCustomResourcePolicy53F65DAB",
        "ContainerImagestartBuild34814DC1",
      ],
      "Properties": {
        "ClusterSettings": [
          {
            "Name": "containerInsights",
            "Value": "enabled",
          },
        ],
      },
      "Type": "AWS::ECS::Cluster",
    },
    "ECSAppcontainerAppSampleBaseCluster9D2F5822": {
      "DependsOn": [
        "ContainerImagesampleecsappproject3CC5178F",
        "ContainerImagesampleecsappprojectRoleDefaultPolicy4CA66C3B",
        "ContainerImagesampleecsappprojectRole2779E57F",
        "ContainerImagestartBuildCustomResourcePolicy53F65DAB",
        "ContainerImagestartBuild34814DC1",
      ],
      "Properties": {
        "CapacityProviders": [
          "FARGATE",
          "FARGATE_SPOT",
        ],
        "Cluster": {
          "Ref": "ECSAppcontainerAppSampleBaseCluster569A303B",
        },
        "DefaultCapacityProviderStrategy": [],
      },
      "Type": "AWS::ECS::ClusterCapacityProviderAssociations",
    },
    "ECSAppcontainerAppSampleBaseEcsServiceTaskRole91D7335C": {
      "DependsOn": [
        "ContainerImagesampleecsappproject3CC5178F",
        "ContainerImagesampleecsappprojectRoleDefaultPolicy4CA66C3B",
        "ContainerImagesampleecsappprojectRole2779E57F",
        "ContainerImagestartBuildCustomResourcePolicy53F65DAB",
        "ContainerImagestartBuild34814DC1",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "ECSAppcontainerAppSampleBaseEcsTask252AEDDF": {
      "DependsOn": [
        "ContainerImagesampleecsappproject3CC5178F",
        "ContainerImagesampleecsappprojectRoleDefaultPolicy4CA66C3B",
        "ContainerImagesampleecsappprojectRole2779E57F",
        "ContainerImagestartBuildCustomResourcePolicy53F65DAB",
        "ContainerImagestartBuild34814DC1",
      ],
      "Properties": {
        "ContainerDefinitions": [
          {
            "Cpu": 448,
            "Environment": [
              {
                "Name": "ENVIRONMENT_VARIABLE_SAMPLE_KEY",
                "Value": "Environment Variable Sample Value",
              },
            ],
            "Essential": true,
            "Image": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::Select": [
                      4,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Fn::GetAtt": [
                              "ECRapprepo376558DE",
                              "Arn",
                            ],
                          },
                        ],
                      },
                    ],
                  },
                  ".dkr.ecr.",
                  {
                    "Fn::Select": [
                      3,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Fn::GetAtt": [
                              "ECRapprepo376558DE",
                              "Arn",
                            ],
                          },
                        ],
                      },
                    ],
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix",
                  },
                  "/",
                  {
                    "Ref": "ECRapprepo376558DE",
                  },
                  ":sample-ecs-app",
                ],
              ],
            },
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "ECSAppcontainerAppSampleBaseFargateLogGroupA7A6AEB2",
                },
                "awslogs-region": "ap-northeast-1",
                "awslogs-stream-prefix": "BLEA-ECSApp-",
              },
            },
            "Memory": 960,
            "MemoryReservation": 768,
            "Name": "EcsApp",
            "PortMappings": [
              {
                "ContainerPort": 80,
                "Protocol": "tcp",
              },
            ],
          },
        ],
        "Cpu": "512",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "ECSAppcontainerAppSampleBaseEcsTaskExecutionRole023854EF",
            "Arn",
          ],
        },
        "Family": "BLEAFSICoreBankingprimaryECSAppcontainerAppSampleBaseEcsTask2D9BDBD1",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "ECSAppcontainerAppSampleBaseEcsServiceTaskRole91D7335C",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "ECSAppcontainerAppSampleBaseEcsTaskExecutionRole023854EF": {
      "DependsOn": [
        "ContainerImagesampleecsappproject3CC5178F",
        "ContainerImagesampleecsappprojectRoleDefaultPolicy4CA66C3B",
        "ContainerImagesampleecsappprojectRole2779E57F",
        "ContainerImagestartBuildCustomResourcePolicy53F65DAB",
        "ContainerImagestartBuild34814DC1",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "ECSAppcontainerAppSampleBaseEcsTaskExecutionRoleDefaultPolicy3EB42759": {
      "DependsOn": [
        "ContainerImagesampleecsappproject3CC5178F",
        "ContainerImagesampleecsappprojectRoleDefaultPolicy4CA66C3B",
        "ContainerImagesampleecsappprojectRole2779E57F",
        "ContainerImagestartBuildCustomResourcePolicy53F65DAB",
        "ContainerImagestartBuild34814DC1",
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ECRapprepo376558DE",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "ecr-public:GetAuthorizationToken",
                "sts:GetServiceBearerToken",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ECSAppcontainerAppSampleBaseFargateLogGroupA7A6AEB2",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ECSAppcontainerAppSampleBaseEcsTaskExecutionRoleDefaultPolicy3EB42759",
        "Roles": [
          {
            "Ref": "ECSAppcontainerAppSampleBaseEcsTaskExecutionRole023854EF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ECSAppcontainerAppSampleBaseFargateLogGroupA7A6AEB2": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ContainerImagesampleecsappproject3CC5178F",
        "ContainerImagesampleecsappprojectRoleDefaultPolicy4CA66C3B",
        "ContainerImagesampleecsappprojectRole2779E57F",
        "ContainerImagestartBuildCustomResourcePolicy53F65DAB",
        "ContainerImagestartBuild34814DC1",
      ],
      "Properties": {
        "KmsKeyId": {
          "Fn::GetAtt": [
            "AppKey2AF25043",
            "Arn",
          ],
        },
        "RetentionInDays": 90,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "ECSAppcontainerAppSampleBaseFargateServiceDAE6BFD9": {
      "DependsOn": [
        "ContainerImagesampleecsappproject3CC5178F",
        "ContainerImagesampleecsappprojectRoleDefaultPolicy4CA66C3B",
        "ContainerImagesampleecsappprojectRole2779E57F",
        "ContainerImagestartBuildCustomResourcePolicy53F65DAB",
        "ContainerImagestartBuild34814DC1",
        "ECSAppcontainerAppSampleBaseAlbhttpEcsAppGroup5462138A",
        "ECSAppcontainerAppSampleBaseAlbhttp258CB6B9",
        "ECSAppcontainerAppSampleBaseEcsServiceTaskRole91D7335C",
      ],
      "Properties": {
        "CapacityProviderStrategy": [
          {
            "CapacityProvider": "FARGATE",
            "Weight": 1,
          },
        ],
        "Cluster": {
          "Ref": "ECSAppcontainerAppSampleBaseCluster569A303B",
        },
        "DeploymentConfiguration": {
          "Alarms": {
            "AlarmNames": [],
            "Enable": false,
            "Rollback": false,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 2,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LoadBalancers": [
          {
            "ContainerName": "EcsApp",
            "ContainerPort": 80,
            "TargetGroupArn": {
              "Ref": "ECSAppcontainerAppSampleBaseAlbhttpEcsAppGroup5462138A",
            },
          },
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "ECSAppcontainerAppSampleBaseSgFargateA0785180",
                  "GroupId",
                ],
              },
            ],
            "Subnets": [
              {
                "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
              },
              {
                "Ref": "VpcProtectedSubnet2SubnetC22C3325",
              },
            ],
          },
        },
        "PlatformVersion": "LATEST",
        "TaskDefinition": {
          "Ref": "ECSAppcontainerAppSampleBaseEcsTask252AEDDF",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "ECSAppcontainerAppSampleBaseSgAlb1B19B99D": {
      "DependsOn": [
        "ContainerImagesampleecsappproject3CC5178F",
        "ContainerImagesampleecsappprojectRoleDefaultPolicy4CA66C3B",
        "ContainerImagesampleecsappprojectRole2779E57F",
        "ContainerImagestartBuildCustomResourcePolicy53F65DAB",
        "ContainerImagestartBuild34814DC1",
      ],
      "Properties": {
        "GroupDescription": "BLEAFSI-CoreBanking-primary/ECSApp/containerAppSampleBase/SgAlb",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "ECSAppcontainerAppSampleBaseSgAlbtoBLEAFSICoreBankingprimaryECSAppcontainerAppSampleBaseSgFargate4AFF3AB3803E6A1F65": {
      "DependsOn": [
        "ContainerImagesampleecsappproject3CC5178F",
        "ContainerImagesampleecsappprojectRoleDefaultPolicy4CA66C3B",
        "ContainerImagesampleecsappprojectRole2779E57F",
        "ContainerImagestartBuildCustomResourcePolicy53F65DAB",
        "ContainerImagestartBuild34814DC1",
      ],
      "Properties": {
        "Description": "to BLEAFSICoreBankingprimaryECSAppcontainerAppSampleBaseSgFargate4AFF3AB3:80",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "ECSAppcontainerAppSampleBaseSgFargateA0785180",
            "GroupId",
          ],
        },
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "ECSAppcontainerAppSampleBaseSgAlb1B19B99D",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "ECSAppcontainerAppSampleBaseSgFargateA0785180": {
      "DependsOn": [
        "ContainerImagesampleecsappproject3CC5178F",
        "ContainerImagesampleecsappprojectRoleDefaultPolicy4CA66C3B",
        "ContainerImagesampleecsappprojectRole2779E57F",
        "ContainerImagestartBuildCustomResourcePolicy53F65DAB",
        "ContainerImagestartBuild34814DC1",
      ],
      "Properties": {
        "GroupDescription": "BLEAFSI-CoreBanking-primary/ECSApp/containerAppSampleBase/SgFargate",
        "SecurityGroupEgress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "Vpc8378EB38",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "Vpc8378EB38",
                      "CidrBlock",
                    ],
                  },
                  ":ALL PORTS",
                ],
              ],
            },
            "FromPort": 0,
            "IpProtocol": "tcp",
            "ToPort": 65535,
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "ECSAppcontainerAppSampleBaseSgFargatefromBLEAFSICoreBankingprimaryECSAppcontainerAppSampleBaseSgAlbDBCA533080A80EFA87": {
      "DependsOn": [
        "ContainerImagesampleecsappproject3CC5178F",
        "ContainerImagesampleecsappprojectRoleDefaultPolicy4CA66C3B",
        "ContainerImagesampleecsappprojectRole2779E57F",
        "ContainerImagestartBuildCustomResourcePolicy53F65DAB",
        "ContainerImagestartBuild34814DC1",
      ],
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "ECSAppcontainerAppSampleBaseSgFargateA0785180",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "ECSAppcontainerAppSampleBaseSgAlb1B19B99D",
            "GroupId",
          ],
        },
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "ECSAppcontainerAppSampleBaseSgFargatetoBLEAFSICoreBankingprimaryDBAuroraPgSgRds06093A6BIndirectPort4AA907E0": {
      "DependsOn": [
        "ContainerImagesampleecsappproject3CC5178F",
        "ContainerImagesampleecsappprojectRoleDefaultPolicy4CA66C3B",
        "ContainerImagesampleecsappprojectRole2779E57F",
        "ContainerImagestartBuildCustomResourcePolicy53F65DAB",
        "ContainerImagestartBuild34814DC1",
      ],
      "Properties": {
        "Description": "to BLEAFSICoreBankingprimaryDBAuroraPgSgRds06093A6B:{IndirectPort}",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "DBAuroraPgSgRdsF3DC7367",
            "GroupId",
          ],
        },
        "FromPort": {
          "Fn::GetAtt": [
            "DBAuroraPgAuroraCluster654F0C65",
            "Endpoint.Port",
          ],
        },
        "GroupId": {
          "Fn::GetAtt": [
            "ECSAppcontainerAppSampleBaseSgFargateA0785180",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": {
          "Fn::GetAtt": [
            "DBAuroraPgAuroraCluster654F0C65",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "ECSAppcontainerAppSampleBaseWebAclAssociation64E05BAF": {
      "DependsOn": [
        "ContainerImagesampleecsappproject3CC5178F",
        "ContainerImagesampleecsappprojectRoleDefaultPolicy4CA66C3B",
        "ContainerImagesampleecsappprojectRole2779E57F",
        "ContainerImagestartBuildCustomResourcePolicy53F65DAB",
        "ContainerImagestartBuild34814DC1",
      ],
      "Properties": {
        "ResourceArn": {
          "Ref": "ECSAppcontainerAppSampleBaseAlbDB2A3544",
        },
        "WebACLArn": {
          "Fn::GetAtt": [
            "WafWebAclBE24253C",
            "Arn",
          ],
        },
      },
      "Type": "AWS::WAFv2::WebACLAssociation",
    },
    "ECSAppcontainerAppSampleBasealblogbucket0B3FD4EA": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ContainerImagesampleecsappproject3CC5178F",
        "ContainerImagesampleecsappprojectRoleDefaultPolicy4CA66C3B",
        "ContainerImagesampleecsappprojectRole2779E57F",
        "ContainerImagestartBuildCustomResourcePolicy53F65DAB",
        "ContainerImagestartBuild34814DC1",
      ],
      "Properties": {
        "AccessControl": "Private",
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "ECSAppcontainerAppSampleBasealblogbucketPolicy03FEA10B": {
      "DependsOn": [
        "ContainerImagesampleecsappproject3CC5178F",
        "ContainerImagesampleecsappprojectRoleDefaultPolicy4CA66C3B",
        "ContainerImagesampleecsappprojectRole2779E57F",
        "ContainerImagestartBuildCustomResourcePolicy53F65DAB",
        "ContainerImagestartBuild34814DC1",
      ],
      "Properties": {
        "Bucket": {
          "Ref": "ECSAppcontainerAppSampleBasealblogbucket0B3FD4EA",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ECSAppcontainerAppSampleBasealblogbucket0B3FD4EA",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ECSAppcontainerAppSampleBasealblogbucket0B3FD4EA",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "s3:PutObject",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::582318560864:root",
                    ],
                  ],
                },
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "ECSAppcontainerAppSampleBasealblogbucket0B3FD4EA",
                        "Arn",
                      ],
                    },
                    "/AWSLogs/111111111111/*",
                  ],
                ],
              },
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "StringEquals": {
                  "s3:x-amz-acl": "bucket-owner-full-control",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "delivery.logs.amazonaws.com",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "ECSAppcontainerAppSampleBasealblogbucket0B3FD4EA",
                        "Arn",
                      ],
                    },
                    "/AWSLogs/111111111111/*",
                  ],
                ],
              },
            },
            {
              "Action": "s3:GetBucketAcl",
              "Effect": "Allow",
              "Principal": {
                "Service": "delivery.logs.amazonaws.com",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "ECSAppcontainerAppSampleBasealblogbucket0B3FD4EA",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "ECSAppcrossRegionSsmParamSsmParamEcrAppImageTag4833040E": {
      "DependsOn": [
        "ContainerImagesampleecsappproject3CC5178F",
        "ContainerImagesampleecsappprojectRoleDefaultPolicy4CA66C3B",
        "ContainerImagesampleecsappprojectRole2779E57F",
        "ContainerImagestartBuildCustomResourcePolicy53F65DAB",
        "ContainerImagestartBuild34814DC1",
        "ECSAppcontainerAppSampleBasealblogbucketPolicy03FEA10B",
        "ECSAppcontainerAppSampleBasealblogbucket0B3FD4EA",
        "ECSAppcontainerAppSampleBaseAlbhttpEcsAppGroup5462138A",
        "ECSAppcontainerAppSampleBaseAlbhttp258CB6B9",
        "ECSAppcontainerAppSampleBaseAlbDB2A3544",
        "ECSAppcontainerAppSampleBaseCluster9D2F5822",
        "ECSAppcontainerAppSampleBaseCluster569A303B",
        "ECSAppcontainerAppSampleBaseEcsServiceTaskRole91D7335C",
        "ECSAppcontainerAppSampleBaseEcsTask252AEDDF",
        "ECSAppcontainerAppSampleBaseEcsTaskExecutionRoleDefaultPolicy3EB42759",
        "ECSAppcontainerAppSampleBaseEcsTaskExecutionRole023854EF",
        "ECSAppcontainerAppSampleBaseFargateLogGroupA7A6AEB2",
        "ECSAppcontainerAppSampleBaseFargateServiceDAE6BFD9",
        "ECSAppcontainerAppSampleBaseSgAlb1B19B99D",
        "ECSAppcontainerAppSampleBaseSgAlbtoBLEAFSICoreBankingprimaryECSAppcontainerAppSampleBaseSgFargate4AFF3AB3803E6A1F65",
        "ECSAppcontainerAppSampleBaseSgFargatefromBLEAFSICoreBankingprimaryECSAppcontainerAppSampleBaseSgAlbDBCA533080A80EFA87",
        "ECSAppcontainerAppSampleBaseSgFargateA0785180",
        "ECSAppcontainerAppSampleBaseSgFargatetoBLEAFSICoreBankingprimaryDBAuroraPgSgRds06093A6BIndirectPort4AA907E0",
        "ECSAppcontainerAppSampleBaseWebAclAssociation64E05BAF",
      ],
      "Properties": {
        "Name": "/bleafsi/test/EcrAppImageTag",
        "Type": "String",
        "Value": "sample-ecs-app",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "ECSAppcrossRegionSsmParamSsmParamEcrAppRepositoryName75690733": {
      "DependsOn": [
        "ContainerImagesampleecsappproject3CC5178F",
        "ContainerImagesampleecsappprojectRoleDefaultPolicy4CA66C3B",
        "ContainerImagesampleecsappprojectRole2779E57F",
        "ContainerImagestartBuildCustomResourcePolicy53F65DAB",
        "ContainerImagestartBuild34814DC1",
        "ECSAppcontainerAppSampleBasealblogbucketPolicy03FEA10B",
        "ECSAppcontainerAppSampleBasealblogbucket0B3FD4EA",
        "ECSAppcontainerAppSampleBaseAlbhttpEcsAppGroup5462138A",
        "ECSAppcontainerAppSampleBaseAlbhttp258CB6B9",
        "ECSAppcontainerAppSampleBaseAlbDB2A3544",
        "ECSAppcontainerAppSampleBaseCluster9D2F5822",
        "ECSAppcontainerAppSampleBaseCluster569A303B",
        "ECSAppcontainerAppSampleBaseEcsServiceTaskRole91D7335C",
        "ECSAppcontainerAppSampleBaseEcsTask252AEDDF",
        "ECSAppcontainerAppSampleBaseEcsTaskExecutionRoleDefaultPolicy3EB42759",
        "ECSAppcontainerAppSampleBaseEcsTaskExecutionRole023854EF",
        "ECSAppcontainerAppSampleBaseFargateLogGroupA7A6AEB2",
        "ECSAppcontainerAppSampleBaseFargateServiceDAE6BFD9",
        "ECSAppcontainerAppSampleBaseSgAlb1B19B99D",
        "ECSAppcontainerAppSampleBaseSgAlbtoBLEAFSICoreBankingprimaryECSAppcontainerAppSampleBaseSgFargate4AFF3AB3803E6A1F65",
        "ECSAppcontainerAppSampleBaseSgFargatefromBLEAFSICoreBankingprimaryECSAppcontainerAppSampleBaseSgAlbDBCA533080A80EFA87",
        "ECSAppcontainerAppSampleBaseSgFargateA0785180",
        "ECSAppcontainerAppSampleBaseSgFargatetoBLEAFSICoreBankingprimaryDBAuroraPgSgRds06093A6BIndirectPort4AA907E0",
        "ECSAppcontainerAppSampleBaseWebAclAssociation64E05BAF",
      ],
      "Properties": {
        "Name": "/bleafsi/test/EcrAppRepositoryName",
        "Type": "String",
        "Value": {
          "Ref": "ECRapprepo376558DE",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "ExportsWriterapnortheast3D0FE0CB2ECD9158B": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomCrossRegionExportWriterCustomResourceProviderHandlerD8786E8A",
            "Arn",
          ],
        },
        "WriterProps": {
          "exports": {
            "/cdk/exports/BLEAFSI-CoreBanking-secondary/BLEAFSICoreBankingprimaryapnortheast1FnGetAttGetDefaultRouteTableId6DB194BATransitGateways0OptionsAssociationDefaultRouteTableIdFC78B5FF": {
              "Fn::GetAtt": [
                "GetDefaultRouteTableId6DB194BA",
                "TransitGateways.0.Options.AssociationDefaultRouteTableId",
              ],
            },
            "/cdk/exports/BLEAFSI-CoreBanking-secondary/BLEAFSICoreBankingprimaryapnortheast1FnGetAtttransactionDBDynamoDbArn1E79A864": {
              "Fn::GetAtt": [
                "transactionDBDynamoDb",
                "Arn",
              ],
            },
            "/cdk/exports/BLEAFSI-CoreBanking-secondary/BLEAFSICoreBankingprimaryapnortheast1RefBLEAFSICoreBankingprimaryDBAuroraPgAuroraClusterSecret7B31D2F13fdaad7efa858a3daf9490cf0a702aeb632D9498": {
              "Ref": "BLEAFSICoreBankingprimaryDBAuroraPgAuroraClusterSecret7B31D2F13fdaad7efa858a3daf9490cf0a702aeb",
            },
          },
          "region": "ap-northeast-3",
        },
      },
      "Type": "Custom::CrossRegionExportWriter",
      "UpdateReplacePolicy": "Delete",
    },
    "ExportsWriteruswest209BD44F0A7CF058B": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomCrossRegionExportWriterCustomResourceProviderHandlerD8786E8A",
            "Arn",
          ],
        },
        "WriterProps": {
          "exports": {
            "/cdk/exports/BLEAFSI-CoreBanking-monitoring/BLEAFSICoreBankingprimaryapnortheast1FnGetAttGetDefaultRouteTableId6DB194BATransitGateways0OptionsAssociationDefaultRouteTableIdFC78B5FF": {
              "Fn::GetAtt": [
                "GetDefaultRouteTableId6DB194BA",
                "TransitGateways.0.Options.AssociationDefaultRouteTableId",
              ],
            },
          },
          "region": "us-west-2",
        },
      },
      "Type": "Custom::CrossRegionExportWriter",
      "UpdateReplacePolicy": "Delete",
    },
    "GetDefaultRouteTableId6DB194BA": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "GetDefaultRouteTableIdCustomResourcePolicy2240EBDC",
      ],
      "Properties": {
        "Create": {
          "Fn::Join": [
            "",
            [
              "{"service":"EC2","action":"describeTransitGateways","parameters":{"TransitGatewayIds":["",
              {
                "Ref": "VpcTgw43A428E1",
              },
              ""]},"physicalResourceId":{"id":"GetDefaultRouteTableId"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": {
          "Fn::Join": [
            "",
            [
              "{"service":"EC2","action":"describeTransitGateways","parameters":{"TransitGatewayIds":["",
              {
                "Ref": "VpcTgw43A428E1",
              },
              ""]},"physicalResourceId":{"id":"GetDefaultRouteTableId"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "GetDefaultRouteTableIdCustomResourcePolicy2240EBDC": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ec2:DescribeTransitGateways",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GetDefaultRouteTableIdCustomResourcePolicy2240EBDC",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-111111111111-ap-northeast-1",
          "S3Key": "2819175352ad1ce0dae768e83fc328fb70fb5f10b4a8ff0ccbcb791f02b0716d.zip",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "MonitorAlarmEmailBA1444D7": {
      "Properties": {
        "Endpoint": "exsample@exsample.com",
        "Protocol": "email",
        "TopicArn": {
          "Ref": "MonitorAlarmTopic1E34119C",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "MonitorAlarmTopic1E34119C": {
      "Type": "AWS::SNS::Topic",
    },
    "MonitorAlarmTopicPolicy3B1D026A": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudwatch.amazonaws.com",
              },
              "Resource": {
                "Ref": "MonitorAlarmTopic1E34119C",
              },
              "Sid": "0",
            },
            {
              "Action": "sns:Publish",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false,
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": {
                "Ref": "MonitorAlarmTopic1E34119C",
              },
              "Sid": "EnforcePublishersToUseSSL",
            },
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
              "Resource": {
                "Ref": "MonitorAlarmTopic1E34119C",
              },
              "Sid": "2",
            },
          ],
          "Version": "2012-10-17",
        },
        "Topics": [
          {
            "Ref": "MonitorAlarmTopic1E34119C",
          },
        ],
      },
      "Type": "AWS::SNS::TopicPolicy",
    },
    "NlbNlbOnlyForTest6E63B1BF": {
      "DependsOn": [
        "ECSAppcontainerAppSampleBasealblogbucketPolicy03FEA10B",
        "ECSAppcontainerAppSampleBasealblogbucket0B3FD4EA",
        "ECSAppcontainerAppSampleBaseAlbhttpEcsAppGroup5462138A",
        "ECSAppcontainerAppSampleBaseAlbhttp258CB6B9",
        "ECSAppcontainerAppSampleBaseAlbDB2A3544",
        "ECSAppcontainerAppSampleBaseCluster9D2F5822",
        "ECSAppcontainerAppSampleBaseCluster569A303B",
        "ECSAppcontainerAppSampleBaseEcsServiceTaskRole91D7335C",
        "ECSAppcontainerAppSampleBaseEcsTask252AEDDF",
        "ECSAppcontainerAppSampleBaseEcsTaskExecutionRoleDefaultPolicy3EB42759",
        "ECSAppcontainerAppSampleBaseEcsTaskExecutionRole023854EF",
        "ECSAppcontainerAppSampleBaseFargateLogGroupA7A6AEB2",
        "ECSAppcontainerAppSampleBaseFargateServiceDAE6BFD9",
        "ECSAppcontainerAppSampleBaseSgAlb1B19B99D",
        "ECSAppcontainerAppSampleBaseSgAlbtoBLEAFSICoreBankingprimaryECSAppcontainerAppSampleBaseSgFargate4AFF3AB3803E6A1F65",
        "ECSAppcontainerAppSampleBaseSgFargatefromBLEAFSICoreBankingprimaryECSAppcontainerAppSampleBaseSgAlbDBCA533080A80EFA87",
        "ECSAppcontainerAppSampleBaseSgFargateA0785180",
        "ECSAppcontainerAppSampleBaseSgFargatetoBLEAFSICoreBankingprimaryDBAuroraPgSgRds06093A6BIndirectPort4AA907E0",
        "ECSAppcontainerAppSampleBaseWebAclAssociation64E05BAF",
        "ECSAppcrossRegionSsmParamSsmParamEcrAppImageTag4833040E",
        "ECSAppcrossRegionSsmParamSsmParamEcrAppRepositoryName75690733",
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1RouteTableAssociation97140677",
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
      ],
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Scheme": "internet-facing",
        "Subnets": [
          {
            "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
          },
          {
            "Ref": "VpcPublicSubnet2Subnet691E08A3",
          },
        ],
        "Type": "network",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "NlbNlbOnlyForTestTestNlbListenerB0BF1718": {
      "DependsOn": [
        "ECSAppcontainerAppSampleBasealblogbucketPolicy03FEA10B",
        "ECSAppcontainerAppSampleBasealblogbucket0B3FD4EA",
        "ECSAppcontainerAppSampleBaseAlbhttpEcsAppGroup5462138A",
        "ECSAppcontainerAppSampleBaseAlbhttp258CB6B9",
        "ECSAppcontainerAppSampleBaseAlbDB2A3544",
        "ECSAppcontainerAppSampleBaseCluster9D2F5822",
        "ECSAppcontainerAppSampleBaseCluster569A303B",
        "ECSAppcontainerAppSampleBaseEcsServiceTaskRole91D7335C",
        "ECSAppcontainerAppSampleBaseEcsTask252AEDDF",
        "ECSAppcontainerAppSampleBaseEcsTaskExecutionRoleDefaultPolicy3EB42759",
        "ECSAppcontainerAppSampleBaseEcsTaskExecutionRole023854EF",
        "ECSAppcontainerAppSampleBaseFargateLogGroupA7A6AEB2",
        "ECSAppcontainerAppSampleBaseFargateServiceDAE6BFD9",
        "ECSAppcontainerAppSampleBaseSgAlb1B19B99D",
        "ECSAppcontainerAppSampleBaseSgAlbtoBLEAFSICoreBankingprimaryECSAppcontainerAppSampleBaseSgFargate4AFF3AB3803E6A1F65",
        "ECSAppcontainerAppSampleBaseSgFargatefromBLEAFSICoreBankingprimaryECSAppcontainerAppSampleBaseSgAlbDBCA533080A80EFA87",
        "ECSAppcontainerAppSampleBaseSgFargateA0785180",
        "ECSAppcontainerAppSampleBaseSgFargatetoBLEAFSICoreBankingprimaryDBAuroraPgSgRds06093A6BIndirectPort4AA907E0",
        "ECSAppcontainerAppSampleBaseWebAclAssociation64E05BAF",
        "ECSAppcrossRegionSsmParamSsmParamEcrAppImageTag4833040E",
        "ECSAppcrossRegionSsmParamSsmParamEcrAppRepositoryName75690733",
      ],
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "NlbNlbOnlyForTestTestNlbListenerTargetAlbGroupAB2D8B51",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "NlbNlbOnlyForTest6E63B1BF",
        },
        "Port": 80,
        "Protocol": "TCP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "NlbNlbOnlyForTestTestNlbListenerTargetAlbGroupAB2D8B51": {
      "DependsOn": [
        "ECSAppcontainerAppSampleBasealblogbucketPolicy03FEA10B",
        "ECSAppcontainerAppSampleBasealblogbucket0B3FD4EA",
        "ECSAppcontainerAppSampleBaseAlbhttpEcsAppGroup5462138A",
        "ECSAppcontainerAppSampleBaseAlbhttp258CB6B9",
        "ECSAppcontainerAppSampleBaseAlbDB2A3544",
        "ECSAppcontainerAppSampleBaseCluster9D2F5822",
        "ECSAppcontainerAppSampleBaseCluster569A303B",
        "ECSAppcontainerAppSampleBaseEcsServiceTaskRole91D7335C",
        "ECSAppcontainerAppSampleBaseEcsTask252AEDDF",
        "ECSAppcontainerAppSampleBaseEcsTaskExecutionRoleDefaultPolicy3EB42759",
        "ECSAppcontainerAppSampleBaseEcsTaskExecutionRole023854EF",
        "ECSAppcontainerAppSampleBaseFargateLogGroupA7A6AEB2",
        "ECSAppcontainerAppSampleBaseFargateServiceDAE6BFD9",
        "ECSAppcontainerAppSampleBaseSgAlb1B19B99D",
        "ECSAppcontainerAppSampleBaseSgAlbtoBLEAFSICoreBankingprimaryECSAppcontainerAppSampleBaseSgFargate4AFF3AB3803E6A1F65",
        "ECSAppcontainerAppSampleBaseSgFargatefromBLEAFSICoreBankingprimaryECSAppcontainerAppSampleBaseSgAlbDBCA533080A80EFA87",
        "ECSAppcontainerAppSampleBaseSgFargateA0785180",
        "ECSAppcontainerAppSampleBaseSgFargatetoBLEAFSICoreBankingprimaryDBAuroraPgSgRds06093A6BIndirectPort4AA907E0",
        "ECSAppcontainerAppSampleBaseWebAclAssociation64E05BAF",
        "ECSAppcrossRegionSsmParamSsmParamEcrAppImageTag4833040E",
        "ECSAppcrossRegionSsmParamSsmParamEcrAppRepositoryName75690733",
      ],
      "Properties": {
        "Port": 80,
        "Protocol": "TCP",
        "TargetType": "alb",
        "Targets": [
          {
            "Id": {
              "Ref": "ECSAppcontainerAppSampleBaseAlbDB2A3544",
            },
            "Port": 80,
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "PrivateHostedZone6354E1BB": {
      "DependsOn": [
        "ECSAppcontainerAppSampleBasealblogbucketPolicy03FEA10B",
        "ECSAppcontainerAppSampleBasealblogbucket0B3FD4EA",
        "ECSAppcontainerAppSampleBaseAlbhttpEcsAppGroup5462138A",
        "ECSAppcontainerAppSampleBaseAlbhttp258CB6B9",
        "ECSAppcontainerAppSampleBaseAlbDB2A3544",
        "ECSAppcontainerAppSampleBaseCluster9D2F5822",
        "ECSAppcontainerAppSampleBaseCluster569A303B",
        "ECSAppcontainerAppSampleBaseEcsServiceTaskRole91D7335C",
        "ECSAppcontainerAppSampleBaseEcsTask252AEDDF",
        "ECSAppcontainerAppSampleBaseEcsTaskExecutionRoleDefaultPolicy3EB42759",
        "ECSAppcontainerAppSampleBaseEcsTaskExecutionRole023854EF",
        "ECSAppcontainerAppSampleBaseFargateLogGroupA7A6AEB2",
        "ECSAppcontainerAppSampleBaseFargateServiceDAE6BFD9",
        "ECSAppcontainerAppSampleBaseSgAlb1B19B99D",
        "ECSAppcontainerAppSampleBaseSgAlbtoBLEAFSICoreBankingprimaryECSAppcontainerAppSampleBaseSgFargate4AFF3AB3803E6A1F65",
        "ECSAppcontainerAppSampleBaseSgFargatefromBLEAFSICoreBankingprimaryECSAppcontainerAppSampleBaseSgAlbDBCA533080A80EFA87",
        "ECSAppcontainerAppSampleBaseSgFargateA0785180",
        "ECSAppcontainerAppSampleBaseSgFargatetoBLEAFSICoreBankingprimaryDBAuroraPgSgRds06093A6BIndirectPort4AA907E0",
        "ECSAppcontainerAppSampleBaseWebAclAssociation64E05BAF",
        "ECSAppcrossRegionSsmParamSsmParamEcrAppImageTag4833040E",
        "ECSAppcrossRegionSsmParamSsmParamEcrAppRepositoryName75690733",
      ],
      "Properties": {
        "Name": "example.com.",
        "VPCs": [
          {
            "VPCId": {
              "Ref": "Vpc8378EB38",
            },
            "VPCRegion": "ap-northeast-1",
          },
          {
            "VPCId": {
              "Ref": "SampleAppClientVpc8EC27D63",
            },
            "VPCRegion": "ap-northeast-1",
          },
        ],
      },
      "Type": "AWS::Route53::HostedZone",
    },
    "PrivateHostedZoneAliasRecord66C63538": {
      "DependsOn": [
        "ECSAppcontainerAppSampleBasealblogbucketPolicy03FEA10B",
        "ECSAppcontainerAppSampleBasealblogbucket0B3FD4EA",
        "ECSAppcontainerAppSampleBaseAlbhttpEcsAppGroup5462138A",
        "ECSAppcontainerAppSampleBaseAlbhttp258CB6B9",
        "ECSAppcontainerAppSampleBaseAlbDB2A3544",
        "ECSAppcontainerAppSampleBaseCluster9D2F5822",
        "ECSAppcontainerAppSampleBaseCluster569A303B",
        "ECSAppcontainerAppSampleBaseEcsServiceTaskRole91D7335C",
        "ECSAppcontainerAppSampleBaseEcsTask252AEDDF",
        "ECSAppcontainerAppSampleBaseEcsTaskExecutionRoleDefaultPolicy3EB42759",
        "ECSAppcontainerAppSampleBaseEcsTaskExecutionRole023854EF",
        "ECSAppcontainerAppSampleBaseFargateLogGroupA7A6AEB2",
        "ECSAppcontainerAppSampleBaseFargateServiceDAE6BFD9",
        "ECSAppcontainerAppSampleBaseSgAlb1B19B99D",
        "ECSAppcontainerAppSampleBaseSgAlbtoBLEAFSICoreBankingprimaryECSAppcontainerAppSampleBaseSgFargate4AFF3AB3803E6A1F65",
        "ECSAppcontainerAppSampleBaseSgFargatefromBLEAFSICoreBankingprimaryECSAppcontainerAppSampleBaseSgAlbDBCA533080A80EFA87",
        "ECSAppcontainerAppSampleBaseSgFargateA0785180",
        "ECSAppcontainerAppSampleBaseSgFargatetoBLEAFSICoreBankingprimaryDBAuroraPgSgRds06093A6BIndirectPort4AA907E0",
        "ECSAppcontainerAppSampleBaseWebAclAssociation64E05BAF",
        "ECSAppcrossRegionSsmParamSsmParamEcrAppImageTag4833040E",
        "ECSAppcrossRegionSsmParamSsmParamEcrAppRepositoryName75690733",
      ],
      "Properties": {
        "AliasTarget": {
          "DNSName": {
            "Fn::Join": [
              "",
              [
                "dualstack.",
                {
                  "Fn::GetAtt": [
                    "ECSAppcontainerAppSampleBaseAlbDB2A3544",
                    "DNSName",
                  ],
                },
              ],
            ],
          },
          "HostedZoneId": {
            "Fn::GetAtt": [
              "ECSAppcontainerAppSampleBaseAlbDB2A3544",
              "CanonicalHostedZoneID",
            ],
          },
        },
        "HostedZoneId": {
          "Ref": "PrivateHostedZone6354E1BB",
        },
        "Name": "example.com.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "PrivateHostedZonecrossRegionSsmParamSsmParamPrivateHostedZoneId369E6875": {
      "DependsOn": [
        "ECSAppcontainerAppSampleBasealblogbucketPolicy03FEA10B",
        "ECSAppcontainerAppSampleBasealblogbucket0B3FD4EA",
        "ECSAppcontainerAppSampleBaseAlbhttpEcsAppGroup5462138A",
        "ECSAppcontainerAppSampleBaseAlbhttp258CB6B9",
        "ECSAppcontainerAppSampleBaseAlbDB2A3544",
        "ECSAppcontainerAppSampleBaseCluster9D2F5822",
        "ECSAppcontainerAppSampleBaseCluster569A303B",
        "ECSAppcontainerAppSampleBaseEcsServiceTaskRole91D7335C",
        "ECSAppcontainerAppSampleBaseEcsTask252AEDDF",
        "ECSAppcontainerAppSampleBaseEcsTaskExecutionRoleDefaultPolicy3EB42759",
        "ECSAppcontainerAppSampleBaseEcsTaskExecutionRole023854EF",
        "ECSAppcontainerAppSampleBaseFargateLogGroupA7A6AEB2",
        "ECSAppcontainerAppSampleBaseFargateServiceDAE6BFD9",
        "ECSAppcontainerAppSampleBaseSgAlb1B19B99D",
        "ECSAppcontainerAppSampleBaseSgAlbtoBLEAFSICoreBankingprimaryECSAppcontainerAppSampleBaseSgFargate4AFF3AB3803E6A1F65",
        "ECSAppcontainerAppSampleBaseSgFargatefromBLEAFSICoreBankingprimaryECSAppcontainerAppSampleBaseSgAlbDBCA533080A80EFA87",
        "ECSAppcontainerAppSampleBaseSgFargateA0785180",
        "ECSAppcontainerAppSampleBaseSgFargatetoBLEAFSICoreBankingprimaryDBAuroraPgSgRds06093A6BIndirectPort4AA907E0",
        "ECSAppcontainerAppSampleBaseWebAclAssociation64E05BAF",
        "ECSAppcrossRegionSsmParamSsmParamEcrAppImageTag4833040E",
        "ECSAppcrossRegionSsmParamSsmParamEcrAppRepositoryName75690733",
      ],
      "Properties": {
        "Name": "/bleafsi/test/PrivateHostedZoneId",
        "Type": "String",
        "Value": {
          "Ref": "PrivateHostedZone6354E1BB",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "ReplicationDynamoDBServiceLinkeRole": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "UpsertSlrCustomResourceHandler8f7be66a3315474baea16ceca43d27c35E89C93F",
            "Arn",
          ],
        },
        "awsServiceName": "replication.dynamodb.amazonaws.com",
        "description": "Service linked role for dynamodb global tables",
        "waitTimeSeconds": 60,
      },
      "Type": "Custom::UpsertServiceLinkedRole",
      "UpdateReplacePolicy": "Delete",
    },
    "SampleAppClientBucket4BBBAACF": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
          {
            "Key": "aws-cdk:cr-owned:client:d80d5e0e",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "SampleAppClientBucketAutoDeleteObjectsCustomResource58334B99": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "SampleAppClientBucketPolicy3869F99F",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "SampleAppClientBucket4BBBAACF",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "SampleAppClientBucketPolicy3869F99F": {
      "Properties": {
        "Bucket": {
          "Ref": "SampleAppClientBucket4BBBAACF",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SampleAppClientBucket4BBBAACF",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "SampleAppClientBucket4BBBAACF",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SampleAppClientBucket4BBBAACF",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "SampleAppClientBucket4BBBAACF",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "SampleAppClientDeployAwsCliLayer84CF29A7": {
      "Properties": {
        "Content": {
          "S3Bucket": "cdk-hnb659fds-assets-111111111111-ap-northeast-1",
          "S3Key": "12157b27d30ab71eb24ae65825f672ba5cc2c09dbb1703cd7adfcff3aeaca136.zip",
        },
        "Description": "/opt/awscli/aws",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "SampleAppClientDeployCustomResourceE56A6567": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "DestinationBucketKeyPrefix": "client",
        "DestinationBucketName": {
          "Ref": "SampleAppClientBucket4BBBAACF",
        },
        "OutputObjectKeys": true,
        "Prune": true,
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
            "Arn",
          ],
        },
        "SourceBucketNames": [
          "cdk-hnb659fds-assets-111111111111-ap-northeast-1",
        ],
        "SourceObjectKeys": [
          "a0c01a498f7dbc84fb9293e1f4541a90dd184d7d0e4c8308188e6ee716ea1f5a.zip",
        ],
      },
      "Type": "Custom::CDKBucketDeployment",
      "UpdateReplacePolicy": "Delete",
    },
    "SampleAppClientInstanceF6BD53A1": {
      "DependsOn": [
        "SampleAppClientDeployAwsCliLayer84CF29A7",
        "SampleAppClientDeployCustomResourceE56A6567",
        "SampleAppClientInstanceInstanceRoleDefaultPolicyE8D72C41",
        "SampleAppClientInstanceInstanceRole344FC108",
      ],
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "Encrypted": true,
              "VolumeSize": 20,
              "VolumeType": "gp3",
            },
          },
        ],
        "IamInstanceProfile": {
          "Ref": "SampleAppClientInstanceInstanceProfile08038138",
        },
        "ImageId": "dummy-value-for-/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64",
        "InstanceType": "t3.nano",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "SampleAppClientInstanceInstanceSecurityGroup6E48D151",
              "GroupId",
            ],
          },
        ],
        "SubnetId": {
          "Ref": "SampleAppClientVpcPublicSubnet1SubnetB3271DC8",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "BastionHost",
          },
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash
yum install -y docker
systemctl enable docker
systemctl start docker
usermod -aG docker ec2-user
chmod 777 /var/run/docker.sock
yum install -y tmux htop
echo '#!/bin/bash' > /home/ec2-user/pull.sh
echo 'aws s3 sync s3://",
                {
                  "Ref": "SampleAppClientBucket4BBBAACF",
                },
                "/client /home/ec2-user/client' >> /home/ec2-user/pull.sh
chown ec2-user /home/ec2-user/pull.sh
chmod +x /home/ec2-user/pull.sh
sudo -u ec2-user bash -c "cd /home/ec2-user/ && ./pull.sh"
sudo -u ec2-user bash -c "cd /home/ec2-user/client && docker build -t client ."
sudo -u ec2-user bash -c "docker run --name client -d --restart unless-stopped -p 8089:8089 client"",
              ],
            ],
          },
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "SampleAppClientInstanceInstanceProfile08038138": {
      "DependsOn": [
        "SampleAppClientDeployAwsCliLayer84CF29A7",
        "SampleAppClientDeployCustomResourceE56A6567",
      ],
      "Properties": {
        "Roles": [
          {
            "Ref": "SampleAppClientInstanceInstanceRole344FC108",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "SampleAppClientInstanceInstanceRole344FC108": {
      "DependsOn": [
        "SampleAppClientDeployAwsCliLayer84CF29A7",
        "SampleAppClientDeployCustomResourceE56A6567",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "BastionHost",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SampleAppClientInstanceInstanceRoleDefaultPolicyE8D72C41": {
      "DependsOn": [
        "SampleAppClientDeployAwsCliLayer84CF29A7",
        "SampleAppClientDeployCustomResourceE56A6567",
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ssmmessages:*",
                "ssm:UpdateInstanceInformation",
                "ec2messages:*",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SampleAppClientBucket4BBBAACF",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "SampleAppClientBucket4BBBAACF",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SampleAppClientInstanceInstanceRoleDefaultPolicyE8D72C41",
        "Roles": [
          {
            "Ref": "SampleAppClientInstanceInstanceRole344FC108",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SampleAppClientInstanceInstanceSecurityGroup6E48D151": {
      "DependsOn": [
        "SampleAppClientDeployAwsCliLayer84CF29A7",
        "SampleAppClientDeployCustomResourceE56A6567",
      ],
      "Properties": {
        "GroupDescription": "BLEAFSI-CoreBanking-primary/SampleAppClient/Instance/Resource/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "BastionHost",
          },
        ],
        "VpcId": {
          "Ref": "SampleAppClientVpc8EC27D63",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SampleAppClientVpc8EC27D63": {
      "Properties": {
        "CidrBlock": "10.100.16.0/24",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/SampleAppClient/Vpc/Default",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "SampleAppClientVpcForTgwAttachmentsSubnet1RouteTableAssociation1130B15A": {
      "Properties": {
        "RouteTableId": {
          "Ref": "SampleAppClientVpcForTgwAttachmentsSubnet1RouteTableF8B3E64D",
        },
        "SubnetId": {
          "Ref": "SampleAppClientVpcForTgwAttachmentsSubnet1SubnetDBCFB191",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "SampleAppClientVpcForTgwAttachmentsSubnet1RouteTableF8B3E64D": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/SampleAppClient/Vpc/Default/ForTgwAttachmentsSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "SampleAppClientVpc8EC27D63",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "SampleAppClientVpcForTgwAttachmentsSubnet1SubnetDBCFB191": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.100.16.128/28",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "ForTgwAttachments",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/SampleAppClient/Vpc/Default/ForTgwAttachmentsSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "SampleAppClientVpc8EC27D63",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "SampleAppClientVpcForTgwAttachmentsSubnet2RouteTableAssociation5496715C": {
      "Properties": {
        "RouteTableId": {
          "Ref": "SampleAppClientVpcForTgwAttachmentsSubnet2RouteTableEFF6F074",
        },
        "SubnetId": {
          "Ref": "SampleAppClientVpcForTgwAttachmentsSubnet2Subnet848CEDC0",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "SampleAppClientVpcForTgwAttachmentsSubnet2RouteTableEFF6F074": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/SampleAppClient/Vpc/Default/ForTgwAttachmentsSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "SampleAppClientVpc8EC27D63",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "SampleAppClientVpcForTgwAttachmentsSubnet2Subnet848CEDC0": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.100.16.144/28",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "ForTgwAttachments",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/SampleAppClient/Vpc/Default/ForTgwAttachmentsSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "SampleAppClientVpc8EC27D63",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "SampleAppClientVpcIGW95416E73": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/SampleAppClient/Vpc/Default",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "SampleAppClientVpcIsolatedRouteToTgw00E113B17": {
      "DependsOn": [
        "SampleAppClientVpcTgwAttachment44B76A80",
      ],
      "Properties": {
        "DestinationCidrBlock": {
          "Fn::GetAtt": [
            "Vpc8378EB38",
            "CidrBlock",
          ],
        },
        "RouteTableId": {
          "Ref": "SampleAppClientVpcForTgwAttachmentsSubnet1RouteTableF8B3E64D",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "SampleAppClientVpcIsolatedRouteToTgw0Secondary64AB116A": {
      "DependsOn": [
        "SampleAppClientVpcTgwAttachment44B76A80",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.101.0.0/20",
        "RouteTableId": {
          "Ref": "SampleAppClientVpcForTgwAttachmentsSubnet1RouteTableF8B3E64D",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "SampleAppClientVpcIsolatedRouteToTgw11959314F": {
      "DependsOn": [
        "SampleAppClientVpcTgwAttachment44B76A80",
      ],
      "Properties": {
        "DestinationCidrBlock": {
          "Fn::GetAtt": [
            "Vpc8378EB38",
            "CidrBlock",
          ],
        },
        "RouteTableId": {
          "Ref": "SampleAppClientVpcForTgwAttachmentsSubnet2RouteTableEFF6F074",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "SampleAppClientVpcIsolatedRouteToTgw1SecondaryA10C843F": {
      "DependsOn": [
        "SampleAppClientVpcTgwAttachment44B76A80",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.101.0.0/20",
        "RouteTableId": {
          "Ref": "SampleAppClientVpcForTgwAttachmentsSubnet2RouteTableEFF6F074",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "SampleAppClientVpcPublicRouteToTgw091760E3C": {
      "DependsOn": [
        "SampleAppClientVpcTgwAttachment44B76A80",
      ],
      "Properties": {
        "DestinationCidrBlock": {
          "Fn::GetAtt": [
            "Vpc8378EB38",
            "CidrBlock",
          ],
        },
        "RouteTableId": {
          "Ref": "SampleAppClientVpcPublicSubnet1RouteTable59EAD090",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "SampleAppClientVpcPublicRouteToTgw0Secondary30E7D7D1": {
      "DependsOn": [
        "SampleAppClientVpcTgwAttachment44B76A80",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.101.0.0/20",
        "RouteTableId": {
          "Ref": "SampleAppClientVpcPublicSubnet1RouteTable59EAD090",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "SampleAppClientVpcPublicRouteToTgw119F257C3": {
      "DependsOn": [
        "SampleAppClientVpcTgwAttachment44B76A80",
      ],
      "Properties": {
        "DestinationCidrBlock": {
          "Fn::GetAtt": [
            "Vpc8378EB38",
            "CidrBlock",
          ],
        },
        "RouteTableId": {
          "Ref": "SampleAppClientVpcPublicSubnet2RouteTableAE719ECA",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "SampleAppClientVpcPublicRouteToTgw1SecondaryEDF390DC": {
      "DependsOn": [
        "SampleAppClientVpcTgwAttachment44B76A80",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.101.0.0/20",
        "RouteTableId": {
          "Ref": "SampleAppClientVpcPublicSubnet2RouteTableAE719ECA",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "SampleAppClientVpcPublicSubnet1DefaultRouteA0275BD8": {
      "DependsOn": [
        "SampleAppClientVpcVPCGW01242932",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "SampleAppClientVpcIGW95416E73",
        },
        "RouteTableId": {
          "Ref": "SampleAppClientVpcPublicSubnet1RouteTable59EAD090",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "SampleAppClientVpcPublicSubnet1RouteTable59EAD090": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/SampleAppClient/Vpc/Default/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "SampleAppClientVpc8EC27D63",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "SampleAppClientVpcPublicSubnet1RouteTableAssociationDFD73CB3": {
      "Properties": {
        "RouteTableId": {
          "Ref": "SampleAppClientVpcPublicSubnet1RouteTable59EAD090",
        },
        "SubnetId": {
          "Ref": "SampleAppClientVpcPublicSubnet1SubnetB3271DC8",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "SampleAppClientVpcPublicSubnet1SubnetB3271DC8": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.100.16.0/26",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/SampleAppClient/Vpc/Default/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "SampleAppClientVpc8EC27D63",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "SampleAppClientVpcPublicSubnet2DefaultRoute76671E71": {
      "DependsOn": [
        "SampleAppClientVpcVPCGW01242932",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "SampleAppClientVpcIGW95416E73",
        },
        "RouteTableId": {
          "Ref": "SampleAppClientVpcPublicSubnet2RouteTableAE719ECA",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "SampleAppClientVpcPublicSubnet2RouteTableAE719ECA": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/SampleAppClient/Vpc/Default/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "SampleAppClientVpc8EC27D63",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "SampleAppClientVpcPublicSubnet2RouteTableAssociation20E8E9E9": {
      "Properties": {
        "RouteTableId": {
          "Ref": "SampleAppClientVpcPublicSubnet2RouteTableAE719ECA",
        },
        "SubnetId": {
          "Ref": "SampleAppClientVpcPublicSubnet2Subnet099EEA1D",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "SampleAppClientVpcPublicSubnet2Subnet099EEA1D": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.100.16.64/26",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/SampleAppClient/Vpc/Default/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "SampleAppClientVpc8EC27D63",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "SampleAppClientVpcTgwAttachment44B76A80": {
      "Properties": {
        "SubnetIds": [
          {
            "Ref": "SampleAppClientVpcForTgwAttachmentsSubnet1SubnetDBCFB191",
          },
          {
            "Ref": "SampleAppClientVpcForTgwAttachmentsSubnet2Subnet848CEDC0",
          },
        ],
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
        "VpcId": {
          "Ref": "SampleAppClientVpc8EC27D63",
        },
      },
      "Type": "AWS::EC2::TransitGatewayAttachment",
    },
    "SampleAppClientVpcVPCGW01242932": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "SampleAppClientVpcIGW95416E73",
        },
        "VpcId": {
          "Ref": "SampleAppClientVpc8EC27D63",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "SampleAppClientVpcVpcFlowLogsFlowLog9A994D91": {
      "Properties": {
        "DeliverLogsPermissionArn": {
          "Fn::GetAtt": [
            "SampleAppClientVpcVpcFlowLogsLogRoleE8BB8CD2",
            "Arn",
          ],
        },
        "LogDestinationType": "cloud-watch-logs",
        "LogGroupName": {
          "Ref": "SampleAppClientVpcVpcFlowLogsLogGroupE3566CFF",
        },
        "ResourceId": {
          "Ref": "SampleAppClientVpc8EC27D63",
        },
        "ResourceType": "VPC",
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/SampleAppClient/Vpc/VpcFlowLogs/VpcFlowLogs",
          },
        ],
        "TrafficType": "ALL",
      },
      "Type": "AWS::EC2::FlowLog",
    },
    "SampleAppClientVpcVpcFlowLogsLogGroupE3566CFF": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 180,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "SampleAppClientVpcVpcFlowLogsLogRoleDefaultPolicyA68A2352": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:DescribeLogStreams",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SampleAppClientVpcVpcFlowLogsLogGroupE3566CFF",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SampleAppClientVpcVpcFlowLogsLogRoleE8BB8CD2",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SampleAppClientVpcVpcFlowLogsLogRoleDefaultPolicyA68A2352",
        "Roles": [
          {
            "Ref": "SampleAppClientVpcVpcFlowLogsLogRoleE8BB8CD2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SampleAppClientVpcVpcFlowLogsLogRoleE8BB8CD2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "vpc-flow-logs.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "SampleMultiRegionAppAlb4934C8BB": {
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Scheme": "internal",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "SampleMultiRegionAppAlbSecurityGroupE1B8B642",
              "GroupId",
            ],
          },
        ],
        "Subnets": [
          {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "SampleMultiRegionAppAlbListener5529D23B": {
      "Properties": {
        "DefaultActions": [
          {
            "FixedResponseConfig": {
              "StatusCode": "400",
            },
            "Type": "fixed-response",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "SampleMultiRegionAppAlb4934C8BB",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "SampleMultiRegionAppAlbListenerbalanceRule65E4B83C": {
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "SampleMultiRegionAppBalanceGroup2D002CE6",
            },
            "Type": "forward",
          },
        ],
        "Conditions": [
          {
            "Field": "path-pattern",
            "PathPatternConfig": {
              "Values": [
                "/balance*",
              ],
            },
          },
        ],
        "ListenerArn": {
          "Ref": "SampleMultiRegionAppAlbListener5529D23B",
        },
        "Priority": 1,
      },
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
    },
    "SampleMultiRegionAppAlbListenercountRuleE41D7BB5": {
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "SampleMultiRegionAppCountGroupF35DCD9E",
            },
            "Type": "forward",
          },
        ],
        "Conditions": [
          {
            "Field": "path-pattern",
            "PathPatternConfig": {
              "Values": [
                "/count*",
              ],
            },
          },
        ],
        "ListenerArn": {
          "Ref": "SampleMultiRegionAppAlbListener5529D23B",
        },
        "Priority": 2,
      },
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
    },
    "SampleMultiRegionAppAlbListenertransactionRuleD04F551A": {
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "SampleMultiRegionAppTransactionGroupBBCBB2BD",
            },
            "Type": "forward",
          },
        ],
        "Conditions": [
          {
            "Field": "path-pattern",
            "PathPatternConfig": {
              "Values": [
                "/transaction*",
              ],
            },
          },
        ],
        "ListenerArn": {
          "Ref": "SampleMultiRegionAppAlbListener5529D23B",
        },
        "Priority": 3,
      },
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
    },
    "SampleMultiRegionAppAlbSecurityGroupE1B8B642": {
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB BLEAFSICoreBankingprimarySampleMultiRegionAppAlbF3CD983A",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SampleMultiRegionAppAlbSecurityGrouptoBLEAFSICoreBankingprimarySampleMultiRegionAppBalanceFargateServiceSecurityGroup12675873300038B7AA4A": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppBalanceFargateServiceSecurityGroup3FD93178",
            "GroupId",
          ],
        },
        "FromPort": 3000,
        "GroupId": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppAlbSecurityGroupE1B8B642",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 3000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "SampleMultiRegionAppAlbSecurityGrouptoBLEAFSICoreBankingprimarySampleMultiRegionAppCountFargateServiceSecurityGroupCBCB28B1300092064D5E": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppCountFargateServiceSecurityGroup12EC9FEF",
            "GroupId",
          ],
        },
        "FromPort": 3000,
        "GroupId": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppAlbSecurityGroupE1B8B642",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 3000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "SampleMultiRegionAppAlbSecurityGrouptoBLEAFSICoreBankingprimarySampleMultiRegionAppTransactionFargateServiceSecurityGroup09908A4E300044155975": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppTransactionFargateServiceSecurityGroupAAC95742",
            "GroupId",
          ],
        },
        "FromPort": 3000,
        "GroupId": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppAlbSecurityGroupE1B8B642",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 3000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "SampleMultiRegionAppApplicationSignalsMonitoringApplicationSignalsDashboardC29747DF": {
      "Properties": {
        "DashboardBody": {
          "Fn::Join": [
            "",
            [
              "{"widgets":[{"type":"metric","width":12,"height":6,"x":0,"y":0,"properties":{"view":"timeSeries","title":"balance - Service Overview","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["ApplicationSignals","Latency","Environment","production","Service","balance"],["ApplicationSignals","Error","Environment","production","Service","balance",{"yAxis":"right"}]],"yAxis":{}}},{"type":"metric","width":12,"height":6,"x":12,"y":0,"properties":{"view":"timeSeries","title":"count - Service Overview","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["ApplicationSignals","Latency","Environment","production","Service","count"],["ApplicationSignals","Error","Environment","production","Service","count",{"yAxis":"right"}]],"yAxis":{}}},{"type":"metric","width":12,"height":6,"x":0,"y":6,"properties":{"view":"timeSeries","title":"transaction - Service Overview","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["ApplicationSignals","Latency","Environment","production","Service","transaction"],["ApplicationSignals","Error","Environment","production","Service","transaction",{"yAxis":"right"}]],"yAxis":{}}},{"type":"metric","width":12,"height":6,"x":12,"y":6,"properties":{"view":"timeSeries","title":"transaction-worker - Service Overview","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["ApplicationSignals","Latency","Environment","production","Service","transaction-worker"],["ApplicationSignals","Error","Environment","production","Service","transaction-worker",{"yAxis":"right"}]],"yAxis":{}}},{"type":"metric","width":12,"height":6,"x":0,"y":12,"properties":{"view":"timeSeries","title":"balance - ECS Health","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/ECS","CPUUtilization","ClusterName","",
              {
                "Ref": "SampleMultiRegionAppCluster9D88E1C2",
              },
              "","ServiceName","",
              {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppBalanceFargateServiceB3CE9C1E",
                  "Name",
                ],
              },
              ""],["AWS/ECS","MemoryUtilization","ClusterName","",
              {
                "Ref": "SampleMultiRegionAppCluster9D88E1C2",
              },
              "","ServiceName","",
              {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppBalanceFargateServiceB3CE9C1E",
                  "Name",
                ],
              },
              "",{"yAxis":"right"}]],"yAxis":{}}},{"type":"metric","width":12,"height":6,"x":12,"y":12,"properties":{"view":"timeSeries","title":"count - ECS Health","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/ECS","CPUUtilization","ClusterName","",
              {
                "Ref": "SampleMultiRegionAppCluster9D88E1C2",
              },
              "","ServiceName","",
              {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppCountFargateService2EE1C613",
                  "Name",
                ],
              },
              ""],["AWS/ECS","MemoryUtilization","ClusterName","",
              {
                "Ref": "SampleMultiRegionAppCluster9D88E1C2",
              },
              "","ServiceName","",
              {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppCountFargateService2EE1C613",
                  "Name",
                ],
              },
              "",{"yAxis":"right"}]],"yAxis":{}}},{"type":"metric","width":12,"height":6,"x":0,"y":18,"properties":{"view":"timeSeries","title":"transaction - ECS Health","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/ECS","CPUUtilization","ClusterName","",
              {
                "Ref": "SampleMultiRegionAppCluster9D88E1C2",
              },
              "","ServiceName","",
              {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppTransactionFargateServiceC2F48BC5",
                  "Name",
                ],
              },
              ""],["AWS/ECS","MemoryUtilization","ClusterName","",
              {
                "Ref": "SampleMultiRegionAppCluster9D88E1C2",
              },
              "","ServiceName","",
              {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppTransactionFargateServiceC2F48BC5",
                  "Name",
                ],
              },
              "",{"yAxis":"right"}]],"yAxis":{}}},{"type":"metric","width":12,"height":6,"x":12,"y":18,"properties":{"view":"timeSeries","title":"transaction-worker - ECS Health","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/ECS","CPUUtilization","ClusterName","",
              {
                "Ref": "SampleMultiRegionAppCluster9D88E1C2",
              },
              "","ServiceName","",
              {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppTransactionWorkerFargateServiceCAD6D2BF",
                  "Name",
                ],
              },
              ""],["AWS/ECS","MemoryUtilization","ClusterName","",
              {
                "Ref": "SampleMultiRegionAppCluster9D88E1C2",
              },
              "","ServiceName","",
              {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppTransactionWorkerFargateServiceCAD6D2BF",
                  "Name",
                ],
              },
              "",{"yAxis":"right"}]],"yAxis":{}}}]}",
            ],
          ],
        },
        "DashboardName": "CoreBanking-ApplicationSignals-BLEAFSI-CoreBanking-primary",
      },
      "Type": "AWS::CloudWatch::Dashboard",
    },
    "SampleMultiRegionAppApplicationSignalsMonitoringbalanceErrorRateAlarmDB5BB4BE": {
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "MonitorAlarmTopic1E34119C",
          },
        ],
        "AlarmDescription": "High error rate detected for balance service",
        "AlarmName": "balance-HighErrorRate",
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": [
          {
            "Name": "Environment",
            "Value": "production",
          },
          {
            "Name": "Service",
            "Value": "balance",
          },
        ],
        "EvaluationPeriods": 2,
        "MetricName": "Error",
        "Namespace": "ApplicationSignals",
        "OKActions": [
          {
            "Ref": "MonitorAlarmTopic1E34119C",
          },
        ],
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 5,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "SampleMultiRegionAppApplicationSignalsMonitoringbalanceLatencyAlarmA0DBEDE7": {
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "MonitorAlarmTopic1E34119C",
          },
        ],
        "AlarmDescription": "High latency detected for balance service",
        "AlarmName": "balance-HighLatency",
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": [
          {
            "Name": "Environment",
            "Value": "production",
          },
          {
            "Name": "Service",
            "Value": "balance",
          },
        ],
        "EvaluationPeriods": 2,
        "MetricName": "Latency",
        "Namespace": "ApplicationSignals",
        "OKActions": [
          {
            "Ref": "MonitorAlarmTopic1E34119C",
          },
        ],
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 1000,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "SampleMultiRegionAppApplicationSignalsMonitoringcountErrorRateAlarm920D1EE2": {
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "MonitorAlarmTopic1E34119C",
          },
        ],
        "AlarmDescription": "High error rate detected for count service",
        "AlarmName": "count-HighErrorRate",
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": [
          {
            "Name": "Environment",
            "Value": "production",
          },
          {
            "Name": "Service",
            "Value": "count",
          },
        ],
        "EvaluationPeriods": 2,
        "MetricName": "Error",
        "Namespace": "ApplicationSignals",
        "OKActions": [
          {
            "Ref": "MonitorAlarmTopic1E34119C",
          },
        ],
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 5,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "SampleMultiRegionAppApplicationSignalsMonitoringcountLatencyAlarm9387A527": {
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "MonitorAlarmTopic1E34119C",
          },
        ],
        "AlarmDescription": "High latency detected for count service",
        "AlarmName": "count-HighLatency",
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": [
          {
            "Name": "Environment",
            "Value": "production",
          },
          {
            "Name": "Service",
            "Value": "count",
          },
        ],
        "EvaluationPeriods": 2,
        "MetricName": "Latency",
        "Namespace": "ApplicationSignals",
        "OKActions": [
          {
            "Ref": "MonitorAlarmTopic1E34119C",
          },
        ],
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 1000,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "SampleMultiRegionAppApplicationSignalsMonitoringtransactionErrorRateAlarmEF0DFCCA": {
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "MonitorAlarmTopic1E34119C",
          },
        ],
        "AlarmDescription": "High error rate detected for transaction service",
        "AlarmName": "transaction-HighErrorRate",
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": [
          {
            "Name": "Environment",
            "Value": "production",
          },
          {
            "Name": "Service",
            "Value": "transaction",
          },
        ],
        "EvaluationPeriods": 2,
        "MetricName": "Error",
        "Namespace": "ApplicationSignals",
        "OKActions": [
          {
            "Ref": "MonitorAlarmTopic1E34119C",
          },
        ],
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 5,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "SampleMultiRegionAppApplicationSignalsMonitoringtransactionLatencyAlarmE86E4747": {
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "MonitorAlarmTopic1E34119C",
          },
        ],
        "AlarmDescription": "High latency detected for transaction service",
        "AlarmName": "transaction-HighLatency",
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": [
          {
            "Name": "Environment",
            "Value": "production",
          },
          {
            "Name": "Service",
            "Value": "transaction",
          },
        ],
        "EvaluationPeriods": 2,
        "MetricName": "Latency",
        "Namespace": "ApplicationSignals",
        "OKActions": [
          {
            "Ref": "MonitorAlarmTopic1E34119C",
          },
        ],
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 1000,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "SampleMultiRegionAppApplicationSignalsMonitoringtransactionworkerErrorRateAlarm4059BA8D": {
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "MonitorAlarmTopic1E34119C",
          },
        ],
        "AlarmDescription": "High error rate detected for transaction-worker service",
        "AlarmName": "transaction-worker-HighErrorRate",
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": [
          {
            "Name": "Environment",
            "Value": "production",
          },
          {
            "Name": "Service",
            "Value": "transaction-worker",
          },
        ],
        "EvaluationPeriods": 2,
        "MetricName": "Error",
        "Namespace": "ApplicationSignals",
        "OKActions": [
          {
            "Ref": "MonitorAlarmTopic1E34119C",
          },
        ],
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 5,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "SampleMultiRegionAppApplicationSignalsMonitoringtransactionworkerLatencyAlarmEE50ACD7": {
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "MonitorAlarmTopic1E34119C",
          },
        ],
        "AlarmDescription": "High latency detected for transaction-worker service",
        "AlarmName": "transaction-worker-HighLatency",
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": [
          {
            "Name": "Environment",
            "Value": "production",
          },
          {
            "Name": "Service",
            "Value": "transaction-worker",
          },
        ],
        "EvaluationPeriods": 2,
        "MetricName": "Latency",
        "Namespace": "ApplicationSignals",
        "OKActions": [
          {
            "Ref": "MonitorAlarmTopic1E34119C",
          },
        ],
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 1000,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "SampleMultiRegionAppBalanceFargateServiceB3CE9C1E": {
      "DependsOn": [
        "SampleMultiRegionAppAlbListenerbalanceRule65E4B83C",
        "SampleMultiRegionAppBalanceTaskTaskRoleDefaultPolicyE1DC9604",
        "SampleMultiRegionAppBalanceTaskTaskRoleEBBC5F37",
      ],
      "Properties": {
        "CapacityProviderStrategy": [
          {
            "CapacityProvider": "FARGATE",
            "Weight": 1,
          },
        ],
        "Cluster": {
          "Ref": "SampleMultiRegionAppCluster9D88E1C2",
        },
        "DeploymentConfiguration": {
          "Alarms": {
            "AlarmNames": [],
            "Enable": false,
            "Rollback": false,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LoadBalancers": [
          {
            "ContainerName": "EcsApp",
            "ContainerPort": 3000,
            "TargetGroupArn": {
              "Ref": "SampleMultiRegionAppBalanceGroup2D002CE6",
            },
          },
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppBalanceFargateServiceSecurityGroup3FD93178",
                  "GroupId",
                ],
              },
            ],
            "Subnets": [
              {
                "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
              },
              {
                "Ref": "VpcProtectedSubnet2SubnetC22C3325",
              },
            ],
          },
        },
        "TaskDefinition": {
          "Ref": "SampleMultiRegionAppBalanceTaskCD24682E",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "SampleMultiRegionAppBalanceFargateServiceSecurityGroup3FD93178": {
      "DependsOn": [
        "SampleMultiRegionAppBalanceTaskTaskRoleDefaultPolicyE1DC9604",
        "SampleMultiRegionAppBalanceTaskTaskRoleEBBC5F37",
      ],
      "Properties": {
        "GroupDescription": "BLEAFSI-CoreBanking-primary/SampleMultiRegionApp/Balance/FargateService/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SampleMultiRegionAppBalanceFargateServiceSecurityGroupfromBLEAFSICoreBankingprimarySampleMultiRegionAppAlbSecurityGroup1DD7615C3000CCD533CB": {
      "DependsOn": [
        "SampleMultiRegionAppBalanceTaskTaskRoleDefaultPolicyE1DC9604",
        "SampleMultiRegionAppBalanceTaskTaskRoleEBBC5F37",
      ],
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 3000,
        "GroupId": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppBalanceFargateServiceSecurityGroup3FD93178",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppAlbSecurityGroupE1B8B642",
            "GroupId",
          ],
        },
        "ToPort": 3000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "SampleMultiRegionAppBalanceGroup2D002CE6": {
      "Properties": {
        "HealthCheckIntervalSeconds": 15,
        "HealthCheckPath": "/health",
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "10",
          },
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "SampleMultiRegionAppBalanceMigrationTaskE0DE7B86": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-ECS2",
              "reason": "Migration task requires environment variables for database connection and configuration",
            },
          ],
        },
      },
      "Properties": {
        "ContainerDefinitions": [
          {
            "Cpu": 1024,
            "Environment": [
              {
                "Name": "MAIN_TABLE_NAME",
                "Value": "",
              },
              {
                "Name": "PARAM_TABLE_NAME",
                "Value": "",
              },
              {
                "Name": "DATABASE_HOST",
                "Value": {
                  "Fn::GetAtt": [
                    "DBAuroraPgAuroraCluster654F0C65",
                    "Endpoint.Address",
                  ],
                },
              },
              {
                "Name": "OTEL_RESOURCE_ATTRIBUTES",
                "Value": "service.name=balance,deployment.environment=production,service.version=1.0.0",
              },
              {
                "Name": "OTEL_AWS_APPLICATION_SIGNALS_ENABLED",
                "Value": "true",
              },
              {
                "Name": "OTEL_METRICS_EXPORTER",
                "Value": "none",
              },
              {
                "Name": "OTEL_LOGS_EXPORTER",
                "Value": "none",
              },
              {
                "Name": "OTEL_TRACES_EXPORTER",
                "Value": "otlp",
              },
              {
                "Name": "OTEL_EXPORTER_OTLP_PROTOCOL",
                "Value": "http/protobuf",
              },
              {
                "Name": "OTEL_EXPORTER_OTLP_ENDPOINT",
                "Value": "http://localhost:4316",
              },
              {
                "Name": "OTEL_NODE_RESOURCE_DETECTORS",
                "Value": "env,host,os,process",
              },
              {
                "Name": "OTEL_PROPAGATORS",
                "Value": "xray",
              },
              {
                "Name": "NODE_OPTIONS",
                "Value": "--require /otel-auto-instrumentation-node/autoinstrumentation.js",
              },
              {
                "Name": "OTEL_TRACES_SAMPLER",
                "Value": "xray",
              },
            ],
            "Essential": true,
            "Image": {
              "Fn::Sub": "111111111111.dkr.ecr.ap-northeast-1.\${AWS::URLSuffix}/cdk-hnb659fds-container-assets-111111111111-ap-northeast-1:b36bd5f2096f0f1b1fb9d67ec148ca2c2499f9a4f6a98b83ffd40ed15746b3b1",
            },
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "SampleMultiRegionAppBalanceMigrationTaskEcsAppLogGroupA6525B5B",
                },
                "awslogs-region": "ap-northeast-1",
                "awslogs-stream-prefix": "BLEA-Migration-",
              },
            },
            "Memory": 2048,
            "MemoryReservation": 2048,
            "Name": "EcsApp",
            "Secrets": [
              {
                "Name": "DATABASE_USER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "DBAuroraPgAuroraClusterSecretAttachment79578D24",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DATABASE_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "DBAuroraPgAuroraClusterSecretAttachment79578D24",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
        ],
        "Cpu": "1024",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppBalanceMigrationTaskExecutionRoleE48450E5",
            "Arn",
          ],
        },
        "Family": "BLEAFSICoreBankingprimarySampleMultiRegionAppBalanceMigrationTask2791CE61",
        "Memory": "2048",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppBalanceMigrationTaskTaskRole05FB2385",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "SampleMultiRegionAppBalanceMigrationTaskEcsAppLogGroupA6525B5B": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "SampleMultiRegionAppBalanceMigrationTaskExecutionRoleDefaultPolicy2A2BFC38": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Migration task execution role requires wildcard permissions for CloudWatch Logs access",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:ap-northeast-1:111111111111:repository/cdk-hnb659fds-container-assets-111111111111-ap-northeast-1",
                  ],
                ],
              },
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppBalanceMigrationTaskEcsAppLogGroupA6525B5B",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "DBAuroraPgAuroraClusterSecretAttachment79578D24",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SampleMultiRegionAppBalanceMigrationTaskExecutionRoleDefaultPolicy2A2BFC38",
        "Roles": [
          {
            "Ref": "SampleMultiRegionAppBalanceMigrationTaskExecutionRoleE48450E5",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SampleMultiRegionAppBalanceMigrationTaskExecutionRoleE48450E5": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "SampleMultiRegionAppBalanceMigrationTaskTaskRole05FB2385": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "SampleMultiRegionAppBalanceTaskCD24682E": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-ECS2",
              "reason": "CloudWatch Application Signals requires environment variables for proper configuration",
            },
            {
              "id": "AwsSolutions-ECS2",
              "reason": "CloudWatch Agent requires environment variables for Application Signals configuration",
            },
          ],
        },
      },
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "cp",
              "-a",
              "/autoinstrumentation/.",
              "/otel-auto-instrumentation-node/",
            ],
            "Cpu": 64,
            "Essential": false,
            "Image": "public.ecr.aws/aws-observability/adot-autoinstrumentation-node:v0.7.0",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "SampleMultiRegionAppBalanceTaskinitLogGroupCC00F0E9",
                },
                "awslogs-region": "ap-northeast-1",
                "awslogs-stream-prefix": "BLEA-Init-",
              },
            },
            "Memory": 128,
            "MemoryReservation": 64,
            "MountPoints": [
              {
                "ContainerPath": "/otel-auto-instrumentation-node",
                "ReadOnly": false,
                "SourceVolume": "opentelemetry-auto-instrumentation-node",
              },
            ],
            "Name": "init",
          },
          {
            "Cpu": 0,
            "Environment": [
              {
                "Name": "ECS_ENABLE_CONTAINER_METADATA",
                "Value": "true",
              },
              {
                "Name": "OTEL_AWS_APPLICATION_SIGNALS_ENABLED",
                "Value": "true",
              },
              {
                "Name": "OTEL_METRICS_EXPORTER",
                "Value": "none",
              },
              {
                "Name": "OTEL_EXPORTER_OTLP_ENDPOINT",
                "Value": "http://localhost:4316",
              },
              {
                "Name": "OTEL_RESOURCE_ATTRIBUTES",
                "Value": "service.name=BLEAFSI-CoreBanking-primary",
              },
            ],
            "Essential": true,
            "Image": "public.ecr.aws/cloudwatch-agent/cloudwatch-agent:1.300059.0b1207",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "SampleMultiRegionAppBalanceTaskecscwagentLogGroupC3EC8502",
                },
                "awslogs-region": "ap-northeast-1",
                "awslogs-stream-prefix": "BLEA-CloudWatchAgent-",
              },
            },
            "Name": "ecs-cwagent",
            "Secrets": [
              {
                "Name": "CW_CONFIG_CONTENT",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":ssm:ap-northeast-1:111111111111:parameter/ecs/cloudwatch-agent/application-signals-config",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Cpu": 768,
            "DependsOn": [
              {
                "Condition": "SUCCESS",
                "ContainerName": "init",
              },
              {
                "Condition": "START",
                "ContainerName": "ecs-cwagent",
              },
            ],
            "Environment": [
              {
                "Name": "MAIN_TABLE_NAME",
                "Value": "",
              },
              {
                "Name": "PARAM_TABLE_NAME",
                "Value": "",
              },
              {
                "Name": "DATABASE_HOST",
                "Value": {
                  "Fn::GetAtt": [
                    "DBAuroraPgAuroraCluster654F0C65",
                    "Endpoint.Address",
                  ],
                },
              },
              {
                "Name": "OTEL_RESOURCE_ATTRIBUTES",
                "Value": "service.name=balance,deployment.environment=production,service.version=1.0.0",
              },
              {
                "Name": "OTEL_AWS_APPLICATION_SIGNALS_ENABLED",
                "Value": "true",
              },
              {
                "Name": "OTEL_METRICS_EXPORTER",
                "Value": "none",
              },
              {
                "Name": "OTEL_LOGS_EXPORTER",
                "Value": "none",
              },
              {
                "Name": "OTEL_TRACES_EXPORTER",
                "Value": "otlp",
              },
              {
                "Name": "OTEL_EXPORTER_OTLP_PROTOCOL",
                "Value": "http/protobuf",
              },
              {
                "Name": "OTEL_EXPORTER_OTLP_ENDPOINT",
                "Value": "http://localhost:4316",
              },
              {
                "Name": "OTEL_NODE_RESOURCE_DETECTORS",
                "Value": "env,host,os,process",
              },
              {
                "Name": "OTEL_PROPAGATORS",
                "Value": "xray",
              },
              {
                "Name": "NODE_OPTIONS",
                "Value": "--require /otel-auto-instrumentation-node/autoinstrumentation.js",
              },
              {
                "Name": "OTEL_TRACES_SAMPLER",
                "Value": "xray",
              },
            ],
            "Essential": true,
            "Image": {
              "Fn::Sub": "111111111111.dkr.ecr.ap-northeast-1.\${AWS::URLSuffix}/cdk-hnb659fds-container-assets-111111111111-ap-northeast-1:b36bd5f2096f0f1b1fb9d67ec148ca2c2499f9a4f6a98b83ffd40ed15746b3b1",
            },
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "SampleMultiRegionAppBalanceTaskEcsAppLogGroup528CF884",
                },
                "awslogs-region": "ap-northeast-1",
                "awslogs-stream-prefix": "BLEA-ECSApp-",
              },
            },
            "Memory": 1792,
            "MemoryReservation": 1792,
            "MountPoints": [
              {
                "ContainerPath": "/otel-auto-instrumentation-node",
                "ReadOnly": false,
                "SourceVolume": "opentelemetry-auto-instrumentation-node",
              },
            ],
            "Name": "EcsApp",
            "PortMappings": [
              {
                "ContainerPort": 3000,
                "Protocol": "tcp",
              },
            ],
            "Secrets": [
              {
                "Name": "DATABASE_USER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "DBAuroraPgAuroraClusterSecretAttachment79578D24",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DATABASE_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "DBAuroraPgAuroraClusterSecretAttachment79578D24",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
        ],
        "Cpu": "1024",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppBalanceTaskExecutionRole36D89483",
            "Arn",
          ],
        },
        "Family": "BLEAFSICoreBankingprimarySampleMultiRegionAppBalanceTask7742B86B",
        "Memory": "2048",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppBalanceTaskTaskRoleEBBC5F37",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Name": "opentelemetry-auto-instrumentation-node",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "SampleMultiRegionAppBalanceTaskEcsAppLogGroup528CF884": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "SampleMultiRegionAppBalanceTaskExecutionRole36D89483": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Policy::arn:<AWS::Partition>:iam::aws:policy/CloudWatchAgentServerPolicy",
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "CloudWatch Agent requires AWS managed policy CloudWatchAgentServerPolicy for proper operation",
            },
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "ECR Public access requires wildcard permissions for authentication tokens",
            },
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Application Signals requires wildcard permissions for metrics and configuration access",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/CloudWatchAgentServerPolicy",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SampleMultiRegionAppBalanceTaskExecutionRoleDefaultPolicyFD62584B": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CloudWatch Application Signals execution role requires wildcard permissions for ECR and CloudWatch access",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr-public:GetAuthorizationToken",
                "sts:GetServiceBearerToken",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:ap-northeast-1:111111111111:parameter/ecs/cloudwatch-agent/application-signals-config",
                  ],
                ],
              },
            },
            {
              "Action": [
                "application-signals:*",
                "cloudwatch:PutMetricData",
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppBalanceTaskinitLogGroupCC00F0E9",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppBalanceTaskecscwagentLogGroupC3EC8502",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:ap-northeast-1:111111111111:parameter/ecs/cloudwatch-agent/application-signals-config",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:ap-northeast-1:111111111111:repository/cdk-hnb659fds-container-assets-111111111111-ap-northeast-1",
                  ],
                ],
              },
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppBalanceTaskEcsAppLogGroup528CF884",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "DBAuroraPgAuroraClusterSecretAttachment79578D24",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SampleMultiRegionAppBalanceTaskExecutionRoleDefaultPolicyFD62584B",
        "Roles": [
          {
            "Ref": "SampleMultiRegionAppBalanceTaskExecutionRole36D89483",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SampleMultiRegionAppBalanceTaskTaskRoleDefaultPolicyE1DC9604": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutLogEvents",
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:DescribeLogStreams",
                "logs:DescribeLogGroups",
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets",
                "xray:GetSamplingStatisticSummaries",
                "ssm:GetParameters",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:DescribeLogGroups",
                "logs:DescribeLogStreams",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:logs:ap-northeast-1:111111111111:log-group:/aws/application-signals/data:*",
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:ap-northeast-1:111111111111:parameter/ecs/cloudwatch-agent/application-signals-config",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SampleMultiRegionAppBalanceTaskTaskRoleDefaultPolicyE1DC9604",
        "Roles": [
          {
            "Ref": "SampleMultiRegionAppBalanceTaskTaskRoleEBBC5F37",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SampleMultiRegionAppBalanceTaskTaskRoleEBBC5F37": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Application Signals requires wildcard permissions for CloudWatch logs, X-Ray traces, and SSM parameters across multiple resources",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "SampleMultiRegionAppBalanceTaskecscwagentLogGroupC3EC8502": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "SampleMultiRegionAppBalanceTaskinitLogGroupCC00F0E9": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "SampleMultiRegionAppCanaryArtifactsBucketD01DC908": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "SampleMultiRegionAppCanaryArtifactsBucketPolicy5DEF9D6A": {
      "Properties": {
        "Bucket": {
          "Ref": "SampleMultiRegionAppCanaryArtifactsBucketD01DC908",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SampleMultiRegionAppCanaryArtifactsBucketD01DC908",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "SampleMultiRegionAppCanaryArtifactsBucketD01DC908",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "SampleMultiRegionAppCanaryD0102896": {
      "Properties": {
        "ArtifactS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "SampleMultiRegionAppCanaryArtifactsBucketD01DC908",
              },
            ],
          ],
        },
        "Code": {
          "Handler": "index.handler",
          "S3Bucket": "cdk-hnb659fds-assets-111111111111-ap-northeast-1",
          "S3Key": "788a63e18e6631079273ca4cc3f10184ed0aace8ff705d116fb6eba96d48971b.zip",
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppCanaryServiceRoleECF5668F",
            "Arn",
          ],
        },
        "Name": "bleafsicorebank933da3",
        "RunConfig": {
          "EnvironmentVariables": {
            "BASE_URL": "http://api.example.com",
          },
        },
        "RuntimeVersion": "syn-nodejs-puppeteer-7.0",
        "Schedule": {
          "DurationInSeconds": "0",
          "Expression": "rate(1 minute)",
        },
        "StartCanaryAfterCreation": true,
        "VPCConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "SampleMultiRegionAppCanarySecurityGroupD6177105",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": [
            {
              "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
            },
            {
              "Ref": "VpcProtectedSubnet2SubnetC22C3325",
            },
            {
              "Ref": "VpcForTgwAttachmentsSubnet1Subnet95D19052",
            },
            {
              "Ref": "VpcForTgwAttachmentsSubnet2SubnetAEDBB0E8",
            },
          ],
          "VpcId": {
            "Ref": "Vpc8378EB38",
          },
        },
      },
      "Type": "AWS::Synthetics::Canary",
    },
    "SampleMultiRegionAppCanarySecurityGroupD6177105": {
      "Properties": {
        "GroupDescription": "Automatic security group for Canary BLEAFSICoreBankingprimarySampleMultiRegionAppCanary38AA3963",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SampleMultiRegionAppCanaryServiceRoleECF5668F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "SampleMultiRegionAppCanaryArtifactsBucketD01DC908",
                      "Arn",
                    ],
                  },
                },
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "SampleMultiRegionAppCanaryArtifactsBucketD01DC908",
                            "Arn",
                          ],
                        },
                        "/*",
                      ],
                    ],
                  },
                },
                {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": {
                    "StringEquals": {
                      "cloudwatch:namespace": "CloudWatchSynthetics",
                    },
                  },
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:ap-northeast-1:111111111111:log-group:/aws/lambda/cwsyn-*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "canaryPolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SampleMultiRegionAppCluster9D88E1C2": {
      "Properties": {
        "ClusterSettings": [
          {
            "Name": "containerInsights",
            "Value": "enabled",
          },
        ],
      },
      "Type": "AWS::ECS::Cluster",
    },
    "SampleMultiRegionAppCountFargateService2EE1C613": {
      "DependsOn": [
        "SampleMultiRegionAppAlbListenercountRuleE41D7BB5",
        "SampleMultiRegionAppCountTaskTaskRoleDefaultPolicy49641718",
        "SampleMultiRegionAppCountTaskTaskRole45DC9375",
      ],
      "Properties": {
        "CapacityProviderStrategy": [
          {
            "CapacityProvider": "FARGATE",
            "Weight": 1,
          },
        ],
        "Cluster": {
          "Ref": "SampleMultiRegionAppCluster9D88E1C2",
        },
        "DeploymentConfiguration": {
          "Alarms": {
            "AlarmNames": [],
            "Enable": false,
            "Rollback": false,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LoadBalancers": [
          {
            "ContainerName": "EcsApp",
            "ContainerPort": 3000,
            "TargetGroupArn": {
              "Ref": "SampleMultiRegionAppCountGroupF35DCD9E",
            },
          },
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppCountFargateServiceSecurityGroup12EC9FEF",
                  "GroupId",
                ],
              },
            ],
            "Subnets": [
              {
                "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
              },
              {
                "Ref": "VpcProtectedSubnet2SubnetC22C3325",
              },
            ],
          },
        },
        "TaskDefinition": {
          "Ref": "SampleMultiRegionAppCountTask9E5764AB",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "SampleMultiRegionAppCountFargateServiceSecurityGroup12EC9FEF": {
      "DependsOn": [
        "SampleMultiRegionAppCountTaskTaskRoleDefaultPolicy49641718",
        "SampleMultiRegionAppCountTaskTaskRole45DC9375",
      ],
      "Properties": {
        "GroupDescription": "BLEAFSI-CoreBanking-primary/SampleMultiRegionApp/Count/FargateService/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SampleMultiRegionAppCountFargateServiceSecurityGroupfromBLEAFSICoreBankingprimarySampleMultiRegionAppAlbSecurityGroup1DD7615C3000D52D5D86": {
      "DependsOn": [
        "SampleMultiRegionAppCountTaskTaskRoleDefaultPolicy49641718",
        "SampleMultiRegionAppCountTaskTaskRole45DC9375",
      ],
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 3000,
        "GroupId": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppCountFargateServiceSecurityGroup12EC9FEF",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppAlbSecurityGroupE1B8B642",
            "GroupId",
          ],
        },
        "ToPort": 3000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "SampleMultiRegionAppCountGroupF35DCD9E": {
      "Properties": {
        "HealthCheckIntervalSeconds": 15,
        "HealthCheckPath": "/health",
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "10",
          },
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "SampleMultiRegionAppCountMigrationTask5AEF8925": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-ECS2",
              "reason": "Migration task requires environment variables for database connection and configuration",
            },
          ],
        },
      },
      "Properties": {
        "ContainerDefinitions": [
          {
            "Cpu": 1024,
            "Environment": [
              {
                "Name": "MAIN_TABLE_NAME",
                "Value": "",
              },
              {
                "Name": "PARAM_TABLE_NAME",
                "Value": "",
              },
              {
                "Name": "DATABASE_HOST",
                "Value": {
                  "Fn::GetAtt": [
                    "DBAuroraPgAuroraCluster654F0C65",
                    "Endpoint.Address",
                  ],
                },
              },
              {
                "Name": "OTEL_RESOURCE_ATTRIBUTES",
                "Value": "service.name=count,deployment.environment=production,service.version=1.0.0",
              },
              {
                "Name": "OTEL_AWS_APPLICATION_SIGNALS_ENABLED",
                "Value": "true",
              },
              {
                "Name": "OTEL_METRICS_EXPORTER",
                "Value": "none",
              },
              {
                "Name": "OTEL_LOGS_EXPORTER",
                "Value": "none",
              },
              {
                "Name": "OTEL_TRACES_EXPORTER",
                "Value": "otlp",
              },
              {
                "Name": "OTEL_EXPORTER_OTLP_PROTOCOL",
                "Value": "http/protobuf",
              },
              {
                "Name": "OTEL_EXPORTER_OTLP_ENDPOINT",
                "Value": "http://localhost:4316",
              },
              {
                "Name": "OTEL_NODE_RESOURCE_DETECTORS",
                "Value": "env,host,os,process",
              },
              {
                "Name": "OTEL_PROPAGATORS",
                "Value": "xray",
              },
              {
                "Name": "NODE_OPTIONS",
                "Value": "--require /otel-auto-instrumentation-node/autoinstrumentation.js",
              },
              {
                "Name": "OTEL_TRACES_SAMPLER",
                "Value": "xray",
              },
            ],
            "Essential": true,
            "Image": {
              "Fn::Sub": "111111111111.dkr.ecr.ap-northeast-1.\${AWS::URLSuffix}/cdk-hnb659fds-container-assets-111111111111-ap-northeast-1:12d5a9dd6d650c74ecb855e66993743f7ff64845dd461649fb9a27ab32008bb0",
            },
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "SampleMultiRegionAppCountMigrationTaskEcsAppLogGroupD113B88D",
                },
                "awslogs-region": "ap-northeast-1",
                "awslogs-stream-prefix": "BLEA-Migration-",
              },
            },
            "Memory": 2048,
            "MemoryReservation": 2048,
            "Name": "EcsApp",
            "Secrets": [
              {
                "Name": "DATABASE_USER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "DBAuroraPgAuroraClusterSecretAttachment79578D24",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DATABASE_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "DBAuroraPgAuroraClusterSecretAttachment79578D24",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
        ],
        "Cpu": "1024",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppCountMigrationTaskExecutionRoleB359099F",
            "Arn",
          ],
        },
        "Family": "BLEAFSICoreBankingprimarySampleMultiRegionAppCountMigrationTask01983A66",
        "Memory": "2048",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppCountMigrationTaskTaskRole588A52BB",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "SampleMultiRegionAppCountMigrationTaskEcsAppLogGroupD113B88D": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "SampleMultiRegionAppCountMigrationTaskExecutionRoleB359099F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "SampleMultiRegionAppCountMigrationTaskExecutionRoleDefaultPolicy96368832": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Migration task execution role requires wildcard permissions for CloudWatch Logs access",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:ap-northeast-1:111111111111:repository/cdk-hnb659fds-container-assets-111111111111-ap-northeast-1",
                  ],
                ],
              },
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppCountMigrationTaskEcsAppLogGroupD113B88D",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "DBAuroraPgAuroraClusterSecretAttachment79578D24",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SampleMultiRegionAppCountMigrationTaskExecutionRoleDefaultPolicy96368832",
        "Roles": [
          {
            "Ref": "SampleMultiRegionAppCountMigrationTaskExecutionRoleB359099F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SampleMultiRegionAppCountMigrationTaskTaskRole588A52BB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "SampleMultiRegionAppCountTask9E5764AB": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-ECS2",
              "reason": "CloudWatch Application Signals requires environment variables for proper configuration",
            },
            {
              "id": "AwsSolutions-ECS2",
              "reason": "CloudWatch Agent requires environment variables for Application Signals configuration",
            },
          ],
        },
      },
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "cp",
              "-a",
              "/autoinstrumentation/.",
              "/otel-auto-instrumentation-node/",
            ],
            "Cpu": 64,
            "Essential": false,
            "Image": "public.ecr.aws/aws-observability/adot-autoinstrumentation-node:v0.7.0",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "SampleMultiRegionAppCountTaskinitLogGroupB759B4B5",
                },
                "awslogs-region": "ap-northeast-1",
                "awslogs-stream-prefix": "BLEA-Init-",
              },
            },
            "Memory": 128,
            "MemoryReservation": 64,
            "MountPoints": [
              {
                "ContainerPath": "/otel-auto-instrumentation-node",
                "ReadOnly": false,
                "SourceVolume": "opentelemetry-auto-instrumentation-node",
              },
            ],
            "Name": "init",
          },
          {
            "Cpu": 0,
            "Environment": [
              {
                "Name": "ECS_ENABLE_CONTAINER_METADATA",
                "Value": "true",
              },
              {
                "Name": "OTEL_AWS_APPLICATION_SIGNALS_ENABLED",
                "Value": "true",
              },
              {
                "Name": "OTEL_METRICS_EXPORTER",
                "Value": "none",
              },
              {
                "Name": "OTEL_EXPORTER_OTLP_ENDPOINT",
                "Value": "http://localhost:4316",
              },
              {
                "Name": "OTEL_RESOURCE_ATTRIBUTES",
                "Value": "service.name=BLEAFSI-CoreBanking-primary",
              },
            ],
            "Essential": true,
            "Image": "public.ecr.aws/cloudwatch-agent/cloudwatch-agent:1.300059.0b1207",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "SampleMultiRegionAppCountTaskecscwagentLogGroup90463DDD",
                },
                "awslogs-region": "ap-northeast-1",
                "awslogs-stream-prefix": "BLEA-CloudWatchAgent-",
              },
            },
            "Name": "ecs-cwagent",
            "Secrets": [
              {
                "Name": "CW_CONFIG_CONTENT",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":ssm:ap-northeast-1:111111111111:parameter/ecs/cloudwatch-agent/application-signals-config",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Cpu": 768,
            "DependsOn": [
              {
                "Condition": "SUCCESS",
                "ContainerName": "init",
              },
              {
                "Condition": "START",
                "ContainerName": "ecs-cwagent",
              },
            ],
            "Environment": [
              {
                "Name": "MAIN_TABLE_NAME",
                "Value": "",
              },
              {
                "Name": "PARAM_TABLE_NAME",
                "Value": "",
              },
              {
                "Name": "DATABASE_HOST",
                "Value": {
                  "Fn::GetAtt": [
                    "DBAuroraPgAuroraCluster654F0C65",
                    "Endpoint.Address",
                  ],
                },
              },
              {
                "Name": "OTEL_RESOURCE_ATTRIBUTES",
                "Value": "service.name=count,deployment.environment=production,service.version=1.0.0",
              },
              {
                "Name": "OTEL_AWS_APPLICATION_SIGNALS_ENABLED",
                "Value": "true",
              },
              {
                "Name": "OTEL_METRICS_EXPORTER",
                "Value": "none",
              },
              {
                "Name": "OTEL_LOGS_EXPORTER",
                "Value": "none",
              },
              {
                "Name": "OTEL_TRACES_EXPORTER",
                "Value": "otlp",
              },
              {
                "Name": "OTEL_EXPORTER_OTLP_PROTOCOL",
                "Value": "http/protobuf",
              },
              {
                "Name": "OTEL_EXPORTER_OTLP_ENDPOINT",
                "Value": "http://localhost:4316",
              },
              {
                "Name": "OTEL_NODE_RESOURCE_DETECTORS",
                "Value": "env,host,os,process",
              },
              {
                "Name": "OTEL_PROPAGATORS",
                "Value": "xray",
              },
              {
                "Name": "NODE_OPTIONS",
                "Value": "--require /otel-auto-instrumentation-node/autoinstrumentation.js",
              },
              {
                "Name": "OTEL_TRACES_SAMPLER",
                "Value": "xray",
              },
            ],
            "Essential": true,
            "Image": {
              "Fn::Sub": "111111111111.dkr.ecr.ap-northeast-1.\${AWS::URLSuffix}/cdk-hnb659fds-container-assets-111111111111-ap-northeast-1:12d5a9dd6d650c74ecb855e66993743f7ff64845dd461649fb9a27ab32008bb0",
            },
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "SampleMultiRegionAppCountTaskEcsAppLogGroupF40366CD",
                },
                "awslogs-region": "ap-northeast-1",
                "awslogs-stream-prefix": "BLEA-ECSApp-",
              },
            },
            "Memory": 1792,
            "MemoryReservation": 1792,
            "MountPoints": [
              {
                "ContainerPath": "/otel-auto-instrumentation-node",
                "ReadOnly": false,
                "SourceVolume": "opentelemetry-auto-instrumentation-node",
              },
            ],
            "Name": "EcsApp",
            "PortMappings": [
              {
                "ContainerPort": 3000,
                "Protocol": "tcp",
              },
            ],
            "Secrets": [
              {
                "Name": "DATABASE_USER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "DBAuroraPgAuroraClusterSecretAttachment79578D24",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DATABASE_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "DBAuroraPgAuroraClusterSecretAttachment79578D24",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
        ],
        "Cpu": "1024",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppCountTaskExecutionRoleA2265BAB",
            "Arn",
          ],
        },
        "Family": "BLEAFSICoreBankingprimarySampleMultiRegionAppCountTaskCDCF544C",
        "Memory": "2048",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppCountTaskTaskRole45DC9375",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Name": "opentelemetry-auto-instrumentation-node",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "SampleMultiRegionAppCountTaskEcsAppLogGroupF40366CD": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "SampleMultiRegionAppCountTaskExecutionRoleA2265BAB": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Policy::arn:<AWS::Partition>:iam::aws:policy/CloudWatchAgentServerPolicy",
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "CloudWatch Agent requires AWS managed policy CloudWatchAgentServerPolicy for proper operation",
            },
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "ECR Public access requires wildcard permissions for authentication tokens",
            },
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Application Signals requires wildcard permissions for metrics and configuration access",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/CloudWatchAgentServerPolicy",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SampleMultiRegionAppCountTaskExecutionRoleDefaultPolicyFF11097E": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CloudWatch Application Signals execution role requires wildcard permissions for ECR and CloudWatch access",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr-public:GetAuthorizationToken",
                "sts:GetServiceBearerToken",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:ap-northeast-1:111111111111:parameter/ecs/cloudwatch-agent/application-signals-config",
                  ],
                ],
              },
            },
            {
              "Action": [
                "application-signals:*",
                "cloudwatch:PutMetricData",
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppCountTaskinitLogGroupB759B4B5",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppCountTaskecscwagentLogGroup90463DDD",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:ap-northeast-1:111111111111:parameter/ecs/cloudwatch-agent/application-signals-config",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:ap-northeast-1:111111111111:repository/cdk-hnb659fds-container-assets-111111111111-ap-northeast-1",
                  ],
                ],
              },
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppCountTaskEcsAppLogGroupF40366CD",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "DBAuroraPgAuroraClusterSecretAttachment79578D24",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SampleMultiRegionAppCountTaskExecutionRoleDefaultPolicyFF11097E",
        "Roles": [
          {
            "Ref": "SampleMultiRegionAppCountTaskExecutionRoleA2265BAB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SampleMultiRegionAppCountTaskTaskRole45DC9375": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Application Signals requires wildcard permissions for CloudWatch logs, X-Ray traces, and SSM parameters across multiple resources",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "SampleMultiRegionAppCountTaskTaskRoleDefaultPolicy49641718": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutLogEvents",
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:DescribeLogStreams",
                "logs:DescribeLogGroups",
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets",
                "xray:GetSamplingStatisticSummaries",
                "ssm:GetParameters",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:DescribeLogGroups",
                "logs:DescribeLogStreams",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:logs:ap-northeast-1:111111111111:log-group:/aws/application-signals/data:*",
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:ap-northeast-1:111111111111:parameter/ecs/cloudwatch-agent/application-signals-config",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SampleMultiRegionAppCountTaskTaskRoleDefaultPolicy49641718",
        "Roles": [
          {
            "Ref": "SampleMultiRegionAppCountTaskTaskRole45DC9375",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SampleMultiRegionAppCountTaskecscwagentLogGroup90463DDD": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "SampleMultiRegionAppCountTaskinitLogGroupB759B4B5": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "SampleMultiRegionAppMyRecordSet4189E06D": {
      "Properties": {
        "AliasTarget": {
          "DNSName": {
            "Fn::Join": [
              "",
              [
                "dualstack.",
                {
                  "Fn::GetAtt": [
                    "SampleMultiRegionAppAlb4934C8BB",
                    "DNSName",
                  ],
                },
              ],
            ],
          },
          "HostedZoneId": {
            "Fn::GetAtt": [
              "SampleMultiRegionAppAlb4934C8BB",
              "CanonicalHostedZoneID",
            ],
          },
        },
        "HostedZoneId": {
          "Ref": "PrivateHostedZone6354E1BB",
        },
        "Name": "api.ap-northeast-1.example.com.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "SampleMultiRegionAppParamTable7082CE0D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "PK",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": [
          {
            "AttributeName": "PK",
            "KeyType": "HASH",
          },
        ],
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "SampleMultiRegionAppTransactionFargateServiceC2F48BC5": {
      "DependsOn": [
        "SampleMultiRegionAppAlbListenertransactionRuleD04F551A",
        "SampleMultiRegionAppTransactionTaskTaskRoleDefaultPolicy89E5314C",
        "SampleMultiRegionAppTransactionTaskTaskRole209E6E33",
      ],
      "Properties": {
        "CapacityProviderStrategy": [
          {
            "CapacityProvider": "FARGATE",
            "Weight": 1,
          },
        ],
        "Cluster": {
          "Ref": "SampleMultiRegionAppCluster9D88E1C2",
        },
        "DeploymentConfiguration": {
          "Alarms": {
            "AlarmNames": [],
            "Enable": false,
            "Rollback": false,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LoadBalancers": [
          {
            "ContainerName": "EcsApp",
            "ContainerPort": 3000,
            "TargetGroupArn": {
              "Ref": "SampleMultiRegionAppTransactionGroupBBCBB2BD",
            },
          },
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppTransactionFargateServiceSecurityGroupAAC95742",
                  "GroupId",
                ],
              },
            ],
            "Subnets": [
              {
                "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
              },
              {
                "Ref": "VpcProtectedSubnet2SubnetC22C3325",
              },
            ],
          },
        },
        "TaskDefinition": {
          "Ref": "SampleMultiRegionAppTransactionTaskA16B11F7",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "SampleMultiRegionAppTransactionFargateServiceSecurityGroupAAC95742": {
      "DependsOn": [
        "SampleMultiRegionAppTransactionTaskTaskRoleDefaultPolicy89E5314C",
        "SampleMultiRegionAppTransactionTaskTaskRole209E6E33",
      ],
      "Properties": {
        "GroupDescription": "BLEAFSI-CoreBanking-primary/SampleMultiRegionApp/Transaction/FargateService/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SampleMultiRegionAppTransactionFargateServiceSecurityGroupfromBLEAFSICoreBankingprimarySampleMultiRegionAppAlbSecurityGroup1DD7615C30004DA9333E": {
      "DependsOn": [
        "SampleMultiRegionAppTransactionTaskTaskRoleDefaultPolicy89E5314C",
        "SampleMultiRegionAppTransactionTaskTaskRole209E6E33",
      ],
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 3000,
        "GroupId": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppTransactionFargateServiceSecurityGroupAAC95742",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppAlbSecurityGroupE1B8B642",
            "GroupId",
          ],
        },
        "ToPort": 3000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "SampleMultiRegionAppTransactionGroupBBCBB2BD": {
      "Properties": {
        "HealthCheckIntervalSeconds": 15,
        "HealthCheckPath": "/health",
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "10",
          },
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "SampleMultiRegionAppTransactionTaskA16B11F7": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-ECS2",
              "reason": "CloudWatch Application Signals requires environment variables for proper configuration",
            },
            {
              "id": "AwsSolutions-ECS2",
              "reason": "CloudWatch Agent requires environment variables for Application Signals configuration",
            },
          ],
        },
      },
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "cp",
              "-a",
              "/autoinstrumentation/.",
              "/otel-auto-instrumentation-node/",
            ],
            "Cpu": 64,
            "Essential": false,
            "Image": "public.ecr.aws/aws-observability/adot-autoinstrumentation-node:v0.7.0",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "SampleMultiRegionAppTransactionTaskinitLogGroup76BB1229",
                },
                "awslogs-region": "ap-northeast-1",
                "awslogs-stream-prefix": "BLEA-Init-",
              },
            },
            "Memory": 128,
            "MemoryReservation": 64,
            "MountPoints": [
              {
                "ContainerPath": "/otel-auto-instrumentation-node",
                "ReadOnly": false,
                "SourceVolume": "opentelemetry-auto-instrumentation-node",
              },
            ],
            "Name": "init",
          },
          {
            "Cpu": 0,
            "Environment": [
              {
                "Name": "ECS_ENABLE_CONTAINER_METADATA",
                "Value": "true",
              },
              {
                "Name": "OTEL_AWS_APPLICATION_SIGNALS_ENABLED",
                "Value": "true",
              },
              {
                "Name": "OTEL_METRICS_EXPORTER",
                "Value": "none",
              },
              {
                "Name": "OTEL_EXPORTER_OTLP_ENDPOINT",
                "Value": "http://localhost:4316",
              },
              {
                "Name": "OTEL_RESOURCE_ATTRIBUTES",
                "Value": "service.name=BLEAFSI-CoreBanking-primary",
              },
            ],
            "Essential": true,
            "Image": "public.ecr.aws/cloudwatch-agent/cloudwatch-agent:1.300059.0b1207",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "SampleMultiRegionAppTransactionTaskecscwagentLogGroup62A9DCC5",
                },
                "awslogs-region": "ap-northeast-1",
                "awslogs-stream-prefix": "BLEA-CloudWatchAgent-",
              },
            },
            "Name": "ecs-cwagent",
            "Secrets": [
              {
                "Name": "CW_CONFIG_CONTENT",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":ssm:ap-northeast-1:111111111111:parameter/ecs/cloudwatch-agent/application-signals-config",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Cpu": 768,
            "DependsOn": [
              {
                "Condition": "SUCCESS",
                "ContainerName": "init",
              },
              {
                "Condition": "START",
                "ContainerName": "ecs-cwagent",
              },
            ],
            "Environment": [
              {
                "Name": "MAIN_TABLE_NAME",
                "Value": {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "/",
                        {
                          "Fn::GetAtt": [
                            "transactionDBDynamoDb",
                            "Arn",
                          ],
                        },
                      ],
                    },
                  ],
                },
              },
              {
                "Name": "PARAM_TABLE_NAME",
                "Value": {
                  "Ref": "SampleMultiRegionAppParamTable7082CE0D",
                },
              },
              {
                "Name": "DATABASE_HOST",
                "Value": "",
              },
              {
                "Name": "OTEL_RESOURCE_ATTRIBUTES",
                "Value": "service.name=transaction,deployment.environment=production,service.version=1.0.0",
              },
              {
                "Name": "OTEL_AWS_APPLICATION_SIGNALS_ENABLED",
                "Value": "true",
              },
              {
                "Name": "OTEL_METRICS_EXPORTER",
                "Value": "none",
              },
              {
                "Name": "OTEL_LOGS_EXPORTER",
                "Value": "none",
              },
              {
                "Name": "OTEL_TRACES_EXPORTER",
                "Value": "otlp",
              },
              {
                "Name": "OTEL_EXPORTER_OTLP_PROTOCOL",
                "Value": "http/protobuf",
              },
              {
                "Name": "OTEL_EXPORTER_OTLP_ENDPOINT",
                "Value": "http://localhost:4316",
              },
              {
                "Name": "OTEL_NODE_RESOURCE_DETECTORS",
                "Value": "env,host,os,process",
              },
              {
                "Name": "OTEL_PROPAGATORS",
                "Value": "xray",
              },
              {
                "Name": "NODE_OPTIONS",
                "Value": "--require /otel-auto-instrumentation-node/autoinstrumentation.js",
              },
              {
                "Name": "OTEL_TRACES_SAMPLER",
                "Value": "xray",
              },
            ],
            "Essential": true,
            "Image": {
              "Fn::Sub": "111111111111.dkr.ecr.ap-northeast-1.\${AWS::URLSuffix}/cdk-hnb659fds-container-assets-111111111111-ap-northeast-1:3e6a1448b4805db965f38eed31d3e70a7f7e0b83d5488e34f84e35f244ca2658",
            },
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "SampleMultiRegionAppTransactionTaskEcsAppLogGroupDC46D677",
                },
                "awslogs-region": "ap-northeast-1",
                "awslogs-stream-prefix": "BLEA-ECSApp-",
              },
            },
            "Memory": 1792,
            "MemoryReservation": 1792,
            "MountPoints": [
              {
                "ContainerPath": "/otel-auto-instrumentation-node",
                "ReadOnly": false,
                "SourceVolume": "opentelemetry-auto-instrumentation-node",
              },
            ],
            "Name": "EcsApp",
            "PortMappings": [
              {
                "ContainerPort": 3000,
                "Protocol": "tcp",
              },
            ],
          },
        ],
        "Cpu": "1024",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppTransactionTaskExecutionRole3D527536",
            "Arn",
          ],
        },
        "Family": "BLEAFSICoreBankingprimarySampleMultiRegionAppTransactionTask733ED1A3",
        "Memory": "2048",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppTransactionTaskTaskRole209E6E33",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Name": "opentelemetry-auto-instrumentation-node",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "SampleMultiRegionAppTransactionTaskEcsAppLogGroupDC46D677": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "SampleMultiRegionAppTransactionTaskExecutionRole3D527536": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Policy::arn:<AWS::Partition>:iam::aws:policy/CloudWatchAgentServerPolicy",
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "CloudWatch Agent requires AWS managed policy CloudWatchAgentServerPolicy for proper operation",
            },
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "ECR Public access requires wildcard permissions for authentication tokens",
            },
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Application Signals requires wildcard permissions for metrics and configuration access",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/CloudWatchAgentServerPolicy",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SampleMultiRegionAppTransactionTaskExecutionRoleDefaultPolicy95A5AB7D": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CloudWatch Application Signals execution role requires wildcard permissions for ECR and CloudWatch access",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr-public:GetAuthorizationToken",
                "sts:GetServiceBearerToken",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:ap-northeast-1:111111111111:parameter/ecs/cloudwatch-agent/application-signals-config",
                  ],
                ],
              },
            },
            {
              "Action": [
                "application-signals:*",
                "cloudwatch:PutMetricData",
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppTransactionTaskinitLogGroup76BB1229",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppTransactionTaskecscwagentLogGroup62A9DCC5",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:ap-northeast-1:111111111111:parameter/ecs/cloudwatch-agent/application-signals-config",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:ap-northeast-1:111111111111:repository/cdk-hnb659fds-container-assets-111111111111-ap-northeast-1",
                  ],
                ],
              },
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppTransactionTaskEcsAppLogGroupDC46D677",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SampleMultiRegionAppTransactionTaskExecutionRoleDefaultPolicy95A5AB7D",
        "Roles": [
          {
            "Ref": "SampleMultiRegionAppTransactionTaskExecutionRole3D527536",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SampleMultiRegionAppTransactionTaskTaskRole209E6E33": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Application Signals requires wildcard permissions for CloudWatch logs, X-Ray traces, and SSM parameters across multiple resources",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "SampleMultiRegionAppTransactionTaskTaskRoleDefaultPolicy89E5314C": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutLogEvents",
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:DescribeLogStreams",
                "logs:DescribeLogGroups",
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets",
                "xray:GetSamplingStatisticSummaries",
                "ssm:GetParameters",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:DescribeLogGroups",
                "logs:DescribeLogStreams",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:logs:ap-northeast-1:111111111111:log-group:/aws/application-signals/data:*",
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:ap-northeast-1:111111111111:parameter/ecs/cloudwatch-agent/application-signals-config",
                  ],
                ],
              },
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SampleMultiRegionAppParamTable7082CE0D",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":dynamodb:ap-northeast-1:111111111111:table/",
                      {
                        "Fn::Select": [
                          1,
                          {
                            "Fn::Split": [
                              "/",
                              {
                                "Fn::GetAtt": [
                                  "transactionDBDynamoDb",
                                  "Arn",
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":dynamodb:ap-northeast-1:111111111111:table/",
                      {
                        "Fn::Select": [
                          1,
                          {
                            "Fn::Split": [
                              "/",
                              {
                                "Fn::GetAtt": [
                                  "transactionDBDynamoDb",
                                  "Arn",
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SampleMultiRegionAppTransactionTaskTaskRoleDefaultPolicy89E5314C",
        "Roles": [
          {
            "Ref": "SampleMultiRegionAppTransactionTaskTaskRole209E6E33",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SampleMultiRegionAppTransactionTaskecscwagentLogGroup62A9DCC5": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "SampleMultiRegionAppTransactionTaskinitLogGroup76BB1229": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "SampleMultiRegionAppTransactionWorkerFargateServiceCAD6D2BF": {
      "DependsOn": [
        "SampleMultiRegionAppTransactionWorkerTaskTaskRoleDefaultPolicy44090D01",
        "SampleMultiRegionAppTransactionWorkerTaskTaskRoleCC299E7B",
      ],
      "Properties": {
        "CapacityProviderStrategy": [
          {
            "CapacityProvider": "FARGATE",
            "Weight": 1,
          },
        ],
        "Cluster": {
          "Ref": "SampleMultiRegionAppCluster9D88E1C2",
        },
        "DeploymentConfiguration": {
          "Alarms": {
            "AlarmNames": [],
            "Enable": false,
            "Rollback": false,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 0,
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppTransactionWorkerFargateServiceSecurityGroup8D963150",
                  "GroupId",
                ],
              },
            ],
            "Subnets": [
              {
                "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
              },
              {
                "Ref": "VpcProtectedSubnet2SubnetC22C3325",
              },
            ],
          },
        },
        "TaskDefinition": {
          "Ref": "SampleMultiRegionAppTransactionWorkerTaskB2B4F976",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "SampleMultiRegionAppTransactionWorkerFargateServiceSecurityGroup8D963150": {
      "DependsOn": [
        "SampleMultiRegionAppTransactionWorkerTaskTaskRoleDefaultPolicy44090D01",
        "SampleMultiRegionAppTransactionWorkerTaskTaskRoleCC299E7B",
      ],
      "Properties": {
        "GroupDescription": "BLEAFSI-CoreBanking-primary/SampleMultiRegionApp/TransactionWorker/FargateService/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SampleMultiRegionAppTransactionWorkerTaskB2B4F976": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-ECS2",
              "reason": "CloudWatch Application Signals requires environment variables for proper configuration",
            },
            {
              "id": "AwsSolutions-ECS2",
              "reason": "CloudWatch Agent requires environment variables for Application Signals configuration",
            },
          ],
        },
      },
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "cp",
              "-a",
              "/autoinstrumentation/.",
              "/otel-auto-instrumentation-node/",
            ],
            "Cpu": 64,
            "Essential": false,
            "Image": "public.ecr.aws/aws-observability/adot-autoinstrumentation-node:v0.7.0",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "SampleMultiRegionAppTransactionWorkerTaskinitLogGroup13747103",
                },
                "awslogs-region": "ap-northeast-1",
                "awslogs-stream-prefix": "BLEA-Init-",
              },
            },
            "Memory": 128,
            "MemoryReservation": 64,
            "MountPoints": [
              {
                "ContainerPath": "/otel-auto-instrumentation-node",
                "ReadOnly": false,
                "SourceVolume": "opentelemetry-auto-instrumentation-node",
              },
            ],
            "Name": "init",
          },
          {
            "Cpu": 0,
            "Environment": [
              {
                "Name": "ECS_ENABLE_CONTAINER_METADATA",
                "Value": "true",
              },
              {
                "Name": "OTEL_AWS_APPLICATION_SIGNALS_ENABLED",
                "Value": "true",
              },
              {
                "Name": "OTEL_METRICS_EXPORTER",
                "Value": "none",
              },
              {
                "Name": "OTEL_EXPORTER_OTLP_ENDPOINT",
                "Value": "http://localhost:4316",
              },
              {
                "Name": "OTEL_RESOURCE_ATTRIBUTES",
                "Value": "service.name=BLEAFSI-CoreBanking-primary",
              },
            ],
            "Essential": true,
            "Image": "public.ecr.aws/cloudwatch-agent/cloudwatch-agent:1.300059.0b1207",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "SampleMultiRegionAppTransactionWorkerTaskecscwagentLogGroupE3353C45",
                },
                "awslogs-region": "ap-northeast-1",
                "awslogs-stream-prefix": "BLEA-CloudWatchAgent-",
              },
            },
            "Name": "ecs-cwagent",
            "Secrets": [
              {
                "Name": "CW_CONFIG_CONTENT",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":ssm:ap-northeast-1:111111111111:parameter/ecs/cloudwatch-agent/application-signals-config",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "node",
              "worker.js",
            ],
            "Cpu": 768,
            "DependsOn": [
              {
                "Condition": "SUCCESS",
                "ContainerName": "init",
              },
              {
                "Condition": "START",
                "ContainerName": "ecs-cwagent",
              },
            ],
            "Environment": [
              {
                "Name": "MAIN_TABLE_NAME",
                "Value": {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "/",
                        {
                          "Fn::GetAtt": [
                            "transactionDBDynamoDb",
                            "Arn",
                          ],
                        },
                      ],
                    },
                  ],
                },
              },
              {
                "Name": "PARAM_TABLE_NAME",
                "Value": {
                  "Ref": "SampleMultiRegionAppParamTable7082CE0D",
                },
              },
              {
                "Name": "BALANCE_ENDPOINT",
                "Value": {
                  "Fn::Join": [
                    "",
                    [
                      "http://",
                      {
                        "Fn::GetAtt": [
                          "SampleMultiRegionAppAlb4934C8BB",
                          "DNSName",
                        ],
                      },
                      "/balance",
                    ],
                  ],
                },
              },
              {
                "Name": "COUNT_ENDPOINT",
                "Value": {
                  "Fn::Join": [
                    "",
                    [
                      "http://",
                      {
                        "Fn::GetAtt": [
                          "SampleMultiRegionAppAlb4934C8BB",
                          "DNSName",
                        ],
                      },
                      "/count",
                    ],
                  ],
                },
              },
              {
                "Name": "SERVICE_NAME",
                "Value": "transaction-worker",
              },
              {
                "Name": "OTEL_RESOURCE_ATTRIBUTES",
                "Value": "service.name=transaction-worker,deployment.environment=production,service.version=1.0.0",
              },
              {
                "Name": "OTEL_AWS_APPLICATION_SIGNALS_ENABLED",
                "Value": "true",
              },
              {
                "Name": "OTEL_METRICS_EXPORTER",
                "Value": "none",
              },
              {
                "Name": "OTEL_LOGS_EXPORTER",
                "Value": "none",
              },
              {
                "Name": "OTEL_TRACES_EXPORTER",
                "Value": "otlp",
              },
              {
                "Name": "OTEL_EXPORTER_OTLP_PROTOCOL",
                "Value": "http/protobuf",
              },
              {
                "Name": "OTEL_EXPORTER_OTLP_ENDPOINT",
                "Value": "http://localhost:4316",
              },
              {
                "Name": "OTEL_PROPAGATORS",
                "Value": "xray",
              },
              {
                "Name": "NODE_OPTIONS",
                "Value": "--require /otel-auto-instrumentation-node/autoinstrumentation.js",
              },
              {
                "Name": "OTEL_TRACES_SAMPLER",
                "Value": "xray",
              },
            ],
            "Essential": true,
            "Image": {
              "Fn::Sub": "111111111111.dkr.ecr.ap-northeast-1.\${AWS::URLSuffix}/cdk-hnb659fds-container-assets-111111111111-ap-northeast-1:3e6a1448b4805db965f38eed31d3e70a7f7e0b83d5488e34f84e35f244ca2658",
            },
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "SampleMultiRegionAppTransactionWorkerTaskEcsAppLogGroup275E0976",
                },
                "awslogs-region": "ap-northeast-1",
                "awslogs-stream-prefix": "BLEA-ECSApp-",
              },
            },
            "Memory": 1792,
            "MemoryReservation": 1792,
            "MountPoints": [
              {
                "ContainerPath": "/otel-auto-instrumentation-node",
                "ReadOnly": false,
                "SourceVolume": "opentelemetry-auto-instrumentation-node",
              },
            ],
            "Name": "EcsApp",
          },
        ],
        "Cpu": "1024",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppTransactionWorkerTaskExecutionRole0464601D",
            "Arn",
          ],
        },
        "Family": "BLEAFSICoreBankingprimarySampleMultiRegionAppTransactionWorkerTask8346C6B6",
        "Memory": "2048",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppTransactionWorkerTaskTaskRoleCC299E7B",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Name": "opentelemetry-auto-instrumentation-node",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "SampleMultiRegionAppTransactionWorkerTaskEcsAppLogGroup275E0976": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "SampleMultiRegionAppTransactionWorkerTaskExecutionRole0464601D": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Policy::arn:<AWS::Partition>:iam::aws:policy/CloudWatchAgentServerPolicy",
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "CloudWatch Agent requires AWS managed policy CloudWatchAgentServerPolicy for proper operation",
            },
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "ECR Public access requires wildcard permissions for authentication tokens",
            },
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Application Signals requires wildcard permissions for metrics and configuration access",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/CloudWatchAgentServerPolicy",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SampleMultiRegionAppTransactionWorkerTaskExecutionRoleDefaultPolicy3B01D851": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CloudWatch Application Signals execution role requires wildcard permissions for ECR and CloudWatch access",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr-public:GetAuthorizationToken",
                "sts:GetServiceBearerToken",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:ap-northeast-1:111111111111:parameter/ecs/cloudwatch-agent/application-signals-config",
                  ],
                ],
              },
            },
            {
              "Action": [
                "application-signals:*",
                "cloudwatch:PutMetricData",
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppTransactionWorkerTaskinitLogGroup13747103",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppTransactionWorkerTaskecscwagentLogGroupE3353C45",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:ap-northeast-1:111111111111:parameter/ecs/cloudwatch-agent/application-signals-config",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:ap-northeast-1:111111111111:repository/cdk-hnb659fds-container-assets-111111111111-ap-northeast-1",
                  ],
                ],
              },
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppTransactionWorkerTaskEcsAppLogGroup275E0976",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SampleMultiRegionAppTransactionWorkerTaskExecutionRoleDefaultPolicy3B01D851",
        "Roles": [
          {
            "Ref": "SampleMultiRegionAppTransactionWorkerTaskExecutionRole0464601D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SampleMultiRegionAppTransactionWorkerTaskTaskRoleCC299E7B": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Application Signals requires wildcard permissions for CloudWatch logs, X-Ray traces, and SSM parameters across multiple resources",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "SampleMultiRegionAppTransactionWorkerTaskTaskRoleDefaultPolicy44090D01": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutLogEvents",
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:DescribeLogStreams",
                "logs:DescribeLogGroups",
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets",
                "xray:GetSamplingStatisticSummaries",
                "ssm:GetParameters",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:DescribeLogGroups",
                "logs:DescribeLogStreams",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:logs:ap-northeast-1:111111111111:log-group:/aws/application-signals/data:*",
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:ap-northeast-1:111111111111:parameter/ecs/cloudwatch-agent/application-signals-config",
                  ],
                ],
              },
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SampleMultiRegionAppParamTable7082CE0D",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":dynamodb:ap-northeast-1:111111111111:table/",
                      {
                        "Fn::Select": [
                          1,
                          {
                            "Fn::Split": [
                              "/",
                              {
                                "Fn::GetAtt": [
                                  "transactionDBDynamoDb",
                                  "Arn",
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":dynamodb:ap-northeast-1:111111111111:table/",
                      {
                        "Fn::Select": [
                          1,
                          {
                            "Fn::Split": [
                              "/",
                              {
                                "Fn::GetAtt": [
                                  "transactionDBDynamoDb",
                                  "Arn",
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SampleMultiRegionAppTransactionWorkerTaskTaskRoleDefaultPolicy44090D01",
        "Roles": [
          {
            "Ref": "SampleMultiRegionAppTransactionWorkerTaskTaskRoleCC299E7B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SampleMultiRegionAppTransactionWorkerTaskecscwagentLogGroupE3353C45": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "SampleMultiRegionAppTransactionWorkerTaskinitLogGroup13747103": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "UpsertSlrCustomResourceHandler8f7be66a3315474baea16ceca43d27c35E89C93F": {
      "DependsOn": [
        "UpsertSlrCustomResourceHandler8f7be66a3315474baea16ceca43d27c3ServiceRoleDefaultPolicy2922032B",
        "UpsertSlrCustomResourceHandler8f7be66a3315474baea16ceca43d27c3ServiceRole3F877DF6",
      ],
      "Properties": {
        "Code": {
          "ZipFile": ""use strict";var i=Object.defineProperty;var l=Object.getOwnPropertyDescriptor;var d=Object.getOwnPropertyNames;var p=Object.prototype.hasOwnProperty;var m=(e,s)=>{for(var r in s)i(e,r,{get:s[r],enumerable:!0})},u=(e,s,r,a)=>{if(s&&typeof s=="object"||typeof s=="function")for(let t of d(s))!p.call(e,t)&&t!==r&&i(e,t,{get:()=>s[t],enumerable:!(a=l(s,t))||a.enumerable});return e};var S=e=>u(i({},"__esModule",{value:!0}),e);var y={};m(y,{handler:()=>R});module.exports=S(y);var o=require("@aws-sdk/client-iam"),n=require("timers/promises"),g=new o.IAMClient({}),R=async(e,s)=>{try{switch(e.RequestType){case"Create":console.log(\`trying to create a service linked role for \${e.ResourceProperties.awsServiceName}\`);let r=new o.CreateServiceLinkedRoleCommand({AWSServiceName:e.ResourceProperties.awsServiceName,Description:e.ResourceProperties.description,CustomSuffix:e.ResourceProperties.customSuffix});await g.send(r),console.log("the service linked role created successfully, now waiting for IAM propagation"),await(0,n.setTimeout)(e.ResourceProperties.waitTimeSeconds*1e3);break;case"Update":break;case"Delete":break}await c("SUCCESS",e,s)}catch(r){r instanceof o.InvalidInputException?(console.log(\`The service linked role seems to already exist, skipping the creation... \${r.message}\`),await c("SUCCESS",e,s)):await c("FAILED",e,s,r.message)}},c=async(e,s,r,a)=>{let t=JSON.stringify({Status:e,Reason:a??"See the details in CloudWatch Log Stream: "+r.logStreamName,PhysicalResourceId:r.logStreamName,StackId:s.StackId,RequestId:s.RequestId,LogicalResourceId:s.LogicalResourceId,NoEcho:!1,Data:{}});await(await fetch(s.ResponseURL,{method:"PUT",body:t,headers:{"Content-Type":"","Content-Length":t.length.toString()}})).text()};0&&(module.exports={handler});
",
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "UpsertSlrCustomResourceHandler8f7be66a3315474baea16ceca43d27c3ServiceRole3F877DF6",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 180,
      },
      "Type": "AWS::Lambda::Function",
    },
    "UpsertSlrCustomResourceHandler8f7be66a3315474baea16ceca43d27c3ServiceRole3F877DF6": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "UpsertSlrCustomResourceHandler8f7be66a3315474baea16ceca43d27c3ServiceRoleDefaultPolicy2922032B": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "iam:CreateServiceLinkedRole",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "UpsertSlrCustomResourceHandler8f7be66a3315474baea16ceca43d27c3ServiceRoleDefaultPolicy2922032B",
        "Roles": [
          {
            "Ref": "UpsertSlrCustomResourceHandler8f7be66a3315474baea16ceca43d27c3ServiceRole3F877DF6",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "Vpc8378EB38": {
      "Properties": {
        "CidrBlock": "10.100.0.0/20",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/Vpc/Default",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcClientIsolatedRouteToTgw0131AF975": {
      "DependsOn": [
        "SampleAppClientVpcTgwAttachment44B76A80",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.100.16.0/24",
        "RouteTableId": {
          "Ref": "VpcForTgwAttachmentsSubnet1RouteTable8C881736",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcClientIsolatedRouteToTgw192A4CB41": {
      "DependsOn": [
        "SampleAppClientVpcTgwAttachment44B76A80",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.100.16.0/24",
        "RouteTableId": {
          "Ref": "VpcForTgwAttachmentsSubnet2RouteTableCA78E48E",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcClientPrivateRouteToTgw08A7D8A3A": {
      "DependsOn": [
        "SampleAppClientVpcTgwAttachment44B76A80",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.100.16.0/24",
        "RouteTableId": {
          "Ref": "VpcProtectedSubnet1RouteTable69FCECD8",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcClientPrivateRouteToTgw19B42947C": {
      "DependsOn": [
        "SampleAppClientVpcTgwAttachment44B76A80",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.100.16.0/24",
        "RouteTableId": {
          "Ref": "VpcProtectedSubnet2RouteTableFA54AE0B",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcClientPublicRouteToTgw049E31AA5": {
      "DependsOn": [
        "SampleAppClientVpcTgwAttachment44B76A80",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.100.16.0/24",
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcClientPublicRouteToTgw1F4F34561": {
      "DependsOn": [
        "SampleAppClientVpcTgwAttachment44B76A80",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.100.16.0/24",
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcDynamoDbEndpoint564903D1": {
      "Properties": {
        "RouteTableIds": [
          {
            "Ref": "VpcForTgwAttachmentsSubnet1RouteTable8C881736",
          },
          {
            "Ref": "VpcForTgwAttachmentsSubnet2RouteTableCA78E48E",
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".dynamodb",
            ],
          ],
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/Vpc/Default",
          },
        ],
        "VpcEndpointType": "Gateway",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcEcrDockerEndpointEnhanced87EBAE8F": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcVpcEndpointSecurityGroup7FA95FB5",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-1.ecr.dkr",
        "SubnetIds": [
          {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/Vpc/Default",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcEcrEndpointEnhancedA71B0D84": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcVpcEndpointSecurityGroup7FA95FB5",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-1.ecr.api",
        "SubnetIds": [
          {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/Vpc/Default",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcForTgwAttachmentsSubnet1RouteTable8C881736": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/Vpc/Default/ForTgwAttachmentsSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcForTgwAttachmentsSubnet1RouteTableAssociation8E490026": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcForTgwAttachmentsSubnet1RouteTable8C881736",
        },
        "SubnetId": {
          "Ref": "VpcForTgwAttachmentsSubnet1Subnet95D19052",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcForTgwAttachmentsSubnet1Subnet95D19052": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.100.12.0/28",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "ForTgwAttachments",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/Vpc/Default/ForTgwAttachmentsSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcForTgwAttachmentsSubnet2RouteTableAssociation87852F7E": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcForTgwAttachmentsSubnet2RouteTableCA78E48E",
        },
        "SubnetId": {
          "Ref": "VpcForTgwAttachmentsSubnet2SubnetAEDBB0E8",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcForTgwAttachmentsSubnet2RouteTableCA78E48E": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/Vpc/Default/ForTgwAttachmentsSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcForTgwAttachmentsSubnet2SubnetAEDBB0E8": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.100.12.16/28",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "ForTgwAttachments",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/Vpc/Default/ForTgwAttachmentsSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcIGWD7BA715C": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/Vpc/Default",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcIsolatedRouteToTgw0010E66EA7": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.101.0.0/20",
        "RouteTableId": {
          "Ref": "VpcForTgwAttachmentsSubnet1RouteTable8C881736",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcIsolatedRouteToTgw01215500D5": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.101.0.0/20",
        "RouteTableId": {
          "Ref": "VpcForTgwAttachmentsSubnet2RouteTableCA78E48E",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcIsolatedRouteToTgw104C2BA69B": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.102.0.0/20",
        "RouteTableId": {
          "Ref": "VpcForTgwAttachmentsSubnet1RouteTable8C881736",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcIsolatedRouteToTgw115B3B5E9B": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.102.0.0/20",
        "RouteTableId": {
          "Ref": "VpcForTgwAttachmentsSubnet2RouteTableCA78E48E",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcLogsEndpointForPrivateEnhanced6028892D": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcVpcEndpointSecurityGroup7FA95FB5",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-1.logs",
        "SubnetIds": [
          {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/Vpc/Default",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcMonitoringEndpointEnhancedD2ABE4D5": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcVpcEndpointSecurityGroup7FA95FB5",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-1.monitoring",
        "SubnetIds": [
          {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/Vpc/Default",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcNaclPublicDefaultAssociationBLEAFSICoreBankingprimaryVpcPublicSubnet1C0C50893A9C75996": {
      "Properties": {
        "NetworkAclId": {
          "Ref": "VpcNaclPublicF3ACBBF5",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
      },
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
    },
    "VpcNaclPublicDefaultAssociationBLEAFSICoreBankingprimaryVpcPublicSubnet254C3ED4ADF2C5B19": {
      "Properties": {
        "NetworkAclId": {
          "Ref": "VpcNaclPublicF3ACBBF5",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
      },
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
    },
    "VpcNaclPublicF3ACBBF5": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/Vpc/NaclPublic",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::NetworkAcl",
    },
    "VpcNaclPublicNaclEgressPublic7F2645E5": {
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": true,
        "NetworkAclId": {
          "Ref": "VpcNaclPublicF3ACBBF5",
        },
        "Protocol": -1,
        "RuleAction": "allow",
        "RuleNumber": 100,
      },
      "Type": "AWS::EC2::NetworkAclEntry",
    },
    "VpcNaclPublicNaclIngressPublicCA388ADE": {
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": false,
        "NetworkAclId": {
          "Ref": "VpcNaclPublicF3ACBBF5",
        },
        "Protocol": -1,
        "RuleAction": "allow",
        "RuleNumber": 100,
      },
      "Type": "AWS::EC2::NetworkAclEntry",
    },
    "VpcPrivateRouteToTgw00C759BD7B": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.101.0.0/20",
        "RouteTableId": {
          "Ref": "VpcProtectedSubnet1RouteTable69FCECD8",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateRouteToTgw016CC8C401": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.101.0.0/20",
        "RouteTableId": {
          "Ref": "VpcProtectedSubnet2RouteTableFA54AE0B",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateRouteToTgw102D7DA115": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.102.0.0/20",
        "RouteTableId": {
          "Ref": "VpcProtectedSubnet1RouteTable69FCECD8",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateRouteToTgw11FA0FAEA3": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.102.0.0/20",
        "RouteTableId": {
          "Ref": "VpcProtectedSubnet2RouteTableFA54AE0B",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcProtectedSubnet1DefaultRouteAEBDEDB0": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA",
        },
        "RouteTableId": {
          "Ref": "VpcProtectedSubnet1RouteTable69FCECD8",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcProtectedSubnet1RouteTable69FCECD8": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/Vpc/Default/ProtectedSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcProtectedSubnet1RouteTableAssociation62F625F2": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcProtectedSubnet1RouteTable69FCECD8",
        },
        "SubnetId": {
          "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcProtectedSubnet1Subnet38ECE18A": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.100.4.0/22",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Protected",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/Vpc/Default/ProtectedSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcProtectedSubnet2DefaultRouteA5CFB1D1": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet2NATGateway9182C01D",
        },
        "RouteTableId": {
          "Ref": "VpcProtectedSubnet2RouteTableFA54AE0B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcProtectedSubnet2RouteTableAssociation960FE2AC": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcProtectedSubnet2RouteTableFA54AE0B",
        },
        "SubnetId": {
          "Ref": "VpcProtectedSubnet2SubnetC22C3325",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcProtectedSubnet2RouteTableFA54AE0B": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/Vpc/Default/ProtectedSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcProtectedSubnet2SubnetC22C3325": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.100.8.0/22",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Protected",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/Vpc/Default/ProtectedSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicRouteToTgw000F279134": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.101.0.0/20",
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicRouteToTgw010382C227": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.101.0.0/20",
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicRouteToTgw10C3652BD4": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.102.0.0/20",
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicRouteToTgw1164424897": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.102.0.0/20",
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet1DefaultRoute3DA9E72A": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet1EIPD7E02669": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/Vpc/Default/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet1NATGateway4D7517AA": {
      "DependsOn": [
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1RouteTableAssociation97140677",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet1EIPD7E02669",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/Vpc/Default/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet1RouteTable6C95E38E": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/Vpc/Default/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet1RouteTableAssociation97140677": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet1Subnet5C2D37C4": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.100.0.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/Vpc/Default/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet2DefaultRoute97F91067": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet2EIP3C605A87": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/Vpc/Default/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet2NATGateway9182C01D": {
      "DependsOn": [
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet2EIP3C605A87",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/Vpc/Default/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet2RouteTable94F7E489": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/Vpc/Default/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet2RouteTableAssociationDD5762D8": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet2Subnet691E08A3": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.100.1.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/Vpc/Default/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcR53ResolverEndpointE9CD13A7": {
      "Properties": {
        "Direction": "INBOUND",
        "IpAddresses": [
          {
            "SubnetId": {
              "Ref": "VpcForTgwAttachmentsSubnet1Subnet95D19052",
            },
          },
          {
            "SubnetId": {
              "Ref": "VpcForTgwAttachmentsSubnet2SubnetAEDBB0E8",
            },
          },
        ],
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcR53ResolverEndpointSg5A7EAA51",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::Route53Resolver::ResolverEndpoint",
    },
    "VpcR53ResolverEndpointSg5A7EAA51": {
      "Properties": {
        "GroupDescription": "BLEAFSI-CoreBanking-primary/Vpc/R53ResolverEndpointSg",
        "SecurityGroupEgress": [
          {
            "CidrIp": "255.255.255.255/32",
            "Description": "Disallow all traffic",
            "FromPort": 252,
            "IpProtocol": "icmp",
            "ToPort": 86,
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "10.0.0.0/16",
            "Description": "from 10.0.0.0/16:53",
            "FromPort": 53,
            "IpProtocol": "tcp",
            "ToPort": 53,
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcRdsEndpointABC2CAAE": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcVpcEndpointSecurityGroup7FA95FB5",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-1.rds",
        "SubnetIds": [
          {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/Vpc/Default",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcS3EndpointEnhanced7E221DBC": {
      "Properties": {
        "RouteTableIds": [
          {
            "Ref": "VpcProtectedSubnet1RouteTable69FCECD8",
          },
          {
            "Ref": "VpcProtectedSubnet2RouteTableFA54AE0B",
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".s3",
            ],
          ],
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/Vpc/Default",
          },
        ],
        "VpcEndpointType": "Gateway",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcSecretsManagerEndpointForPrivate91BE082A": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcSecretsManagerEndpointForPrivateSecurityGroup732C6BAD",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-1.secretsmanager",
        "SubnetIds": [
          {
            "Ref": "VpcForTgwAttachmentsSubnet1Subnet95D19052",
          },
          {
            "Ref": "VpcForTgwAttachmentsSubnet2SubnetAEDBB0E8",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/Vpc/Default",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcSecretsManagerEndpointForPrivateSecurityGroup732C6BAD": {
      "Properties": {
        "GroupDescription": "BLEAFSI-CoreBanking-primary/Vpc/Default/SecretsManagerEndpointForPrivate/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "Vpc8378EB38",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "Vpc8378EB38",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/Vpc/Default",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcSsmEndpointC46DB833": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcVpcEndpointSecurityGroup7FA95FB5",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-1.ssm",
        "SubnetIds": [
          {
            "Ref": "VpcForTgwAttachmentsSubnet1Subnet95D19052",
          },
          {
            "Ref": "VpcForTgwAttachmentsSubnet2SubnetAEDBB0E8",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/Vpc/Default",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcStsEndpointF89E8173": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcVpcEndpointSecurityGroup7FA95FB5",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-1.sts",
        "SubnetIds": [
          {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/Vpc/Default",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcTgw43A428E1": {
      "Properties": {
        "AmazonSideAsn": 64512,
        "Tags": [
          {
            "Key": "Name",
            "Value": "tgw-ap-northeast-1",
          },
        ],
      },
      "Type": "AWS::EC2::TransitGateway",
    },
    "VpcTgwAttachmentA32D0B42": {
      "Properties": {
        "SubnetIds": [
          {
            "Ref": "VpcForTgwAttachmentsSubnet1Subnet95D19052",
          },
          {
            "Ref": "VpcForTgwAttachmentsSubnet2SubnetAEDBB0E8",
          },
        ],
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::TransitGatewayAttachment",
    },
    "VpcVPCGWBF912B6E": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "VpcVpcEndpointSecurityGroup7FA95FB5": {
      "Properties": {
        "GroupDescription": "Security group for VPC endpoints used by CloudWatch Application Signals",
        "SecurityGroupEgress": [
          {
            "CidrIp": "255.255.255.255/32",
            "Description": "Disallow all traffic",
            "FromPort": 252,
            "IpProtocol": "icmp",
            "ToPort": 86,
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "Vpc8378EB38",
                "CidrBlock",
              ],
            },
            "Description": "Allow HTTPS from VPC CIDR for VPC endpoint access",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcVpcFlowLogsFlowLog421D53F0": {
      "Properties": {
        "DeliverLogsPermissionArn": {
          "Fn::GetAtt": [
            "VpcVpcFlowLogsLogRoleED2BD382",
            "Arn",
          ],
        },
        "LogDestinationType": "cloud-watch-logs",
        "LogGroupName": {
          "Ref": "VpcVpcFlowLogsLogGroup8558C776",
        },
        "ResourceId": {
          "Ref": "Vpc8378EB38",
        },
        "ResourceType": "VPC",
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/Vpc/VpcFlowLogs/VpcFlowLogs",
          },
        ],
        "TrafficType": "ALL",
      },
      "Type": "AWS::EC2::FlowLog",
    },
    "VpcVpcFlowLogsLogGroup8558C776": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 180,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "VpcVpcFlowLogsLogRoleDefaultPolicyD30183D1": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:DescribeLogStreams",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "VpcVpcFlowLogsLogGroup8558C776",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "VpcVpcFlowLogsLogRoleED2BD382",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "VpcVpcFlowLogsLogRoleDefaultPolicyD30183D1",
        "Roles": [
          {
            "Ref": "VpcVpcFlowLogsLogRoleED2BD382",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "VpcVpcFlowLogsLogRoleED2BD382": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "vpc-flow-logs.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "VpcXRayEdnpointD4EF46C8": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcXRayEdnpointSecurityGroupF647B21E",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-1.xray",
        "SubnetIds": [
          {
            "Ref": "VpcForTgwAttachmentsSubnet1Subnet95D19052",
          },
          {
            "Ref": "VpcForTgwAttachmentsSubnet2SubnetAEDBB0E8",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/Vpc/Default",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcXRayEdnpointSecurityGroupF647B21E": {
      "Properties": {
        "GroupDescription": "BLEAFSI-CoreBanking-primary/Vpc/Default/XRayEdnpoint/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "Vpc8378EB38",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "Vpc8378EB38",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-primary/Vpc/Default",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpccrossRegionSsmParamaddTgwIdSsmParamTgwPrimaryId5CAC710D": {
      "Properties": {
        "Name": "/bleafsi/test/TgwPrimaryId",
        "Type": "String",
        "Value": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "WafWebAclBE24253C": {
      "Properties": {
        "DefaultAction": {
          "Allow": {},
        },
        "Name": "BLEAFSIAWebAcl",
        "Rules": [
          {
            "Name": "AWSManagedRulesCommonRuleSet",
            "OverrideAction": {
              "Count": {},
            },
            "Priority": 1,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesCommonRuleSet",
                "VendorName": "AWS",
              },
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWS-AWSManagedRulesCommonRuleSet",
              "SampledRequestsEnabled": true,
            },
          },
          {
            "Name": "AWSManagedRulesKnownBadInputsRuleSet",
            "OverrideAction": {
              "Count": {},
            },
            "Priority": 2,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesKnownBadInputsRuleSet",
                "VendorName": "AWS",
              },
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWS-AWSManagedRulesKnownBadInputsRuleSet",
              "SampledRequestsEnabled": true,
            },
          },
          {
            "Name": "AWSManagedRulesAmazonIpReputationList",
            "OverrideAction": {
              "Count": {},
            },
            "Priority": 3,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesAmazonIpReputationList",
                "VendorName": "AWS",
              },
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWS-AWSManagedRulesAmazonIpReputationList",
              "SampledRequestsEnabled": true,
            },
          },
          {
            "Name": "AWSManagedRulesLinuxRuleSet",
            "OverrideAction": {
              "Count": {},
            },
            "Priority": 4,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesLinuxRuleSet",
                "VendorName": "AWS",
              },
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWS-AWSManagedRulesLinuxRuleSet",
              "SampledRequestsEnabled": true,
            },
          },
          {
            "Name": "AWSManagedRulesSQLiRuleSet",
            "OverrideAction": {
              "Count": {},
            },
            "Priority": 5,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesSQLiRuleSet",
                "VendorName": "AWS",
              },
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWS-AWSManagedRulesSQLiRuleSet",
              "SampledRequestsEnabled": true,
            },
          },
        ],
        "Scope": "REGIONAL",
        "VisibilityConfig": {
          "CloudWatchMetricsEnabled": true,
          "MetricName": "BLEAFSIWebAcl",
          "SampledRequestsEnabled": true,
        },
      },
      "Type": "AWS::WAFv2::WebACL",
    },
    "transactionDBDynamoDb": {
      "DependsOn": [
        "AppKeyAlias41A6B934",
        "AppKey2AF25043",
      ],
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "PK",
            "AttributeType": "S",
          },
          {
            "AttributeName": "SK",
            "AttributeType": "S",
          },
          {
            "AttributeName": "GSI1",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "GSI1",
            "KeySchema": [
              {
                "AttributeName": "GSI1",
                "KeyType": "HASH",
              },
            ],
            "Projection": {
              "ProjectionType": "ALL",
            },
          },
        ],
        "KeySchema": [
          {
            "AttributeName": "PK",
            "KeyType": "HASH",
          },
          {
            "AttributeName": "SK",
            "KeyType": "RANGE",
          },
        ],
        "Replicas": [
          {
            "PointInTimeRecoverySpecification": {
              "PointInTimeRecoveryEnabled": true,
            },
            "Region": "ap-northeast-1",
          },
          {
            "PointInTimeRecoverySpecification": {
              "PointInTimeRecoveryEnabled": true,
            },
            "Region": "ap-northeast-3",
          },
        ],
        "SSESpecification": {
          "SSEEnabled": true,
          "SSEType": "KMS",
        },
        "StreamSpecification": {
          "StreamViewType": "NEW_AND_OLD_IMAGES",
        },
      },
      "Type": "AWS::DynamoDB::GlobalTable",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`BLEAFSI-CoreBanking snapshot check Core banking sample Stacks 2`] = `
{
  "Outputs": {
    "CLIforTGWpeeringacceptance": {
      "Description": "1. Subsequent CLI for TGW peering acceptance",
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws ec2 accept-transit-gateway-peering-attachment --region ap-northeast-1 --transit-gateway-attachment-id ",
            {
              "Fn::GetAtt": [
                "VpccreateTgwPeeringAttachmentTgwPrimaryIdapnortheast1AA7928EE",
                "TransitGatewayPeeringAttachment.TransitGatewayAttachmentId",
              ],
            },
            " --profile ct-guest-sso",
          ],
        ],
      },
    },
    "CLIforaddingTGWrouteinprimaryregion": {
      "Description": "2. Subsequent CLI for adding TGW route in primary region",
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws ec2 create-transit-gateway-route --region ap-northeast-1 --destination-cidr-block 10.101.0.0/16 --transit-gateway-route-table-id ",
            {
              "Fn::GetAtt": [
                "ExportsReader8B249524",
                "/cdk/exports/BLEAFSI-CoreBanking-secondary/BLEAFSICoreBankingprimaryapnortheast1FnGetAttGetDefaultRouteTableId6DB194BATransitGateways0OptionsAssociationDefaultRouteTableIdFC78B5FF",
              ],
            },
            " --transit-gateway-attachment-id ",
            {
              "Fn::GetAtt": [
                "VpccreateTgwPeeringAttachmentTgwPrimaryIdapnortheast1AA7928EE",
                "TransitGatewayPeeringAttachment.TransitGatewayAttachmentId",
              ],
            },
            " --profile ct-guest-sso",
          ],
        ],
      },
    },
    "CLIforaddingTGWrouteinsecondaryregion": {
      "Description": "3. Subsequent CLI for adding TGW route in secondary region",
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws ec2 create-transit-gateway-route --region ap-northeast-3 --destination-cidr-block 10.100.0.0/16 --transit-gateway-route-table-id ",
            {
              "Fn::GetAtt": [
                "GetDefaultRouteTableId6DB194BA",
                "TransitGateways.0.Options.AssociationDefaultRouteTableId",
              ],
            },
            " --transit-gateway-attachment-id ",
            {
              "Fn::GetAtt": [
                "VpccreateTgwPeeringAttachmentTgwPrimaryIdapnortheast1AA7928EE",
                "TransitGatewayPeeringAttachment.TransitGatewayAttachmentId",
              ],
            },
            " --profile ct-guest-sso",
          ],
        ],
      },
    },
    "SampleMultiRegionAppParamTableName1EDCBB71": {
      "Value": {
        "Ref": "SampleMultiRegionAppParamTable7082CE0D",
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SampleMultiRegionAppBalanceTaskCwAgentConfigParameterD8E57378": {
      "Default": "/ecs/cloudwatch-agent/application-signals-config",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SampleMultiRegionAppCountTaskCwAgentConfigParameter4DE954CF": {
      "Default": "/ecs/cloudwatch-agent/application-signals-config",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SampleMultiRegionAppTransactionTaskCwAgentConfigParameter78C5D1CB": {
      "Default": "/ecs/cloudwatch-agent/application-signals-config",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SampleMultiRegionAppTransactionWorkerTaskCwAgentConfigParameter827C8A14": {
      "Default": "/ecs/cloudwatch-agent/application-signals-config",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
      "DependsOn": [
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-111111111111-ap-northeast-3",
          "S3Key": "4cd2f2411231aa073e609dc99a49b5c5e974252bf9abf0f9350d237d17cce8be.zip",
        },
        "Handler": "index.handler",
        "MemorySize": 256,
        "Role": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AppKey2AF25043": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "Description": "for App",
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::111111111111:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Encrypt*",
                "kms:Decrypt*",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
                "kms:Describe*",
              ],
              "Condition": {
                "ArnLike": {
                  "kms:EncryptionContext:aws:logs:arn": "arn:aws:logs:ap-northeast-3:111111111111:*",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "logs.ap-northeast-3.amazonaws.com",
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "AppKeyAlias41A6B934": {
      "Properties": {
        "AliasName": "alias/AppKey-for-app",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "AppKey2AF25043",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
    "AssociateVpcWithHostedZoneRoute53AssociateVpc15E9B44F": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "AssociateVpcWithHostedZoneRoute53AssociateVpcCustomResourcePolicy891619A5",
        "VpccreateTgwPeeringAttachmentTgwPrimaryIdapnortheast1CustomResourcePolicy29E15986",
        "VpccreateTgwPeeringAttachmentTgwPrimaryIdapnortheast1AA7928EE",
        "VpccrossRegionSsmParamaddTgwIdSsmParamTgwSecondaryId56CAAB3A",
        "VpccrossRegionSsmParampeerTgwIdTgwPrimaryIdapnortheast1GetParamTgwPrimaryIdCustomResourcePolicy767E1DD7",
        "VpccrossRegionSsmParampeerTgwIdTgwPrimaryIdapnortheast1GetParamTgwPrimaryId4730D181",
        "VpcDynamoDbEndpoint564903D1",
        "VpcEcrDockerEndpointEnhanced87EBAE8F",
        "VpcEcrEndpointEnhancedA71B0D84",
        "VpcForTgwAttachmentsSubnet1RouteTable8C881736",
        "VpcForTgwAttachmentsSubnet1RouteTableAssociation8E490026",
        "VpcForTgwAttachmentsSubnet1Subnet95D19052",
        "VpcForTgwAttachmentsSubnet2RouteTableCA78E48E",
        "VpcForTgwAttachmentsSubnet2RouteTableAssociation87852F7E",
        "VpcForTgwAttachmentsSubnet2SubnetAEDBB0E8",
        "VpcIGWD7BA715C",
        "VpcLogsEndpointForPrivateEnhanced6028892D",
        "VpcMonitoringEndpointEnhancedD2ABE4D5",
        "VpcProtectedSubnet1DefaultRouteAEBDEDB0",
        "VpcProtectedSubnet1RouteTable69FCECD8",
        "VpcProtectedSubnet1RouteTableAssociation62F625F2",
        "VpcProtectedSubnet1Subnet38ECE18A",
        "VpcProtectedSubnet2DefaultRouteA5CFB1D1",
        "VpcProtectedSubnet2RouteTableFA54AE0B",
        "VpcProtectedSubnet2RouteTableAssociation960FE2AC",
        "VpcProtectedSubnet2SubnetC22C3325",
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1EIPD7E02669",
        "VpcPublicSubnet1NATGateway4D7517AA",
        "VpcPublicSubnet1RouteTable6C95E38E",
        "VpcPublicSubnet1RouteTableAssociation97140677",
        "VpcPublicSubnet1Subnet5C2D37C4",
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2EIP3C605A87",
        "VpcPublicSubnet2NATGateway9182C01D",
        "VpcPublicSubnet2RouteTable94F7E489",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
        "VpcPublicSubnet2Subnet691E08A3",
        "VpcRdsEndpointABC2CAAE",
        "Vpc8378EB38",
        "VpcS3EndpointEnhanced7E221DBC",
        "VpcSecretsManagerEndpointForPrivate91BE082A",
        "VpcSecretsManagerEndpointForPrivateSecurityGroup732C6BAD",
        "VpcSsmEndpointC46DB833",
        "VpcStsEndpointF89E8173",
        "VpcVPCGWBF912B6E",
        "VpcXRayEdnpointD4EF46C8",
        "VpcXRayEdnpointSecurityGroupF647B21E",
        "VpcIsolatedRouteToTgw0010E66EA7",
        "VpcIsolatedRouteToTgw01215500D5",
        "VpcIsolatedRouteToTgw104C2BA69B",
        "VpcIsolatedRouteToTgw115B3B5E9B",
        "VpcIsolatedRouteToTgw20DE9074DA",
        "VpcIsolatedRouteToTgw217FCF0045",
        "VpcNaclPublicDefaultAssociationBLEAFSICoreBankingsecondaryVpcPublicSubnet133FD76514AF651D0",
        "VpcNaclPublicDefaultAssociationBLEAFSICoreBankingsecondaryVpcPublicSubnet210A14E5B3ADAC4BC",
        "VpcNaclPublicNaclEgressPublic7F2645E5",
        "VpcNaclPublicNaclIngressPublicCA388ADE",
        "VpcNaclPublicF3ACBBF5",
        "VpcPrivateRouteToTgw00C759BD7B",
        "VpcPrivateRouteToTgw016CC8C401",
        "VpcPrivateRouteToTgw102D7DA115",
        "VpcPrivateRouteToTgw11FA0FAEA3",
        "VpcPrivateRouteToTgw20BB19812E",
        "VpcPrivateRouteToTgw211FE6501E",
        "VpcPublicRouteToTgw000F279134",
        "VpcPublicRouteToTgw010382C227",
        "VpcPublicRouteToTgw10C3652BD4",
        "VpcPublicRouteToTgw1164424897",
        "VpcPublicRouteToTgw20F2597E8C",
        "VpcPublicRouteToTgw21479C9DC9",
        "VpcR53ResolverEndpointE9CD13A7",
        "VpcR53ResolverEndpointSg5A7EAA51",
        "VpcTgw43A428E1",
        "VpcTgwAttachmentA32D0B42",
        "VpcVpcEndpointSecurityGroup7FA95FB5",
        "VpcVpcFlowLogsLogGroup8558C776",
        "VpcVpcFlowLogsLogRoleDefaultPolicyD30183D1",
        "VpcVpcFlowLogsLogRoleED2BD382",
        "VpcVpcFlowLogsFlowLog421D53F0",
      ],
      "Properties": {
        "Create": {
          "Fn::Join": [
            "",
            [
              "{"service":"Route53","action":"associateVPCWithHostedZone","parameters":{"HostedZoneId":"",
              {
                "Fn::GetAtt": [
                  "AssociateVpcWithHostedZonecrossRegionSsmParamGetParamPrivateHostedZoneIdDC466103",
                  "Parameter.Value",
                ],
              },
              "","VPC":{"VPCRegion":"ap-northeast-3","VPCId":"",
              {
                "Ref": "Vpc8378EB38",
              },
              ""}},"region":"ap-northeast-1","physicalResourceId":{"id":"Route53AssociateVpc"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": {
          "Fn::Join": [
            "",
            [
              "{"service":"Route53","action":"associateVPCWithHostedZone","parameters":{"HostedZoneId":"",
              {
                "Fn::GetAtt": [
                  "AssociateVpcWithHostedZonecrossRegionSsmParamGetParamPrivateHostedZoneIdDC466103",
                  "Parameter.Value",
                ],
              },
              "","VPC":{"VPCRegion":"ap-northeast-3","VPCId":"",
              {
                "Ref": "Vpc8378EB38",
              },
              ""}},"region":"ap-northeast-1","physicalResourceId":{"id":"Route53AssociateVpc"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "AssociateVpcWithHostedZoneRoute53AssociateVpcCustomResourcePolicy891619A5": {
      "DependsOn": [
        "VpccreateTgwPeeringAttachmentTgwPrimaryIdapnortheast1CustomResourcePolicy29E15986",
        "VpccreateTgwPeeringAttachmentTgwPrimaryIdapnortheast1AA7928EE",
        "VpccrossRegionSsmParamaddTgwIdSsmParamTgwSecondaryId56CAAB3A",
        "VpccrossRegionSsmParampeerTgwIdTgwPrimaryIdapnortheast1GetParamTgwPrimaryIdCustomResourcePolicy767E1DD7",
        "VpccrossRegionSsmParampeerTgwIdTgwPrimaryIdapnortheast1GetParamTgwPrimaryId4730D181",
        "VpcDynamoDbEndpoint564903D1",
        "VpcEcrDockerEndpointEnhanced87EBAE8F",
        "VpcEcrEndpointEnhancedA71B0D84",
        "VpcForTgwAttachmentsSubnet1RouteTable8C881736",
        "VpcForTgwAttachmentsSubnet1RouteTableAssociation8E490026",
        "VpcForTgwAttachmentsSubnet1Subnet95D19052",
        "VpcForTgwAttachmentsSubnet2RouteTableCA78E48E",
        "VpcForTgwAttachmentsSubnet2RouteTableAssociation87852F7E",
        "VpcForTgwAttachmentsSubnet2SubnetAEDBB0E8",
        "VpcIGWD7BA715C",
        "VpcLogsEndpointForPrivateEnhanced6028892D",
        "VpcMonitoringEndpointEnhancedD2ABE4D5",
        "VpcProtectedSubnet1DefaultRouteAEBDEDB0",
        "VpcProtectedSubnet1RouteTable69FCECD8",
        "VpcProtectedSubnet1RouteTableAssociation62F625F2",
        "VpcProtectedSubnet1Subnet38ECE18A",
        "VpcProtectedSubnet2DefaultRouteA5CFB1D1",
        "VpcProtectedSubnet2RouteTableFA54AE0B",
        "VpcProtectedSubnet2RouteTableAssociation960FE2AC",
        "VpcProtectedSubnet2SubnetC22C3325",
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1EIPD7E02669",
        "VpcPublicSubnet1NATGateway4D7517AA",
        "VpcPublicSubnet1RouteTable6C95E38E",
        "VpcPublicSubnet1RouteTableAssociation97140677",
        "VpcPublicSubnet1Subnet5C2D37C4",
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2EIP3C605A87",
        "VpcPublicSubnet2NATGateway9182C01D",
        "VpcPublicSubnet2RouteTable94F7E489",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
        "VpcPublicSubnet2Subnet691E08A3",
        "VpcRdsEndpointABC2CAAE",
        "Vpc8378EB38",
        "VpcS3EndpointEnhanced7E221DBC",
        "VpcSecretsManagerEndpointForPrivate91BE082A",
        "VpcSecretsManagerEndpointForPrivateSecurityGroup732C6BAD",
        "VpcSsmEndpointC46DB833",
        "VpcStsEndpointF89E8173",
        "VpcVPCGWBF912B6E",
        "VpcXRayEdnpointD4EF46C8",
        "VpcXRayEdnpointSecurityGroupF647B21E",
        "VpcIsolatedRouteToTgw0010E66EA7",
        "VpcIsolatedRouteToTgw01215500D5",
        "VpcIsolatedRouteToTgw104C2BA69B",
        "VpcIsolatedRouteToTgw115B3B5E9B",
        "VpcIsolatedRouteToTgw20DE9074DA",
        "VpcIsolatedRouteToTgw217FCF0045",
        "VpcNaclPublicDefaultAssociationBLEAFSICoreBankingsecondaryVpcPublicSubnet133FD76514AF651D0",
        "VpcNaclPublicDefaultAssociationBLEAFSICoreBankingsecondaryVpcPublicSubnet210A14E5B3ADAC4BC",
        "VpcNaclPublicNaclEgressPublic7F2645E5",
        "VpcNaclPublicNaclIngressPublicCA388ADE",
        "VpcNaclPublicF3ACBBF5",
        "VpcPrivateRouteToTgw00C759BD7B",
        "VpcPrivateRouteToTgw016CC8C401",
        "VpcPrivateRouteToTgw102D7DA115",
        "VpcPrivateRouteToTgw11FA0FAEA3",
        "VpcPrivateRouteToTgw20BB19812E",
        "VpcPrivateRouteToTgw211FE6501E",
        "VpcPublicRouteToTgw000F279134",
        "VpcPublicRouteToTgw010382C227",
        "VpcPublicRouteToTgw10C3652BD4",
        "VpcPublicRouteToTgw1164424897",
        "VpcPublicRouteToTgw20F2597E8C",
        "VpcPublicRouteToTgw21479C9DC9",
        "VpcR53ResolverEndpointE9CD13A7",
        "VpcR53ResolverEndpointSg5A7EAA51",
        "VpcTgw43A428E1",
        "VpcTgwAttachmentA32D0B42",
        "VpcVpcEndpointSecurityGroup7FA95FB5",
        "VpcVpcFlowLogsLogGroup8558C776",
        "VpcVpcFlowLogsLogRoleDefaultPolicyD30183D1",
        "VpcVpcFlowLogsLogRoleED2BD382",
        "VpcVpcFlowLogsFlowLog421D53F0",
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "route53:*",
                "ec2:*",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AssociateVpcWithHostedZoneRoute53AssociateVpcCustomResourcePolicy891619A5",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AssociateVpcWithHostedZonecrossRegionSsmParamGetParamPrivateHostedZoneIdCustomResourcePolicy2A6004B6": {
      "DependsOn": [
        "VpccreateTgwPeeringAttachmentTgwPrimaryIdapnortheast1CustomResourcePolicy29E15986",
        "VpccreateTgwPeeringAttachmentTgwPrimaryIdapnortheast1AA7928EE",
        "VpccrossRegionSsmParamaddTgwIdSsmParamTgwSecondaryId56CAAB3A",
        "VpccrossRegionSsmParampeerTgwIdTgwPrimaryIdapnortheast1GetParamTgwPrimaryIdCustomResourcePolicy767E1DD7",
        "VpccrossRegionSsmParampeerTgwIdTgwPrimaryIdapnortheast1GetParamTgwPrimaryId4730D181",
        "VpcDynamoDbEndpoint564903D1",
        "VpcEcrDockerEndpointEnhanced87EBAE8F",
        "VpcEcrEndpointEnhancedA71B0D84",
        "VpcForTgwAttachmentsSubnet1RouteTable8C881736",
        "VpcForTgwAttachmentsSubnet1RouteTableAssociation8E490026",
        "VpcForTgwAttachmentsSubnet1Subnet95D19052",
        "VpcForTgwAttachmentsSubnet2RouteTableCA78E48E",
        "VpcForTgwAttachmentsSubnet2RouteTableAssociation87852F7E",
        "VpcForTgwAttachmentsSubnet2SubnetAEDBB0E8",
        "VpcIGWD7BA715C",
        "VpcLogsEndpointForPrivateEnhanced6028892D",
        "VpcMonitoringEndpointEnhancedD2ABE4D5",
        "VpcProtectedSubnet1DefaultRouteAEBDEDB0",
        "VpcProtectedSubnet1RouteTable69FCECD8",
        "VpcProtectedSubnet1RouteTableAssociation62F625F2",
        "VpcProtectedSubnet1Subnet38ECE18A",
        "VpcProtectedSubnet2DefaultRouteA5CFB1D1",
        "VpcProtectedSubnet2RouteTableFA54AE0B",
        "VpcProtectedSubnet2RouteTableAssociation960FE2AC",
        "VpcProtectedSubnet2SubnetC22C3325",
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1EIPD7E02669",
        "VpcPublicSubnet1NATGateway4D7517AA",
        "VpcPublicSubnet1RouteTable6C95E38E",
        "VpcPublicSubnet1RouteTableAssociation97140677",
        "VpcPublicSubnet1Subnet5C2D37C4",
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2EIP3C605A87",
        "VpcPublicSubnet2NATGateway9182C01D",
        "VpcPublicSubnet2RouteTable94F7E489",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
        "VpcPublicSubnet2Subnet691E08A3",
        "VpcRdsEndpointABC2CAAE",
        "Vpc8378EB38",
        "VpcS3EndpointEnhanced7E221DBC",
        "VpcSecretsManagerEndpointForPrivate91BE082A",
        "VpcSecretsManagerEndpointForPrivateSecurityGroup732C6BAD",
        "VpcSsmEndpointC46DB833",
        "VpcStsEndpointF89E8173",
        "VpcVPCGWBF912B6E",
        "VpcXRayEdnpointD4EF46C8",
        "VpcXRayEdnpointSecurityGroupF647B21E",
        "VpcIsolatedRouteToTgw0010E66EA7",
        "VpcIsolatedRouteToTgw01215500D5",
        "VpcIsolatedRouteToTgw104C2BA69B",
        "VpcIsolatedRouteToTgw115B3B5E9B",
        "VpcIsolatedRouteToTgw20DE9074DA",
        "VpcIsolatedRouteToTgw217FCF0045",
        "VpcNaclPublicDefaultAssociationBLEAFSICoreBankingsecondaryVpcPublicSubnet133FD76514AF651D0",
        "VpcNaclPublicDefaultAssociationBLEAFSICoreBankingsecondaryVpcPublicSubnet210A14E5B3ADAC4BC",
        "VpcNaclPublicNaclEgressPublic7F2645E5",
        "VpcNaclPublicNaclIngressPublicCA388ADE",
        "VpcNaclPublicF3ACBBF5",
        "VpcPrivateRouteToTgw00C759BD7B",
        "VpcPrivateRouteToTgw016CC8C401",
        "VpcPrivateRouteToTgw102D7DA115",
        "VpcPrivateRouteToTgw11FA0FAEA3",
        "VpcPrivateRouteToTgw20BB19812E",
        "VpcPrivateRouteToTgw211FE6501E",
        "VpcPublicRouteToTgw000F279134",
        "VpcPublicRouteToTgw010382C227",
        "VpcPublicRouteToTgw10C3652BD4",
        "VpcPublicRouteToTgw1164424897",
        "VpcPublicRouteToTgw20F2597E8C",
        "VpcPublicRouteToTgw21479C9DC9",
        "VpcR53ResolverEndpointE9CD13A7",
        "VpcR53ResolverEndpointSg5A7EAA51",
        "VpcTgw43A428E1",
        "VpcTgwAttachmentA32D0B42",
        "VpcVpcEndpointSecurityGroup7FA95FB5",
        "VpcVpcFlowLogsLogGroup8558C776",
        "VpcVpcFlowLogsLogRoleDefaultPolicyD30183D1",
        "VpcVpcFlowLogsLogRoleED2BD382",
        "VpcVpcFlowLogsFlowLog421D53F0",
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ssm:GetParameter",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AssociateVpcWithHostedZonecrossRegionSsmParamGetParamPrivateHostedZoneIdCustomResourcePolicy2A6004B6",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AssociateVpcWithHostedZonecrossRegionSsmParamGetParamPrivateHostedZoneIdDC466103": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "AssociateVpcWithHostedZonecrossRegionSsmParamGetParamPrivateHostedZoneIdCustomResourcePolicy2A6004B6",
        "VpccreateTgwPeeringAttachmentTgwPrimaryIdapnortheast1CustomResourcePolicy29E15986",
        "VpccreateTgwPeeringAttachmentTgwPrimaryIdapnortheast1AA7928EE",
        "VpccrossRegionSsmParamaddTgwIdSsmParamTgwSecondaryId56CAAB3A",
        "VpccrossRegionSsmParampeerTgwIdTgwPrimaryIdapnortheast1GetParamTgwPrimaryIdCustomResourcePolicy767E1DD7",
        "VpccrossRegionSsmParampeerTgwIdTgwPrimaryIdapnortheast1GetParamTgwPrimaryId4730D181",
        "VpcDynamoDbEndpoint564903D1",
        "VpcEcrDockerEndpointEnhanced87EBAE8F",
        "VpcEcrEndpointEnhancedA71B0D84",
        "VpcForTgwAttachmentsSubnet1RouteTable8C881736",
        "VpcForTgwAttachmentsSubnet1RouteTableAssociation8E490026",
        "VpcForTgwAttachmentsSubnet1Subnet95D19052",
        "VpcForTgwAttachmentsSubnet2RouteTableCA78E48E",
        "VpcForTgwAttachmentsSubnet2RouteTableAssociation87852F7E",
        "VpcForTgwAttachmentsSubnet2SubnetAEDBB0E8",
        "VpcIGWD7BA715C",
        "VpcLogsEndpointForPrivateEnhanced6028892D",
        "VpcMonitoringEndpointEnhancedD2ABE4D5",
        "VpcProtectedSubnet1DefaultRouteAEBDEDB0",
        "VpcProtectedSubnet1RouteTable69FCECD8",
        "VpcProtectedSubnet1RouteTableAssociation62F625F2",
        "VpcProtectedSubnet1Subnet38ECE18A",
        "VpcProtectedSubnet2DefaultRouteA5CFB1D1",
        "VpcProtectedSubnet2RouteTableFA54AE0B",
        "VpcProtectedSubnet2RouteTableAssociation960FE2AC",
        "VpcProtectedSubnet2SubnetC22C3325",
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1EIPD7E02669",
        "VpcPublicSubnet1NATGateway4D7517AA",
        "VpcPublicSubnet1RouteTable6C95E38E",
        "VpcPublicSubnet1RouteTableAssociation97140677",
        "VpcPublicSubnet1Subnet5C2D37C4",
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2EIP3C605A87",
        "VpcPublicSubnet2NATGateway9182C01D",
        "VpcPublicSubnet2RouteTable94F7E489",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
        "VpcPublicSubnet2Subnet691E08A3",
        "VpcRdsEndpointABC2CAAE",
        "Vpc8378EB38",
        "VpcS3EndpointEnhanced7E221DBC",
        "VpcSecretsManagerEndpointForPrivate91BE082A",
        "VpcSecretsManagerEndpointForPrivateSecurityGroup732C6BAD",
        "VpcSsmEndpointC46DB833",
        "VpcStsEndpointF89E8173",
        "VpcVPCGWBF912B6E",
        "VpcXRayEdnpointD4EF46C8",
        "VpcXRayEdnpointSecurityGroupF647B21E",
        "VpcIsolatedRouteToTgw0010E66EA7",
        "VpcIsolatedRouteToTgw01215500D5",
        "VpcIsolatedRouteToTgw104C2BA69B",
        "VpcIsolatedRouteToTgw115B3B5E9B",
        "VpcIsolatedRouteToTgw20DE9074DA",
        "VpcIsolatedRouteToTgw217FCF0045",
        "VpcNaclPublicDefaultAssociationBLEAFSICoreBankingsecondaryVpcPublicSubnet133FD76514AF651D0",
        "VpcNaclPublicDefaultAssociationBLEAFSICoreBankingsecondaryVpcPublicSubnet210A14E5B3ADAC4BC",
        "VpcNaclPublicNaclEgressPublic7F2645E5",
        "VpcNaclPublicNaclIngressPublicCA388ADE",
        "VpcNaclPublicF3ACBBF5",
        "VpcPrivateRouteToTgw00C759BD7B",
        "VpcPrivateRouteToTgw016CC8C401",
        "VpcPrivateRouteToTgw102D7DA115",
        "VpcPrivateRouteToTgw11FA0FAEA3",
        "VpcPrivateRouteToTgw20BB19812E",
        "VpcPrivateRouteToTgw211FE6501E",
        "VpcPublicRouteToTgw000F279134",
        "VpcPublicRouteToTgw010382C227",
        "VpcPublicRouteToTgw10C3652BD4",
        "VpcPublicRouteToTgw1164424897",
        "VpcPublicRouteToTgw20F2597E8C",
        "VpcPublicRouteToTgw21479C9DC9",
        "VpcR53ResolverEndpointE9CD13A7",
        "VpcR53ResolverEndpointSg5A7EAA51",
        "VpcTgw43A428E1",
        "VpcTgwAttachmentA32D0B42",
        "VpcVpcEndpointSecurityGroup7FA95FB5",
        "VpcVpcFlowLogsLogGroup8558C776",
        "VpcVpcFlowLogsLogRoleDefaultPolicyD30183D1",
        "VpcVpcFlowLogsLogRoleED2BD382",
        "VpcVpcFlowLogsFlowLog421D53F0",
      ],
      "Properties": {
        "Create": "{"service":"SSM","action":"getParameter","parameters":{"Name":"/bleafsi/test/PrivateHostedZoneId","WithDecryption":true},"region":"ap-northeast-1","physicalResourceId":{"id":"param-/bleafsi/test/PrivateHostedZoneId"}}",
        "InstallLatestAwsSdk": true,
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": "{"service":"SSM","action":"getParameter","parameters":{"Name":"/bleafsi/test/PrivateHostedZoneId","WithDecryption":true},"region":"ap-northeast-1","physicalResourceId":{"id":"param-/bleafsi/test/PrivateHostedZoneId"}}",
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomCrossRegionExportReaderCustomResourceProviderHandler46647B68": {
      "DependsOn": [
        "CustomCrossRegionExportReaderCustomResourceProviderRole10531BBD",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-111111111111-ap-northeast-3",
          "S3Key": "d41c8e6342cd078b5ea5aec11522bdb605eae00f4bb98a3fb0b44c827e9b5ca9.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomCrossRegionExportReaderCustomResourceProviderRole10531BBD",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomCrossRegionExportReaderCustomResourceProviderRole10531BBD": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:AddTagsToResource",
                    "ssm:RemoveTagsFromResource",
                    "ssm:GetParameters",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":ssm:ap-northeast-3:111111111111:parameter/cdk/exports/BLEAFSI-CoreBanking-secondary/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomCrossRegionExportWriterCustomResourceProviderHandlerD8786E8A": {
      "DependsOn": [
        "CustomCrossRegionExportWriterCustomResourceProviderRoleC951B1E1",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-111111111111-ap-northeast-3",
          "S3Key": "8a17fb3ceee821f797100bf65fa3047c164a08c03aa5a07fbcff9a676fb73b97.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomCrossRegionExportWriterCustomResourceProviderRoleC951B1E1",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomCrossRegionExportWriterCustomResourceProviderRoleC951B1E1": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:DeleteParameters",
                    "ssm:ListTagsForResource",
                    "ssm:GetParameters",
                    "ssm:PutParameter",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":ssm:us-west-2:111111111111:parameter/cdk/exports/*",
                        ],
                      ],
                    },
                  ],
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DBAuroraPgAuroraCPUUtil8FD0DC1C": {
      "Properties": {
        "ActionsEnabled": true,
        "AlarmActions": [
          {
            "Ref": "MonitorAlarmTopic1E34119C",
          },
        ],
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 3,
        "Dimensions": [
          {
            "Name": "DBClusterIdentifier",
            "Value": {
              "Ref": "DBAuroraPgAuroraCluster654F0C65",
            },
          },
        ],
        "EvaluationPeriods": 3,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "DBAuroraPgAuroraCluster654F0C65": {
      "DeletionPolicy": "Snapshot",
      "Properties": {
        "CopyTagsToSnapshot": true,
        "DBClusterParameterGroupName": "default.aurora-postgresql11",
        "DBSubnetGroupName": {
          "Ref": "DBAuroraPgAuroraClusterSubnets4FFFB644",
        },
        "EnableCloudwatchLogsExports": [
          "postgresql",
        ],
        "Engine": "aurora-postgresql",
        "EngineVersion": "11.9",
        "GlobalClusterIdentifier": "core-banking-global-db",
        "KmsKeyId": {
          "Fn::GetAtt": [
            "AppKey2AF25043",
            "Arn",
          ],
        },
        "Port": 5432,
        "StorageEncrypted": true,
        "VpcSecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "DBAuroraPgSgRdsF3DC7367",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBCluster",
      "UpdateReplacePolicy": "Snapshot",
    },
    "DBAuroraPgAuroraClusterInstance1CA8DBC8C": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "VpcProtectedSubnet1DefaultRouteAEBDEDB0",
        "VpcProtectedSubnet1RouteTableAssociation62F625F2",
        "VpcProtectedSubnet2DefaultRouteA5CFB1D1",
        "VpcProtectedSubnet2RouteTableAssociation960FE2AC",
      ],
      "Properties": {
        "DBClusterIdentifier": {
          "Ref": "DBAuroraPgAuroraCluster654F0C65",
        },
        "DBInstanceClass": "db.r5.large",
        "DBInstanceIdentifier": "instance1",
        "DBSubnetGroupName": {
          "Ref": "DBAuroraPgAuroraClusterSubnets4FFFB644",
        },
        "EnablePerformanceInsights": true,
        "Engine": "aurora-postgresql",
        "PerformanceInsightsKMSKeyId": {
          "Fn::GetAtt": [
            "AppKey2AF25043",
            "Arn",
          ],
        },
        "PerformanceInsightsRetentionPeriod": 7,
        "PubliclyAccessible": false,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "DBAuroraPgAuroraClusterInstance20FAB99C5": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "VpcProtectedSubnet1DefaultRouteAEBDEDB0",
        "VpcProtectedSubnet1RouteTableAssociation62F625F2",
        "VpcProtectedSubnet2DefaultRouteA5CFB1D1",
        "VpcProtectedSubnet2RouteTableAssociation960FE2AC",
      ],
      "Properties": {
        "DBClusterIdentifier": {
          "Ref": "DBAuroraPgAuroraCluster654F0C65",
        },
        "DBInstanceClass": "db.r5.large",
        "DBInstanceIdentifier": "instance2",
        "DBSubnetGroupName": {
          "Ref": "DBAuroraPgAuroraClusterSubnets4FFFB644",
        },
        "EnablePerformanceInsights": true,
        "Engine": "aurora-postgresql",
        "PerformanceInsightsKMSKeyId": {
          "Fn::GetAtt": [
            "AppKey2AF25043",
            "Arn",
          ],
        },
        "PerformanceInsightsRetentionPeriod": 7,
        "PubliclyAccessible": false,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "DBAuroraPgAuroraClusterLogRetentionpostgresql3C66E2AA": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/rds/cluster/",
              {
                "Ref": "DBAuroraPgAuroraCluster654F0C65",
              },
              "/postgresql",
            ],
          ],
        },
        "RetentionInDays": 90,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "DBAuroraPgAuroraClusterSecret87616595": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Description": {
          "Fn::Join": [
            "",
            [
              "Generated by the CDK for stack: ",
              {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@"\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{"username":"postgres"}",
        },
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "DBAuroraPgAuroraClusterSecretAttachment79578D24": {
      "Properties": {
        "SecretId": {
          "Ref": "DBAuroraPgAuroraClusterSecret87616595",
        },
        "TargetId": {
          "Ref": "DBAuroraPgAuroraCluster654F0C65",
        },
        "TargetType": "AWS::RDS::DBCluster",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "DBAuroraPgAuroraClusterSubnets4FFFB644": {
      "Properties": {
        "DBSubnetGroupDescription": "Subnets for AuroraCluster database",
        "SubnetIds": [
          {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "DBAuroraPgRdsEventsCluster22EF9729": {
      "Properties": {
        "Enabled": true,
        "EventCategories": [
          "failure",
          "failover",
          "maintenance",
        ],
        "SnsTopicArn": {
          "Ref": "MonitorAlarmTopic1E34119C",
        },
        "SourceType": "db-cluster",
      },
      "Type": "AWS::RDS::EventSubscription",
    },
    "DBAuroraPgRdsEventsInstances6B46FC66": {
      "Properties": {
        "Enabled": true,
        "EventCategories": [
          "availability",
          "configuration change",
          "deletion",
          "failover",
          "failure",
          "maintenance",
          "notification",
          "recovery",
        ],
        "SnsTopicArn": {
          "Ref": "MonitorAlarmTopic1E34119C",
        },
        "SourceType": "db-instance",
      },
      "Type": "AWS::RDS::EventSubscription",
    },
    "DBAuroraPgSgRdsF3DC7367": {
      "Properties": {
        "GroupDescription": "BLEAFSI-CoreBanking-secondary/DBAuroraPg/SgRds",
        "SecurityGroupEgress": [
          {
            "CidrIp": "255.255.255.255/32",
            "Description": "Disallow all traffic",
            "FromPort": 252,
            "IpProtocol": "icmp",
            "ToPort": 86,
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "DBAuroraPgSgRdsfromBLEAFSICoreBankingsecondaryECSAppcontainerAppSampleBaseSgFargateF4EF7EFBIndirectPortE02FA29D": {
      "Properties": {
        "Description": "from BLEAFSICoreBankingsecondaryECSAppcontainerAppSampleBaseSgFargateF4EF7EFB:{IndirectPort}",
        "FromPort": {
          "Fn::GetAtt": [
            "DBAuroraPgAuroraCluster654F0C65",
            "Endpoint.Port",
          ],
        },
        "GroupId": {
          "Fn::GetAtt": [
            "DBAuroraPgSgRdsF3DC7367",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "ECSAppcontainerAppSampleBaseSgFargateA0785180",
            "GroupId",
          ],
        },
        "ToPort": {
          "Fn::GetAtt": [
            "DBAuroraPgAuroraCluster654F0C65",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "DBAuroraPgSgRdsfromBLEAFSICoreBankingsecondarySampleMultiRegionAppBalanceFargateServiceSecurityGroup0A66A186IndirectPortC8742B66": {
      "Properties": {
        "Description": "from BLEAFSICoreBankingsecondarySampleMultiRegionAppBalanceFargateServiceSecurityGroup0A66A186:{IndirectPort}",
        "FromPort": {
          "Fn::GetAtt": [
            "DBAuroraPgAuroraCluster654F0C65",
            "Endpoint.Port",
          ],
        },
        "GroupId": {
          "Fn::GetAtt": [
            "DBAuroraPgSgRdsF3DC7367",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppBalanceFargateServiceSecurityGroup3FD93178",
            "GroupId",
          ],
        },
        "ToPort": {
          "Fn::GetAtt": [
            "DBAuroraPgAuroraCluster654F0C65",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "DBAuroraPgSgRdsfromBLEAFSICoreBankingsecondarySampleMultiRegionAppCountFargateServiceSecurityGroup63DD71AFIndirectPort0C8367A8": {
      "Properties": {
        "Description": "from BLEAFSICoreBankingsecondarySampleMultiRegionAppCountFargateServiceSecurityGroup63DD71AF:{IndirectPort}",
        "FromPort": {
          "Fn::GetAtt": [
            "DBAuroraPgAuroraCluster654F0C65",
            "Endpoint.Port",
          ],
        },
        "GroupId": {
          "Fn::GetAtt": [
            "DBAuroraPgSgRdsF3DC7367",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppCountFargateServiceSecurityGroup12EC9FEF",
            "GroupId",
          ],
        },
        "ToPort": {
          "Fn::GetAtt": [
            "DBAuroraPgAuroraCluster654F0C65",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "ECSAppcontainerAppSampleBaseAlbDB2A3544": {
      "DependsOn": [
        "ECSAppcrossRegionSsmParamGetParamEcrAppImageTagCustomResourcePolicy2A6B6D35",
        "ECSAppcrossRegionSsmParamGetParamEcrAppImageTag6CEB999C",
        "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameCustomResourcePolicyF1317220",
        "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameF4980EA3",
      ],
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
          {
            "Key": "access_logs.s3.enabled",
            "Value": "true",
          },
          {
            "Key": "access_logs.s3.bucket",
            "Value": {
              "Ref": "ECSAppcontainerAppSampleBasealblogbucket0B3FD4EA",
            },
          },
        ],
        "Scheme": "internal",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "ECSAppcontainerAppSampleBaseSgAlb1B19B99D",
              "GroupId",
            ],
          },
        ],
        "Subnets": [
          {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "ECSAppcontainerAppSampleBaseAlbhttp258CB6B9": {
      "DependsOn": [
        "ECSAppcrossRegionSsmParamGetParamEcrAppImageTagCustomResourcePolicy2A6B6D35",
        "ECSAppcrossRegionSsmParamGetParamEcrAppImageTag6CEB999C",
        "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameCustomResourcePolicyF1317220",
        "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameF4980EA3",
      ],
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "ECSAppcontainerAppSampleBaseAlbhttpEcsAppGroup5462138A",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "ECSAppcontainerAppSampleBaseAlbDB2A3544",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "ECSAppcontainerAppSampleBaseAlbhttpEcsAppGroup5462138A": {
      "DependsOn": [
        "ECSAppcrossRegionSsmParamGetParamEcrAppImageTagCustomResourcePolicy2A6B6D35",
        "ECSAppcrossRegionSsmParamGetParamEcrAppImageTag6CEB999C",
        "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameCustomResourcePolicyF1317220",
        "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameF4980EA3",
      ],
      "Properties": {
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "30",
          },
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "ECSAppcontainerAppSampleBaseCluster569A303B": {
      "DependsOn": [
        "ECSAppcrossRegionSsmParamGetParamEcrAppImageTagCustomResourcePolicy2A6B6D35",
        "ECSAppcrossRegionSsmParamGetParamEcrAppImageTag6CEB999C",
        "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameCustomResourcePolicyF1317220",
        "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameF4980EA3",
      ],
      "Properties": {
        "ClusterSettings": [
          {
            "Name": "containerInsights",
            "Value": "enabled",
          },
        ],
      },
      "Type": "AWS::ECS::Cluster",
    },
    "ECSAppcontainerAppSampleBaseCluster9D2F5822": {
      "DependsOn": [
        "ECSAppcrossRegionSsmParamGetParamEcrAppImageTagCustomResourcePolicy2A6B6D35",
        "ECSAppcrossRegionSsmParamGetParamEcrAppImageTag6CEB999C",
        "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameCustomResourcePolicyF1317220",
        "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameF4980EA3",
      ],
      "Properties": {
        "CapacityProviders": [
          "FARGATE",
          "FARGATE_SPOT",
        ],
        "Cluster": {
          "Ref": "ECSAppcontainerAppSampleBaseCluster569A303B",
        },
        "DefaultCapacityProviderStrategy": [],
      },
      "Type": "AWS::ECS::ClusterCapacityProviderAssociations",
    },
    "ECSAppcontainerAppSampleBaseEcsServiceTaskRole91D7335C": {
      "DependsOn": [
        "ECSAppcrossRegionSsmParamGetParamEcrAppImageTagCustomResourcePolicy2A6B6D35",
        "ECSAppcrossRegionSsmParamGetParamEcrAppImageTag6CEB999C",
        "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameCustomResourcePolicyF1317220",
        "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameF4980EA3",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "ECSAppcontainerAppSampleBaseEcsTask252AEDDF": {
      "DependsOn": [
        "ECSAppcrossRegionSsmParamGetParamEcrAppImageTagCustomResourcePolicy2A6B6D35",
        "ECSAppcrossRegionSsmParamGetParamEcrAppImageTag6CEB999C",
        "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameCustomResourcePolicyF1317220",
        "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameF4980EA3",
      ],
      "Properties": {
        "ContainerDefinitions": [
          {
            "Cpu": 448,
            "Environment": [
              {
                "Name": "ENVIRONMENT_VARIABLE_SAMPLE_KEY",
                "Value": "Environment Variable Sample Value",
              },
            ],
            "Essential": true,
            "Image": {
              "Fn::Join": [
                "",
                [
                  "111111111111.dkr.ecr.ap-northeast-3.",
                  {
                    "Ref": "AWS::URLSuffix",
                  },
                  "/",
                  {
                    "Fn::GetAtt": [
                      "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameF4980EA3",
                      "Parameter.Value",
                    ],
                  },
                  ":",
                  {
                    "Fn::GetAtt": [
                      "ECSAppcrossRegionSsmParamGetParamEcrAppImageTag6CEB999C",
                      "Parameter.Value",
                    ],
                  },
                ],
              ],
            },
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "ECSAppcontainerAppSampleBaseFargateLogGroupA7A6AEB2",
                },
                "awslogs-region": "ap-northeast-3",
                "awslogs-stream-prefix": "BLEA-ECSApp-",
              },
            },
            "Memory": 960,
            "MemoryReservation": 768,
            "Name": "EcsApp",
            "PortMappings": [
              {
                "ContainerPort": 80,
                "Protocol": "tcp",
              },
            ],
          },
        ],
        "Cpu": "512",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "ECSAppcontainerAppSampleBaseEcsTaskExecutionRole023854EF",
            "Arn",
          ],
        },
        "Family": "BLEAFSICoreBankingsecondaryECSAppcontainerAppSampleBaseEcsTask4B8035EC",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "ECSAppcontainerAppSampleBaseEcsServiceTaskRole91D7335C",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "ECSAppcontainerAppSampleBaseEcsTaskExecutionRole023854EF": {
      "DependsOn": [
        "ECSAppcrossRegionSsmParamGetParamEcrAppImageTagCustomResourcePolicy2A6B6D35",
        "ECSAppcrossRegionSsmParamGetParamEcrAppImageTag6CEB999C",
        "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameCustomResourcePolicyF1317220",
        "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameF4980EA3",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "ECSAppcontainerAppSampleBaseEcsTaskExecutionRoleDefaultPolicy3EB42759": {
      "DependsOn": [
        "ECSAppcrossRegionSsmParamGetParamEcrAppImageTagCustomResourcePolicy2A6B6D35",
        "ECSAppcrossRegionSsmParamGetParamEcrAppImageTag6CEB999C",
        "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameCustomResourcePolicyF1317220",
        "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameF4980EA3",
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:ap-northeast-3:111111111111:repository/",
                    {
                      "Fn::GetAtt": [
                        "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameF4980EA3",
                        "Parameter.Value",
                      ],
                    },
                  ],
                ],
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "ecr-public:GetAuthorizationToken",
                "sts:GetServiceBearerToken",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ECSAppcontainerAppSampleBaseFargateLogGroupA7A6AEB2",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ECSAppcontainerAppSampleBaseEcsTaskExecutionRoleDefaultPolicy3EB42759",
        "Roles": [
          {
            "Ref": "ECSAppcontainerAppSampleBaseEcsTaskExecutionRole023854EF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ECSAppcontainerAppSampleBaseFargateLogGroupA7A6AEB2": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ECSAppcrossRegionSsmParamGetParamEcrAppImageTagCustomResourcePolicy2A6B6D35",
        "ECSAppcrossRegionSsmParamGetParamEcrAppImageTag6CEB999C",
        "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameCustomResourcePolicyF1317220",
        "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameF4980EA3",
      ],
      "Properties": {
        "KmsKeyId": {
          "Fn::GetAtt": [
            "AppKey2AF25043",
            "Arn",
          ],
        },
        "RetentionInDays": 90,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "ECSAppcontainerAppSampleBaseFargateServiceDAE6BFD9": {
      "DependsOn": [
        "ECSAppcontainerAppSampleBaseAlbhttpEcsAppGroup5462138A",
        "ECSAppcontainerAppSampleBaseAlbhttp258CB6B9",
        "ECSAppcontainerAppSampleBaseEcsServiceTaskRole91D7335C",
        "ECSAppcrossRegionSsmParamGetParamEcrAppImageTagCustomResourcePolicy2A6B6D35",
        "ECSAppcrossRegionSsmParamGetParamEcrAppImageTag6CEB999C",
        "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameCustomResourcePolicyF1317220",
        "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameF4980EA3",
      ],
      "Properties": {
        "CapacityProviderStrategy": [
          {
            "CapacityProvider": "FARGATE",
            "Weight": 1,
          },
        ],
        "Cluster": {
          "Ref": "ECSAppcontainerAppSampleBaseCluster569A303B",
        },
        "DeploymentConfiguration": {
          "Alarms": {
            "AlarmNames": [],
            "Enable": false,
            "Rollback": false,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 2,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LoadBalancers": [
          {
            "ContainerName": "EcsApp",
            "ContainerPort": 80,
            "TargetGroupArn": {
              "Ref": "ECSAppcontainerAppSampleBaseAlbhttpEcsAppGroup5462138A",
            },
          },
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "ECSAppcontainerAppSampleBaseSgFargateA0785180",
                  "GroupId",
                ],
              },
            ],
            "Subnets": [
              {
                "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
              },
              {
                "Ref": "VpcProtectedSubnet2SubnetC22C3325",
              },
            ],
          },
        },
        "PlatformVersion": "LATEST",
        "TaskDefinition": {
          "Ref": "ECSAppcontainerAppSampleBaseEcsTask252AEDDF",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "ECSAppcontainerAppSampleBaseSgAlb1B19B99D": {
      "DependsOn": [
        "ECSAppcrossRegionSsmParamGetParamEcrAppImageTagCustomResourcePolicy2A6B6D35",
        "ECSAppcrossRegionSsmParamGetParamEcrAppImageTag6CEB999C",
        "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameCustomResourcePolicyF1317220",
        "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameF4980EA3",
      ],
      "Properties": {
        "GroupDescription": "BLEAFSI-CoreBanking-secondary/ECSApp/containerAppSampleBase/SgAlb",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "ECSAppcontainerAppSampleBaseSgAlbtoBLEAFSICoreBankingsecondaryECSAppcontainerAppSampleBaseSgFargateF4EF7EFB80A6C3919B": {
      "DependsOn": [
        "ECSAppcrossRegionSsmParamGetParamEcrAppImageTagCustomResourcePolicy2A6B6D35",
        "ECSAppcrossRegionSsmParamGetParamEcrAppImageTag6CEB999C",
        "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameCustomResourcePolicyF1317220",
        "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameF4980EA3",
      ],
      "Properties": {
        "Description": "to BLEAFSICoreBankingsecondaryECSAppcontainerAppSampleBaseSgFargateF4EF7EFB:80",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "ECSAppcontainerAppSampleBaseSgFargateA0785180",
            "GroupId",
          ],
        },
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "ECSAppcontainerAppSampleBaseSgAlb1B19B99D",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "ECSAppcontainerAppSampleBaseSgFargateA0785180": {
      "DependsOn": [
        "ECSAppcrossRegionSsmParamGetParamEcrAppImageTagCustomResourcePolicy2A6B6D35",
        "ECSAppcrossRegionSsmParamGetParamEcrAppImageTag6CEB999C",
        "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameCustomResourcePolicyF1317220",
        "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameF4980EA3",
      ],
      "Properties": {
        "GroupDescription": "BLEAFSI-CoreBanking-secondary/ECSApp/containerAppSampleBase/SgFargate",
        "SecurityGroupEgress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "Vpc8378EB38",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "Vpc8378EB38",
                      "CidrBlock",
                    ],
                  },
                  ":ALL PORTS",
                ],
              ],
            },
            "FromPort": 0,
            "IpProtocol": "tcp",
            "ToPort": 65535,
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "ECSAppcontainerAppSampleBaseSgFargatefromBLEAFSICoreBankingsecondaryECSAppcontainerAppSampleBaseSgAlb23E1CE5280CB87E950": {
      "DependsOn": [
        "ECSAppcrossRegionSsmParamGetParamEcrAppImageTagCustomResourcePolicy2A6B6D35",
        "ECSAppcrossRegionSsmParamGetParamEcrAppImageTag6CEB999C",
        "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameCustomResourcePolicyF1317220",
        "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameF4980EA3",
      ],
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "ECSAppcontainerAppSampleBaseSgFargateA0785180",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "ECSAppcontainerAppSampleBaseSgAlb1B19B99D",
            "GroupId",
          ],
        },
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "ECSAppcontainerAppSampleBaseSgFargatetoBLEAFSICoreBankingsecondaryDBAuroraPgSgRds8E7AF5EEIndirectPort1C4520D1": {
      "DependsOn": [
        "ECSAppcrossRegionSsmParamGetParamEcrAppImageTagCustomResourcePolicy2A6B6D35",
        "ECSAppcrossRegionSsmParamGetParamEcrAppImageTag6CEB999C",
        "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameCustomResourcePolicyF1317220",
        "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameF4980EA3",
      ],
      "Properties": {
        "Description": "to BLEAFSICoreBankingsecondaryDBAuroraPgSgRds8E7AF5EE:{IndirectPort}",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "DBAuroraPgSgRdsF3DC7367",
            "GroupId",
          ],
        },
        "FromPort": {
          "Fn::GetAtt": [
            "DBAuroraPgAuroraCluster654F0C65",
            "Endpoint.Port",
          ],
        },
        "GroupId": {
          "Fn::GetAtt": [
            "ECSAppcontainerAppSampleBaseSgFargateA0785180",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": {
          "Fn::GetAtt": [
            "DBAuroraPgAuroraCluster654F0C65",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "ECSAppcontainerAppSampleBaseWebAclAssociation64E05BAF": {
      "DependsOn": [
        "ECSAppcrossRegionSsmParamGetParamEcrAppImageTagCustomResourcePolicy2A6B6D35",
        "ECSAppcrossRegionSsmParamGetParamEcrAppImageTag6CEB999C",
        "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameCustomResourcePolicyF1317220",
        "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameF4980EA3",
      ],
      "Properties": {
        "ResourceArn": {
          "Ref": "ECSAppcontainerAppSampleBaseAlbDB2A3544",
        },
        "WebACLArn": {
          "Fn::GetAtt": [
            "WafWebAclBE24253C",
            "Arn",
          ],
        },
      },
      "Type": "AWS::WAFv2::WebACLAssociation",
    },
    "ECSAppcontainerAppSampleBasealblogbucket0B3FD4EA": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ECSAppcrossRegionSsmParamGetParamEcrAppImageTagCustomResourcePolicy2A6B6D35",
        "ECSAppcrossRegionSsmParamGetParamEcrAppImageTag6CEB999C",
        "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameCustomResourcePolicyF1317220",
        "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameF4980EA3",
      ],
      "Properties": {
        "AccessControl": "Private",
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "ECSAppcontainerAppSampleBasealblogbucketPolicy03FEA10B": {
      "DependsOn": [
        "ECSAppcrossRegionSsmParamGetParamEcrAppImageTagCustomResourcePolicy2A6B6D35",
        "ECSAppcrossRegionSsmParamGetParamEcrAppImageTag6CEB999C",
        "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameCustomResourcePolicyF1317220",
        "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameF4980EA3",
      ],
      "Properties": {
        "Bucket": {
          "Ref": "ECSAppcontainerAppSampleBasealblogbucket0B3FD4EA",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ECSAppcontainerAppSampleBasealblogbucket0B3FD4EA",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ECSAppcontainerAppSampleBasealblogbucket0B3FD4EA",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "s3:PutObject",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::383597477331:root",
                    ],
                  ],
                },
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "ECSAppcontainerAppSampleBasealblogbucket0B3FD4EA",
                        "Arn",
                      ],
                    },
                    "/AWSLogs/111111111111/*",
                  ],
                ],
              },
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "StringEquals": {
                  "s3:x-amz-acl": "bucket-owner-full-control",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "delivery.logs.amazonaws.com",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "ECSAppcontainerAppSampleBasealblogbucket0B3FD4EA",
                        "Arn",
                      ],
                    },
                    "/AWSLogs/111111111111/*",
                  ],
                ],
              },
            },
            {
              "Action": "s3:GetBucketAcl",
              "Effect": "Allow",
              "Principal": {
                "Service": "delivery.logs.amazonaws.com",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "ECSAppcontainerAppSampleBasealblogbucket0B3FD4EA",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "ECSAppcrossRegionSsmParamGetParamEcrAppImageTag6CEB999C": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "ECSAppcrossRegionSsmParamGetParamEcrAppImageTagCustomResourcePolicy2A6B6D35",
      ],
      "Properties": {
        "Create": "{"service":"SSM","action":"getParameter","parameters":{"Name":"/bleafsi/test/EcrAppImageTag","WithDecryption":true},"region":"ap-northeast-1","physicalResourceId":{"id":"param-/bleafsi/test/EcrAppImageTag"}}",
        "InstallLatestAwsSdk": true,
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": "{"service":"SSM","action":"getParameter","parameters":{"Name":"/bleafsi/test/EcrAppImageTag","WithDecryption":true},"region":"ap-northeast-1","physicalResourceId":{"id":"param-/bleafsi/test/EcrAppImageTag"}}",
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "ECSAppcrossRegionSsmParamGetParamEcrAppImageTagCustomResourcePolicy2A6B6D35": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ssm:GetParameter",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ECSAppcrossRegionSsmParamGetParamEcrAppImageTagCustomResourcePolicy2A6B6D35",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameCustomResourcePolicyF1317220": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ssm:GetParameter",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameCustomResourcePolicyF1317220",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameF4980EA3": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "ECSAppcrossRegionSsmParamGetParamEcrAppRepositoryNameCustomResourcePolicyF1317220",
      ],
      "Properties": {
        "Create": "{"service":"SSM","action":"getParameter","parameters":{"Name":"/bleafsi/test/EcrAppRepositoryName","WithDecryption":true},"region":"ap-northeast-1","physicalResourceId":{"id":"param-/bleafsi/test/EcrAppRepositoryName"}}",
        "InstallLatestAwsSdk": true,
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": "{"service":"SSM","action":"getParameter","parameters":{"Name":"/bleafsi/test/EcrAppRepositoryName","WithDecryption":true},"region":"ap-northeast-1","physicalResourceId":{"id":"param-/bleafsi/test/EcrAppRepositoryName"}}",
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "ExportsReader8B249524": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ReaderProps": {
          "imports": {
            "/cdk/exports/BLEAFSI-CoreBanking-secondary/BLEAFSICoreBankingprimaryapnortheast1FnGetAttGetDefaultRouteTableId6DB194BATransitGateways0OptionsAssociationDefaultRouteTableIdFC78B5FF": "{{resolve:ssm:/cdk/exports/BLEAFSI-CoreBanking-secondary/BLEAFSICoreBankingprimaryapnortheast1FnGetAttGetDefaultRouteTableId6DB194BATransitGateways0OptionsAssociationDefaultRouteTableIdFC78B5FF}}",
            "/cdk/exports/BLEAFSI-CoreBanking-secondary/BLEAFSICoreBankingprimaryapnortheast1FnGetAtttransactionDBDynamoDbArn1E79A864": "{{resolve:ssm:/cdk/exports/BLEAFSI-CoreBanking-secondary/BLEAFSICoreBankingprimaryapnortheast1FnGetAtttransactionDBDynamoDbArn1E79A864}}",
            "/cdk/exports/BLEAFSI-CoreBanking-secondary/BLEAFSICoreBankingprimaryapnortheast1RefBLEAFSICoreBankingprimaryDBAuroraPgAuroraClusterSecret7B31D2F13fdaad7efa858a3daf9490cf0a702aeb632D9498": "{{resolve:ssm:/cdk/exports/BLEAFSI-CoreBanking-secondary/BLEAFSICoreBankingprimaryapnortheast1RefBLEAFSICoreBankingprimaryDBAuroraPgAuroraClusterSecret7B31D2F13fdaad7efa858a3daf9490cf0a702aeb632D9498}}",
          },
          "prefix": "BLEAFSI-CoreBanking-secondary",
          "region": "ap-northeast-3",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomCrossRegionExportReaderCustomResourceProviderHandler46647B68",
            "Arn",
          ],
        },
      },
      "Type": "Custom::CrossRegionExportReader",
      "UpdateReplacePolicy": "Delete",
    },
    "ExportsWriteruswest209BD44F0A7CF058B": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomCrossRegionExportWriterCustomResourceProviderHandlerD8786E8A",
            "Arn",
          ],
        },
        "WriterProps": {
          "exports": {
            "/cdk/exports/BLEAFSI-CoreBanking-monitoring/BLEAFSICoreBankingsecondaryapnortheast3FnGetAttGetDefaultRouteTableId6DB194BATransitGateways0OptionsAssociationDefaultRouteTableId795B05C5": {
              "Fn::GetAtt": [
                "GetDefaultRouteTableId6DB194BA",
                "TransitGateways.0.Options.AssociationDefaultRouteTableId",
              ],
            },
          },
          "region": "us-west-2",
        },
      },
      "Type": "Custom::CrossRegionExportWriter",
      "UpdateReplacePolicy": "Delete",
    },
    "GetDefaultRouteTableId6DB194BA": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "GetDefaultRouteTableIdCustomResourcePolicy2240EBDC",
      ],
      "Properties": {
        "Create": {
          "Fn::Join": [
            "",
            [
              "{"service":"EC2","action":"describeTransitGateways","parameters":{"TransitGatewayIds":["",
              {
                "Ref": "VpcTgw43A428E1",
              },
              ""]},"physicalResourceId":{"id":"GetDefaultRouteTableId"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": {
          "Fn::Join": [
            "",
            [
              "{"service":"EC2","action":"describeTransitGateways","parameters":{"TransitGatewayIds":["",
              {
                "Ref": "VpcTgw43A428E1",
              },
              ""]},"physicalResourceId":{"id":"GetDefaultRouteTableId"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "GetDefaultRouteTableIdCustomResourcePolicy2240EBDC": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ec2:DescribeTransitGateways",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GetDefaultRouteTableIdCustomResourcePolicy2240EBDC",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-111111111111-ap-northeast-3",
          "S3Key": "2819175352ad1ce0dae768e83fc328fb70fb5f10b4a8ff0ccbcb791f02b0716d.zip",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "MonitorAlarmEmailBA1444D7": {
      "Properties": {
        "Endpoint": "exsample@exsample.com",
        "Protocol": "email",
        "TopicArn": {
          "Ref": "MonitorAlarmTopic1E34119C",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "MonitorAlarmTopic1E34119C": {
      "Type": "AWS::SNS::Topic",
    },
    "MonitorAlarmTopicPolicy3B1D026A": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudwatch.amazonaws.com",
              },
              "Resource": {
                "Ref": "MonitorAlarmTopic1E34119C",
              },
              "Sid": "0",
            },
            {
              "Action": "sns:Publish",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false,
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": {
                "Ref": "MonitorAlarmTopic1E34119C",
              },
              "Sid": "EnforcePublishersToUseSSL",
            },
          ],
          "Version": "2012-10-17",
        },
        "Topics": [
          {
            "Ref": "MonitorAlarmTopic1E34119C",
          },
        ],
      },
      "Type": "AWS::SNS::TopicPolicy",
    },
    "SampleMultiRegionAppAlb4934C8BB": {
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Scheme": "internal",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "SampleMultiRegionAppAlbSecurityGroupE1B8B642",
              "GroupId",
            ],
          },
        ],
        "Subnets": [
          {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "SampleMultiRegionAppAlbListener5529D23B": {
      "Properties": {
        "DefaultActions": [
          {
            "FixedResponseConfig": {
              "StatusCode": "400",
            },
            "Type": "fixed-response",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "SampleMultiRegionAppAlb4934C8BB",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "SampleMultiRegionAppAlbListenerbalanceRule65E4B83C": {
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "SampleMultiRegionAppBalanceGroup2D002CE6",
            },
            "Type": "forward",
          },
        ],
        "Conditions": [
          {
            "Field": "path-pattern",
            "PathPatternConfig": {
              "Values": [
                "/balance*",
              ],
            },
          },
        ],
        "ListenerArn": {
          "Ref": "SampleMultiRegionAppAlbListener5529D23B",
        },
        "Priority": 1,
      },
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
    },
    "SampleMultiRegionAppAlbListenercountRuleE41D7BB5": {
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "SampleMultiRegionAppCountGroupF35DCD9E",
            },
            "Type": "forward",
          },
        ],
        "Conditions": [
          {
            "Field": "path-pattern",
            "PathPatternConfig": {
              "Values": [
                "/count*",
              ],
            },
          },
        ],
        "ListenerArn": {
          "Ref": "SampleMultiRegionAppAlbListener5529D23B",
        },
        "Priority": 2,
      },
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
    },
    "SampleMultiRegionAppAlbListenertransactionRuleD04F551A": {
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "SampleMultiRegionAppTransactionGroupBBCBB2BD",
            },
            "Type": "forward",
          },
        ],
        "Conditions": [
          {
            "Field": "path-pattern",
            "PathPatternConfig": {
              "Values": [
                "/transaction*",
              ],
            },
          },
        ],
        "ListenerArn": {
          "Ref": "SampleMultiRegionAppAlbListener5529D23B",
        },
        "Priority": 3,
      },
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
    },
    "SampleMultiRegionAppAlbSecurityGroupE1B8B642": {
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB BLEAFSICoreBankingsecondarySampleMultiRegionAppAlbF5865706",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SampleMultiRegionAppAlbSecurityGrouptoBLEAFSICoreBankingsecondarySampleMultiRegionAppBalanceFargateServiceSecurityGroup0A66A186300096EC762C": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppBalanceFargateServiceSecurityGroup3FD93178",
            "GroupId",
          ],
        },
        "FromPort": 3000,
        "GroupId": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppAlbSecurityGroupE1B8B642",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 3000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "SampleMultiRegionAppAlbSecurityGrouptoBLEAFSICoreBankingsecondarySampleMultiRegionAppCountFargateServiceSecurityGroup63DD71AF300064280800": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppCountFargateServiceSecurityGroup12EC9FEF",
            "GroupId",
          ],
        },
        "FromPort": 3000,
        "GroupId": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppAlbSecurityGroupE1B8B642",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 3000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "SampleMultiRegionAppAlbSecurityGrouptoBLEAFSICoreBankingsecondarySampleMultiRegionAppTransactionFargateServiceSecurityGroup95F3D9103000A130DF59": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppTransactionFargateServiceSecurityGroupAAC95742",
            "GroupId",
          ],
        },
        "FromPort": 3000,
        "GroupId": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppAlbSecurityGroupE1B8B642",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 3000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "SampleMultiRegionAppApplicationSignalsMonitoringApplicationSignalsDashboardC29747DF": {
      "Properties": {
        "DashboardBody": {
          "Fn::Join": [
            "",
            [
              "{"widgets":[{"type":"metric","width":12,"height":6,"x":0,"y":0,"properties":{"view":"timeSeries","title":"balance - Service Overview","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["ApplicationSignals","Latency","Environment","production","Service","balance"],["ApplicationSignals","Error","Environment","production","Service","balance",{"yAxis":"right"}]],"yAxis":{}}},{"type":"metric","width":12,"height":6,"x":12,"y":0,"properties":{"view":"timeSeries","title":"count - Service Overview","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["ApplicationSignals","Latency","Environment","production","Service","count"],["ApplicationSignals","Error","Environment","production","Service","count",{"yAxis":"right"}]],"yAxis":{}}},{"type":"metric","width":12,"height":6,"x":0,"y":6,"properties":{"view":"timeSeries","title":"transaction - Service Overview","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["ApplicationSignals","Latency","Environment","production","Service","transaction"],["ApplicationSignals","Error","Environment","production","Service","transaction",{"yAxis":"right"}]],"yAxis":{}}},{"type":"metric","width":12,"height":6,"x":12,"y":6,"properties":{"view":"timeSeries","title":"transaction-worker - Service Overview","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["ApplicationSignals","Latency","Environment","production","Service","transaction-worker"],["ApplicationSignals","Error","Environment","production","Service","transaction-worker",{"yAxis":"right"}]],"yAxis":{}}},{"type":"metric","width":12,"height":6,"x":0,"y":12,"properties":{"view":"timeSeries","title":"balance - ECS Health","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/ECS","CPUUtilization","ClusterName","",
              {
                "Ref": "SampleMultiRegionAppCluster9D88E1C2",
              },
              "","ServiceName","",
              {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppBalanceFargateServiceB3CE9C1E",
                  "Name",
                ],
              },
              ""],["AWS/ECS","MemoryUtilization","ClusterName","",
              {
                "Ref": "SampleMultiRegionAppCluster9D88E1C2",
              },
              "","ServiceName","",
              {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppBalanceFargateServiceB3CE9C1E",
                  "Name",
                ],
              },
              "",{"yAxis":"right"}]],"yAxis":{}}},{"type":"metric","width":12,"height":6,"x":12,"y":12,"properties":{"view":"timeSeries","title":"count - ECS Health","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/ECS","CPUUtilization","ClusterName","",
              {
                "Ref": "SampleMultiRegionAppCluster9D88E1C2",
              },
              "","ServiceName","",
              {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppCountFargateService2EE1C613",
                  "Name",
                ],
              },
              ""],["AWS/ECS","MemoryUtilization","ClusterName","",
              {
                "Ref": "SampleMultiRegionAppCluster9D88E1C2",
              },
              "","ServiceName","",
              {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppCountFargateService2EE1C613",
                  "Name",
                ],
              },
              "",{"yAxis":"right"}]],"yAxis":{}}},{"type":"metric","width":12,"height":6,"x":0,"y":18,"properties":{"view":"timeSeries","title":"transaction - ECS Health","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/ECS","CPUUtilization","ClusterName","",
              {
                "Ref": "SampleMultiRegionAppCluster9D88E1C2",
              },
              "","ServiceName","",
              {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppTransactionFargateServiceC2F48BC5",
                  "Name",
                ],
              },
              ""],["AWS/ECS","MemoryUtilization","ClusterName","",
              {
                "Ref": "SampleMultiRegionAppCluster9D88E1C2",
              },
              "","ServiceName","",
              {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppTransactionFargateServiceC2F48BC5",
                  "Name",
                ],
              },
              "",{"yAxis":"right"}]],"yAxis":{}}},{"type":"metric","width":12,"height":6,"x":12,"y":18,"properties":{"view":"timeSeries","title":"transaction-worker - ECS Health","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/ECS","CPUUtilization","ClusterName","",
              {
                "Ref": "SampleMultiRegionAppCluster9D88E1C2",
              },
              "","ServiceName","",
              {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppTransactionWorkerFargateServiceCAD6D2BF",
                  "Name",
                ],
              },
              ""],["AWS/ECS","MemoryUtilization","ClusterName","",
              {
                "Ref": "SampleMultiRegionAppCluster9D88E1C2",
              },
              "","ServiceName","",
              {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppTransactionWorkerFargateServiceCAD6D2BF",
                  "Name",
                ],
              },
              "",{"yAxis":"right"}]],"yAxis":{}}}]}",
            ],
          ],
        },
        "DashboardName": "CoreBanking-ApplicationSignals-BLEAFSI-CoreBanking-secondary",
      },
      "Type": "AWS::CloudWatch::Dashboard",
    },
    "SampleMultiRegionAppApplicationSignalsMonitoringbalanceErrorRateAlarmDB5BB4BE": {
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "MonitorAlarmTopic1E34119C",
          },
        ],
        "AlarmDescription": "High error rate detected for balance service",
        "AlarmName": "balance-HighErrorRate",
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": [
          {
            "Name": "Environment",
            "Value": "production",
          },
          {
            "Name": "Service",
            "Value": "balance",
          },
        ],
        "EvaluationPeriods": 2,
        "MetricName": "Error",
        "Namespace": "ApplicationSignals",
        "OKActions": [
          {
            "Ref": "MonitorAlarmTopic1E34119C",
          },
        ],
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 5,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "SampleMultiRegionAppApplicationSignalsMonitoringbalanceLatencyAlarmA0DBEDE7": {
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "MonitorAlarmTopic1E34119C",
          },
        ],
        "AlarmDescription": "High latency detected for balance service",
        "AlarmName": "balance-HighLatency",
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": [
          {
            "Name": "Environment",
            "Value": "production",
          },
          {
            "Name": "Service",
            "Value": "balance",
          },
        ],
        "EvaluationPeriods": 2,
        "MetricName": "Latency",
        "Namespace": "ApplicationSignals",
        "OKActions": [
          {
            "Ref": "MonitorAlarmTopic1E34119C",
          },
        ],
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 1000,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "SampleMultiRegionAppApplicationSignalsMonitoringcountErrorRateAlarm920D1EE2": {
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "MonitorAlarmTopic1E34119C",
          },
        ],
        "AlarmDescription": "High error rate detected for count service",
        "AlarmName": "count-HighErrorRate",
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": [
          {
            "Name": "Environment",
            "Value": "production",
          },
          {
            "Name": "Service",
            "Value": "count",
          },
        ],
        "EvaluationPeriods": 2,
        "MetricName": "Error",
        "Namespace": "ApplicationSignals",
        "OKActions": [
          {
            "Ref": "MonitorAlarmTopic1E34119C",
          },
        ],
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 5,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "SampleMultiRegionAppApplicationSignalsMonitoringcountLatencyAlarm9387A527": {
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "MonitorAlarmTopic1E34119C",
          },
        ],
        "AlarmDescription": "High latency detected for count service",
        "AlarmName": "count-HighLatency",
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": [
          {
            "Name": "Environment",
            "Value": "production",
          },
          {
            "Name": "Service",
            "Value": "count",
          },
        ],
        "EvaluationPeriods": 2,
        "MetricName": "Latency",
        "Namespace": "ApplicationSignals",
        "OKActions": [
          {
            "Ref": "MonitorAlarmTopic1E34119C",
          },
        ],
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 1000,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "SampleMultiRegionAppApplicationSignalsMonitoringtransactionErrorRateAlarmEF0DFCCA": {
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "MonitorAlarmTopic1E34119C",
          },
        ],
        "AlarmDescription": "High error rate detected for transaction service",
        "AlarmName": "transaction-HighErrorRate",
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": [
          {
            "Name": "Environment",
            "Value": "production",
          },
          {
            "Name": "Service",
            "Value": "transaction",
          },
        ],
        "EvaluationPeriods": 2,
        "MetricName": "Error",
        "Namespace": "ApplicationSignals",
        "OKActions": [
          {
            "Ref": "MonitorAlarmTopic1E34119C",
          },
        ],
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 5,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "SampleMultiRegionAppApplicationSignalsMonitoringtransactionLatencyAlarmE86E4747": {
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "MonitorAlarmTopic1E34119C",
          },
        ],
        "AlarmDescription": "High latency detected for transaction service",
        "AlarmName": "transaction-HighLatency",
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": [
          {
            "Name": "Environment",
            "Value": "production",
          },
          {
            "Name": "Service",
            "Value": "transaction",
          },
        ],
        "EvaluationPeriods": 2,
        "MetricName": "Latency",
        "Namespace": "ApplicationSignals",
        "OKActions": [
          {
            "Ref": "MonitorAlarmTopic1E34119C",
          },
        ],
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 1000,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "SampleMultiRegionAppApplicationSignalsMonitoringtransactionworkerErrorRateAlarm4059BA8D": {
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "MonitorAlarmTopic1E34119C",
          },
        ],
        "AlarmDescription": "High error rate detected for transaction-worker service",
        "AlarmName": "transaction-worker-HighErrorRate",
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": [
          {
            "Name": "Environment",
            "Value": "production",
          },
          {
            "Name": "Service",
            "Value": "transaction-worker",
          },
        ],
        "EvaluationPeriods": 2,
        "MetricName": "Error",
        "Namespace": "ApplicationSignals",
        "OKActions": [
          {
            "Ref": "MonitorAlarmTopic1E34119C",
          },
        ],
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 5,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "SampleMultiRegionAppApplicationSignalsMonitoringtransactionworkerLatencyAlarmEE50ACD7": {
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "MonitorAlarmTopic1E34119C",
          },
        ],
        "AlarmDescription": "High latency detected for transaction-worker service",
        "AlarmName": "transaction-worker-HighLatency",
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": [
          {
            "Name": "Environment",
            "Value": "production",
          },
          {
            "Name": "Service",
            "Value": "transaction-worker",
          },
        ],
        "EvaluationPeriods": 2,
        "MetricName": "Latency",
        "Namespace": "ApplicationSignals",
        "OKActions": [
          {
            "Ref": "MonitorAlarmTopic1E34119C",
          },
        ],
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 1000,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "SampleMultiRegionAppBalanceFargateServiceB3CE9C1E": {
      "DependsOn": [
        "SampleMultiRegionAppAlbListenerbalanceRule65E4B83C",
        "SampleMultiRegionAppBalanceTaskTaskRoleDefaultPolicyE1DC9604",
        "SampleMultiRegionAppBalanceTaskTaskRoleEBBC5F37",
      ],
      "Properties": {
        "CapacityProviderStrategy": [
          {
            "CapacityProvider": "FARGATE",
            "Weight": 1,
          },
        ],
        "Cluster": {
          "Ref": "SampleMultiRegionAppCluster9D88E1C2",
        },
        "DeploymentConfiguration": {
          "Alarms": {
            "AlarmNames": [],
            "Enable": false,
            "Rollback": false,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LoadBalancers": [
          {
            "ContainerName": "EcsApp",
            "ContainerPort": 3000,
            "TargetGroupArn": {
              "Ref": "SampleMultiRegionAppBalanceGroup2D002CE6",
            },
          },
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppBalanceFargateServiceSecurityGroup3FD93178",
                  "GroupId",
                ],
              },
            ],
            "Subnets": [
              {
                "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
              },
              {
                "Ref": "VpcProtectedSubnet2SubnetC22C3325",
              },
            ],
          },
        },
        "TaskDefinition": {
          "Ref": "SampleMultiRegionAppBalanceTaskCD24682E",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "SampleMultiRegionAppBalanceFargateServiceSecurityGroup3FD93178": {
      "DependsOn": [
        "SampleMultiRegionAppBalanceTaskTaskRoleDefaultPolicyE1DC9604",
        "SampleMultiRegionAppBalanceTaskTaskRoleEBBC5F37",
      ],
      "Properties": {
        "GroupDescription": "BLEAFSI-CoreBanking-secondary/SampleMultiRegionApp/Balance/FargateService/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SampleMultiRegionAppBalanceFargateServiceSecurityGroupfromBLEAFSICoreBankingsecondarySampleMultiRegionAppAlbSecurityGroup550DBC73300093CCBB3A": {
      "DependsOn": [
        "SampleMultiRegionAppBalanceTaskTaskRoleDefaultPolicyE1DC9604",
        "SampleMultiRegionAppBalanceTaskTaskRoleEBBC5F37",
      ],
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 3000,
        "GroupId": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppBalanceFargateServiceSecurityGroup3FD93178",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppAlbSecurityGroupE1B8B642",
            "GroupId",
          ],
        },
        "ToPort": 3000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "SampleMultiRegionAppBalanceGroup2D002CE6": {
      "Properties": {
        "HealthCheckIntervalSeconds": 15,
        "HealthCheckPath": "/health",
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "10",
          },
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "SampleMultiRegionAppBalanceMigrationTaskE0DE7B86": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-ECS2",
              "reason": "Migration task requires environment variables for database connection and configuration",
            },
          ],
        },
      },
      "Properties": {
        "ContainerDefinitions": [
          {
            "Cpu": 1024,
            "Environment": [
              {
                "Name": "MAIN_TABLE_NAME",
                "Value": "",
              },
              {
                "Name": "PARAM_TABLE_NAME",
                "Value": "",
              },
              {
                "Name": "DATABASE_HOST",
                "Value": {
                  "Fn::GetAtt": [
                    "DBAuroraPgAuroraCluster654F0C65",
                    "Endpoint.Address",
                  ],
                },
              },
              {
                "Name": "OTEL_RESOURCE_ATTRIBUTES",
                "Value": "service.name=balance,deployment.environment=production,service.version=1.0.0",
              },
              {
                "Name": "OTEL_AWS_APPLICATION_SIGNALS_ENABLED",
                "Value": "true",
              },
              {
                "Name": "OTEL_METRICS_EXPORTER",
                "Value": "none",
              },
              {
                "Name": "OTEL_LOGS_EXPORTER",
                "Value": "none",
              },
              {
                "Name": "OTEL_TRACES_EXPORTER",
                "Value": "otlp",
              },
              {
                "Name": "OTEL_EXPORTER_OTLP_PROTOCOL",
                "Value": "http/protobuf",
              },
              {
                "Name": "OTEL_EXPORTER_OTLP_ENDPOINT",
                "Value": "http://localhost:4316",
              },
              {
                "Name": "OTEL_NODE_RESOURCE_DETECTORS",
                "Value": "env,host,os,process",
              },
              {
                "Name": "OTEL_PROPAGATORS",
                "Value": "xray",
              },
              {
                "Name": "NODE_OPTIONS",
                "Value": "--require /otel-auto-instrumentation-node/autoinstrumentation.js",
              },
              {
                "Name": "OTEL_TRACES_SAMPLER",
                "Value": "xray",
              },
            ],
            "Essential": true,
            "Image": {
              "Fn::Sub": "111111111111.dkr.ecr.ap-northeast-3.\${AWS::URLSuffix}/cdk-hnb659fds-container-assets-111111111111-ap-northeast-3:8c9341323e4b93271cd86cd68cc03c964cd300ad317c10453947eff89dc76cd9",
            },
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "SampleMultiRegionAppBalanceMigrationTaskEcsAppLogGroupA6525B5B",
                },
                "awslogs-region": "ap-northeast-3",
                "awslogs-stream-prefix": "BLEA-Migration-",
              },
            },
            "Memory": 2048,
            "MemoryReservation": 2048,
            "Name": "EcsApp",
            "Secrets": [
              {
                "Name": "DATABASE_USER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:ap-northeast-3:111111111111:secret:",
                      {
                        "Fn::Join": [
                          "-",
                          [
                            {
                              "Fn::Select": [
                                0,
                                {
                                  "Fn::Split": [
                                    "-",
                                    {
                                      "Fn::Select": [
                                        6,
                                        {
                                          "Fn::Split": [
                                            ":",
                                            {
                                              "Fn::GetAtt": [
                                                "ExportsReader8B249524",
                                                "/cdk/exports/BLEAFSI-CoreBanking-secondary/BLEAFSICoreBankingprimaryapnortheast1RefBLEAFSICoreBankingprimaryDBAuroraPgAuroraClusterSecret7B31D2F13fdaad7efa858a3daf9490cf0a702aeb632D9498",
                                              ],
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  ],
                                },
                              ],
                            },
                            {
                              "Fn::Select": [
                                1,
                                {
                                  "Fn::Split": [
                                    "-",
                                    {
                                      "Fn::Select": [
                                        6,
                                        {
                                          "Fn::Split": [
                                            ":",
                                            {
                                              "Fn::GetAtt": [
                                                "ExportsReader8B249524",
                                                "/cdk/exports/BLEAFSI-CoreBanking-secondary/BLEAFSICoreBankingprimaryapnortheast1RefBLEAFSICoreBankingprimaryDBAuroraPgAuroraClusterSecret7B31D2F13fdaad7efa858a3daf9490cf0a702aeb632D9498",
                                              ],
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  ],
                                },
                              ],
                            },
                          ],
                        ],
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DATABASE_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:ap-northeast-3:111111111111:secret:",
                      {
                        "Fn::Join": [
                          "-",
                          [
                            {
                              "Fn::Select": [
                                0,
                                {
                                  "Fn::Split": [
                                    "-",
                                    {
                                      "Fn::Select": [
                                        6,
                                        {
                                          "Fn::Split": [
                                            ":",
                                            {
                                              "Fn::GetAtt": [
                                                "ExportsReader8B249524",
                                                "/cdk/exports/BLEAFSI-CoreBanking-secondary/BLEAFSICoreBankingprimaryapnortheast1RefBLEAFSICoreBankingprimaryDBAuroraPgAuroraClusterSecret7B31D2F13fdaad7efa858a3daf9490cf0a702aeb632D9498",
                                              ],
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  ],
                                },
                              ],
                            },
                            {
                              "Fn::Select": [
                                1,
                                {
                                  "Fn::Split": [
                                    "-",
                                    {
                                      "Fn::Select": [
                                        6,
                                        {
                                          "Fn::Split": [
                                            ":",
                                            {
                                              "Fn::GetAtt": [
                                                "ExportsReader8B249524",
                                                "/cdk/exports/BLEAFSI-CoreBanking-secondary/BLEAFSICoreBankingprimaryapnortheast1RefBLEAFSICoreBankingprimaryDBAuroraPgAuroraClusterSecret7B31D2F13fdaad7efa858a3daf9490cf0a702aeb632D9498",
                                              ],
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  ],
                                },
                              ],
                            },
                          ],
                        ],
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
        ],
        "Cpu": "1024",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppBalanceMigrationTaskExecutionRoleE48450E5",
            "Arn",
          ],
        },
        "Family": "BLEAFSICoreBankingsecondarySampleMultiRegionAppBalanceMigrationTaskB8C12119",
        "Memory": "2048",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppBalanceMigrationTaskTaskRole05FB2385",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "SampleMultiRegionAppBalanceMigrationTaskEcsAppLogGroupA6525B5B": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "SampleMultiRegionAppBalanceMigrationTaskExecutionRoleDefaultPolicy2A2BFC38": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Migration task execution role requires wildcard permissions for CloudWatch Logs access",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:ap-northeast-3:111111111111:repository/cdk-hnb659fds-container-assets-111111111111-ap-northeast-3",
                  ],
                ],
              },
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppBalanceMigrationTaskEcsAppLogGroupA6525B5B",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":secretsmanager:ap-northeast-3:111111111111:secret:",
                    {
                      "Fn::Join": [
                        "-",
                        [
                          {
                            "Fn::Select": [
                              0,
                              {
                                "Fn::Split": [
                                  "-",
                                  {
                                    "Fn::Select": [
                                      6,
                                      {
                                        "Fn::Split": [
                                          ":",
                                          {
                                            "Fn::GetAtt": [
                                              "ExportsReader8B249524",
                                              "/cdk/exports/BLEAFSI-CoreBanking-secondary/BLEAFSICoreBankingprimaryapnortheast1RefBLEAFSICoreBankingprimaryDBAuroraPgAuroraClusterSecret7B31D2F13fdaad7efa858a3daf9490cf0a702aeb632D9498",
                                            ],
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                          {
                            "Fn::Select": [
                              1,
                              {
                                "Fn::Split": [
                                  "-",
                                  {
                                    "Fn::Select": [
                                      6,
                                      {
                                        "Fn::Split": [
                                          ":",
                                          {
                                            "Fn::GetAtt": [
                                              "ExportsReader8B249524",
                                              "/cdk/exports/BLEAFSI-CoreBanking-secondary/BLEAFSICoreBankingprimaryapnortheast1RefBLEAFSICoreBankingprimaryDBAuroraPgAuroraClusterSecret7B31D2F13fdaad7efa858a3daf9490cf0a702aeb632D9498",
                                            ],
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      ],
                    },
                    "-??????",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SampleMultiRegionAppBalanceMigrationTaskExecutionRoleDefaultPolicy2A2BFC38",
        "Roles": [
          {
            "Ref": "SampleMultiRegionAppBalanceMigrationTaskExecutionRoleE48450E5",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SampleMultiRegionAppBalanceMigrationTaskExecutionRoleE48450E5": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "SampleMultiRegionAppBalanceMigrationTaskTaskRole05FB2385": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "SampleMultiRegionAppBalanceTaskCD24682E": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-ECS2",
              "reason": "CloudWatch Application Signals requires environment variables for proper configuration",
            },
            {
              "id": "AwsSolutions-ECS2",
              "reason": "CloudWatch Agent requires environment variables for Application Signals configuration",
            },
          ],
        },
      },
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "cp",
              "-a",
              "/autoinstrumentation/.",
              "/otel-auto-instrumentation-node/",
            ],
            "Cpu": 64,
            "Essential": false,
            "Image": "public.ecr.aws/aws-observability/adot-autoinstrumentation-node:v0.7.0",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "SampleMultiRegionAppBalanceTaskinitLogGroupCC00F0E9",
                },
                "awslogs-region": "ap-northeast-3",
                "awslogs-stream-prefix": "BLEA-Init-",
              },
            },
            "Memory": 128,
            "MemoryReservation": 64,
            "MountPoints": [
              {
                "ContainerPath": "/otel-auto-instrumentation-node",
                "ReadOnly": false,
                "SourceVolume": "opentelemetry-auto-instrumentation-node",
              },
            ],
            "Name": "init",
          },
          {
            "Cpu": 0,
            "Environment": [
              {
                "Name": "ECS_ENABLE_CONTAINER_METADATA",
                "Value": "true",
              },
              {
                "Name": "OTEL_AWS_APPLICATION_SIGNALS_ENABLED",
                "Value": "true",
              },
              {
                "Name": "OTEL_METRICS_EXPORTER",
                "Value": "none",
              },
              {
                "Name": "OTEL_EXPORTER_OTLP_ENDPOINT",
                "Value": "http://localhost:4316",
              },
              {
                "Name": "OTEL_RESOURCE_ATTRIBUTES",
                "Value": "service.name=BLEAFSI-CoreBanking-secondary",
              },
            ],
            "Essential": true,
            "Image": "public.ecr.aws/cloudwatch-agent/cloudwatch-agent:1.300059.0b1207",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "SampleMultiRegionAppBalanceTaskecscwagentLogGroupC3EC8502",
                },
                "awslogs-region": "ap-northeast-3",
                "awslogs-stream-prefix": "BLEA-CloudWatchAgent-",
              },
            },
            "Name": "ecs-cwagent",
            "Secrets": [
              {
                "Name": "CW_CONFIG_CONTENT",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":ssm:ap-northeast-3:111111111111:parameter/ecs/cloudwatch-agent/application-signals-config",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Cpu": 768,
            "DependsOn": [
              {
                "Condition": "SUCCESS",
                "ContainerName": "init",
              },
              {
                "Condition": "START",
                "ContainerName": "ecs-cwagent",
              },
            ],
            "Environment": [
              {
                "Name": "MAIN_TABLE_NAME",
                "Value": "",
              },
              {
                "Name": "PARAM_TABLE_NAME",
                "Value": "",
              },
              {
                "Name": "DATABASE_HOST",
                "Value": {
                  "Fn::GetAtt": [
                    "DBAuroraPgAuroraCluster654F0C65",
                    "Endpoint.Address",
                  ],
                },
              },
              {
                "Name": "OTEL_RESOURCE_ATTRIBUTES",
                "Value": "service.name=balance,deployment.environment=production,service.version=1.0.0",
              },
              {
                "Name": "OTEL_AWS_APPLICATION_SIGNALS_ENABLED",
                "Value": "true",
              },
              {
                "Name": "OTEL_METRICS_EXPORTER",
                "Value": "none",
              },
              {
                "Name": "OTEL_LOGS_EXPORTER",
                "Value": "none",
              },
              {
                "Name": "OTEL_TRACES_EXPORTER",
                "Value": "otlp",
              },
              {
                "Name": "OTEL_EXPORTER_OTLP_PROTOCOL",
                "Value": "http/protobuf",
              },
              {
                "Name": "OTEL_EXPORTER_OTLP_ENDPOINT",
                "Value": "http://localhost:4316",
              },
              {
                "Name": "OTEL_NODE_RESOURCE_DETECTORS",
                "Value": "env,host,os,process",
              },
              {
                "Name": "OTEL_PROPAGATORS",
                "Value": "xray",
              },
              {
                "Name": "NODE_OPTIONS",
                "Value": "--require /otel-auto-instrumentation-node/autoinstrumentation.js",
              },
              {
                "Name": "OTEL_TRACES_SAMPLER",
                "Value": "xray",
              },
            ],
            "Essential": true,
            "Image": {
              "Fn::Sub": "111111111111.dkr.ecr.ap-northeast-3.\${AWS::URLSuffix}/cdk-hnb659fds-container-assets-111111111111-ap-northeast-3:8c9341323e4b93271cd86cd68cc03c964cd300ad317c10453947eff89dc76cd9",
            },
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "SampleMultiRegionAppBalanceTaskEcsAppLogGroup528CF884",
                },
                "awslogs-region": "ap-northeast-3",
                "awslogs-stream-prefix": "BLEA-ECSApp-",
              },
            },
            "Memory": 1792,
            "MemoryReservation": 1792,
            "MountPoints": [
              {
                "ContainerPath": "/otel-auto-instrumentation-node",
                "ReadOnly": false,
                "SourceVolume": "opentelemetry-auto-instrumentation-node",
              },
            ],
            "Name": "EcsApp",
            "PortMappings": [
              {
                "ContainerPort": 3000,
                "Protocol": "tcp",
              },
            ],
            "Secrets": [
              {
                "Name": "DATABASE_USER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:ap-northeast-3:111111111111:secret:",
                      {
                        "Fn::Join": [
                          "-",
                          [
                            {
                              "Fn::Select": [
                                0,
                                {
                                  "Fn::Split": [
                                    "-",
                                    {
                                      "Fn::Select": [
                                        6,
                                        {
                                          "Fn::Split": [
                                            ":",
                                            {
                                              "Fn::GetAtt": [
                                                "ExportsReader8B249524",
                                                "/cdk/exports/BLEAFSI-CoreBanking-secondary/BLEAFSICoreBankingprimaryapnortheast1RefBLEAFSICoreBankingprimaryDBAuroraPgAuroraClusterSecret7B31D2F13fdaad7efa858a3daf9490cf0a702aeb632D9498",
                                              ],
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  ],
                                },
                              ],
                            },
                            {
                              "Fn::Select": [
                                1,
                                {
                                  "Fn::Split": [
                                    "-",
                                    {
                                      "Fn::Select": [
                                        6,
                                        {
                                          "Fn::Split": [
                                            ":",
                                            {
                                              "Fn::GetAtt": [
                                                "ExportsReader8B249524",
                                                "/cdk/exports/BLEAFSI-CoreBanking-secondary/BLEAFSICoreBankingprimaryapnortheast1RefBLEAFSICoreBankingprimaryDBAuroraPgAuroraClusterSecret7B31D2F13fdaad7efa858a3daf9490cf0a702aeb632D9498",
                                              ],
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  ],
                                },
                              ],
                            },
                          ],
                        ],
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DATABASE_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:ap-northeast-3:111111111111:secret:",
                      {
                        "Fn::Join": [
                          "-",
                          [
                            {
                              "Fn::Select": [
                                0,
                                {
                                  "Fn::Split": [
                                    "-",
                                    {
                                      "Fn::Select": [
                                        6,
                                        {
                                          "Fn::Split": [
                                            ":",
                                            {
                                              "Fn::GetAtt": [
                                                "ExportsReader8B249524",
                                                "/cdk/exports/BLEAFSI-CoreBanking-secondary/BLEAFSICoreBankingprimaryapnortheast1RefBLEAFSICoreBankingprimaryDBAuroraPgAuroraClusterSecret7B31D2F13fdaad7efa858a3daf9490cf0a702aeb632D9498",
                                              ],
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  ],
                                },
                              ],
                            },
                            {
                              "Fn::Select": [
                                1,
                                {
                                  "Fn::Split": [
                                    "-",
                                    {
                                      "Fn::Select": [
                                        6,
                                        {
                                          "Fn::Split": [
                                            ":",
                                            {
                                              "Fn::GetAtt": [
                                                "ExportsReader8B249524",
                                                "/cdk/exports/BLEAFSI-CoreBanking-secondary/BLEAFSICoreBankingprimaryapnortheast1RefBLEAFSICoreBankingprimaryDBAuroraPgAuroraClusterSecret7B31D2F13fdaad7efa858a3daf9490cf0a702aeb632D9498",
                                              ],
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  ],
                                },
                              ],
                            },
                          ],
                        ],
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
        ],
        "Cpu": "1024",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppBalanceTaskExecutionRole36D89483",
            "Arn",
          ],
        },
        "Family": "BLEAFSICoreBankingsecondarySampleMultiRegionAppBalanceTask573F6721",
        "Memory": "2048",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppBalanceTaskTaskRoleEBBC5F37",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Name": "opentelemetry-auto-instrumentation-node",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "SampleMultiRegionAppBalanceTaskEcsAppLogGroup528CF884": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "SampleMultiRegionAppBalanceTaskExecutionRole36D89483": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Policy::arn:<AWS::Partition>:iam::aws:policy/CloudWatchAgentServerPolicy",
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "CloudWatch Agent requires AWS managed policy CloudWatchAgentServerPolicy for proper operation",
            },
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "ECR Public access requires wildcard permissions for authentication tokens",
            },
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Application Signals requires wildcard permissions for metrics and configuration access",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/CloudWatchAgentServerPolicy",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SampleMultiRegionAppBalanceTaskExecutionRoleDefaultPolicyFD62584B": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CloudWatch Application Signals execution role requires wildcard permissions for ECR and CloudWatch access",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr-public:GetAuthorizationToken",
                "sts:GetServiceBearerToken",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:ap-northeast-3:111111111111:parameter/ecs/cloudwatch-agent/application-signals-config",
                  ],
                ],
              },
            },
            {
              "Action": [
                "application-signals:*",
                "cloudwatch:PutMetricData",
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppBalanceTaskinitLogGroupCC00F0E9",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppBalanceTaskecscwagentLogGroupC3EC8502",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:ap-northeast-3:111111111111:parameter/ecs/cloudwatch-agent/application-signals-config",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:ap-northeast-3:111111111111:repository/cdk-hnb659fds-container-assets-111111111111-ap-northeast-3",
                  ],
                ],
              },
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppBalanceTaskEcsAppLogGroup528CF884",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":secretsmanager:ap-northeast-3:111111111111:secret:",
                    {
                      "Fn::Join": [
                        "-",
                        [
                          {
                            "Fn::Select": [
                              0,
                              {
                                "Fn::Split": [
                                  "-",
                                  {
                                    "Fn::Select": [
                                      6,
                                      {
                                        "Fn::Split": [
                                          ":",
                                          {
                                            "Fn::GetAtt": [
                                              "ExportsReader8B249524",
                                              "/cdk/exports/BLEAFSI-CoreBanking-secondary/BLEAFSICoreBankingprimaryapnortheast1RefBLEAFSICoreBankingprimaryDBAuroraPgAuroraClusterSecret7B31D2F13fdaad7efa858a3daf9490cf0a702aeb632D9498",
                                            ],
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                          {
                            "Fn::Select": [
                              1,
                              {
                                "Fn::Split": [
                                  "-",
                                  {
                                    "Fn::Select": [
                                      6,
                                      {
                                        "Fn::Split": [
                                          ":",
                                          {
                                            "Fn::GetAtt": [
                                              "ExportsReader8B249524",
                                              "/cdk/exports/BLEAFSI-CoreBanking-secondary/BLEAFSICoreBankingprimaryapnortheast1RefBLEAFSICoreBankingprimaryDBAuroraPgAuroraClusterSecret7B31D2F13fdaad7efa858a3daf9490cf0a702aeb632D9498",
                                            ],
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      ],
                    },
                    "-??????",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SampleMultiRegionAppBalanceTaskExecutionRoleDefaultPolicyFD62584B",
        "Roles": [
          {
            "Ref": "SampleMultiRegionAppBalanceTaskExecutionRole36D89483",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SampleMultiRegionAppBalanceTaskTaskRoleDefaultPolicyE1DC9604": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutLogEvents",
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:DescribeLogStreams",
                "logs:DescribeLogGroups",
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets",
                "xray:GetSamplingStatisticSummaries",
                "ssm:GetParameters",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:DescribeLogGroups",
                "logs:DescribeLogStreams",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:logs:ap-northeast-3:111111111111:log-group:/aws/application-signals/data:*",
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:ap-northeast-3:111111111111:parameter/ecs/cloudwatch-agent/application-signals-config",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SampleMultiRegionAppBalanceTaskTaskRoleDefaultPolicyE1DC9604",
        "Roles": [
          {
            "Ref": "SampleMultiRegionAppBalanceTaskTaskRoleEBBC5F37",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SampleMultiRegionAppBalanceTaskTaskRoleEBBC5F37": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Application Signals requires wildcard permissions for CloudWatch logs, X-Ray traces, and SSM parameters across multiple resources",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "SampleMultiRegionAppBalanceTaskecscwagentLogGroupC3EC8502": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "SampleMultiRegionAppBalanceTaskinitLogGroupCC00F0E9": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "SampleMultiRegionAppCanaryArtifactsBucketD01DC908": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "SampleMultiRegionAppCanaryArtifactsBucketPolicy5DEF9D6A": {
      "Properties": {
        "Bucket": {
          "Ref": "SampleMultiRegionAppCanaryArtifactsBucketD01DC908",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SampleMultiRegionAppCanaryArtifactsBucketD01DC908",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "SampleMultiRegionAppCanaryArtifactsBucketD01DC908",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "SampleMultiRegionAppCanaryD0102896": {
      "Properties": {
        "ArtifactS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "SampleMultiRegionAppCanaryArtifactsBucketD01DC908",
              },
            ],
          ],
        },
        "Code": {
          "Handler": "index.handler",
          "S3Bucket": "cdk-hnb659fds-assets-111111111111-ap-northeast-3",
          "S3Key": "788a63e18e6631079273ca4cc3f10184ed0aace8ff705d116fb6eba96d48971b.zip",
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppCanaryServiceRoleECF5668F",
            "Arn",
          ],
        },
        "Name": "bleafsicorebank1fd992",
        "RunConfig": {
          "EnvironmentVariables": {
            "BASE_URL": "http://api.example.com",
          },
        },
        "RuntimeVersion": "syn-nodejs-puppeteer-7.0",
        "Schedule": {
          "DurationInSeconds": "0",
          "Expression": "rate(1 minute)",
        },
        "StartCanaryAfterCreation": true,
        "VPCConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "SampleMultiRegionAppCanarySecurityGroupD6177105",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": [
            {
              "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
            },
            {
              "Ref": "VpcProtectedSubnet2SubnetC22C3325",
            },
            {
              "Ref": "VpcForTgwAttachmentsSubnet1Subnet95D19052",
            },
            {
              "Ref": "VpcForTgwAttachmentsSubnet2SubnetAEDBB0E8",
            },
          ],
          "VpcId": {
            "Ref": "Vpc8378EB38",
          },
        },
      },
      "Type": "AWS::Synthetics::Canary",
    },
    "SampleMultiRegionAppCanarySecurityGroupD6177105": {
      "Properties": {
        "GroupDescription": "Automatic security group for Canary BLEAFSICoreBankingsecondarySampleMultiRegionAppCanary1D14AD94",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SampleMultiRegionAppCanaryServiceRoleECF5668F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "SampleMultiRegionAppCanaryArtifactsBucketD01DC908",
                      "Arn",
                    ],
                  },
                },
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "SampleMultiRegionAppCanaryArtifactsBucketD01DC908",
                            "Arn",
                          ],
                        },
                        "/*",
                      ],
                    ],
                  },
                },
                {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": {
                    "StringEquals": {
                      "cloudwatch:namespace": "CloudWatchSynthetics",
                    },
                  },
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:ap-northeast-3:111111111111:log-group:/aws/lambda/cwsyn-*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "canaryPolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SampleMultiRegionAppCluster9D88E1C2": {
      "Properties": {
        "ClusterSettings": [
          {
            "Name": "containerInsights",
            "Value": "enabled",
          },
        ],
      },
      "Type": "AWS::ECS::Cluster",
    },
    "SampleMultiRegionAppCountFargateService2EE1C613": {
      "DependsOn": [
        "SampleMultiRegionAppAlbListenercountRuleE41D7BB5",
        "SampleMultiRegionAppCountTaskTaskRoleDefaultPolicy49641718",
        "SampleMultiRegionAppCountTaskTaskRole45DC9375",
      ],
      "Properties": {
        "CapacityProviderStrategy": [
          {
            "CapacityProvider": "FARGATE",
            "Weight": 1,
          },
        ],
        "Cluster": {
          "Ref": "SampleMultiRegionAppCluster9D88E1C2",
        },
        "DeploymentConfiguration": {
          "Alarms": {
            "AlarmNames": [],
            "Enable": false,
            "Rollback": false,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LoadBalancers": [
          {
            "ContainerName": "EcsApp",
            "ContainerPort": 3000,
            "TargetGroupArn": {
              "Ref": "SampleMultiRegionAppCountGroupF35DCD9E",
            },
          },
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppCountFargateServiceSecurityGroup12EC9FEF",
                  "GroupId",
                ],
              },
            ],
            "Subnets": [
              {
                "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
              },
              {
                "Ref": "VpcProtectedSubnet2SubnetC22C3325",
              },
            ],
          },
        },
        "TaskDefinition": {
          "Ref": "SampleMultiRegionAppCountTask9E5764AB",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "SampleMultiRegionAppCountFargateServiceSecurityGroup12EC9FEF": {
      "DependsOn": [
        "SampleMultiRegionAppCountTaskTaskRoleDefaultPolicy49641718",
        "SampleMultiRegionAppCountTaskTaskRole45DC9375",
      ],
      "Properties": {
        "GroupDescription": "BLEAFSI-CoreBanking-secondary/SampleMultiRegionApp/Count/FargateService/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SampleMultiRegionAppCountFargateServiceSecurityGroupfromBLEAFSICoreBankingsecondarySampleMultiRegionAppAlbSecurityGroup550DBC733000E3B3303A": {
      "DependsOn": [
        "SampleMultiRegionAppCountTaskTaskRoleDefaultPolicy49641718",
        "SampleMultiRegionAppCountTaskTaskRole45DC9375",
      ],
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 3000,
        "GroupId": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppCountFargateServiceSecurityGroup12EC9FEF",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppAlbSecurityGroupE1B8B642",
            "GroupId",
          ],
        },
        "ToPort": 3000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "SampleMultiRegionAppCountGroupF35DCD9E": {
      "Properties": {
        "HealthCheckIntervalSeconds": 15,
        "HealthCheckPath": "/health",
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "10",
          },
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "SampleMultiRegionAppCountMigrationTask5AEF8925": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-ECS2",
              "reason": "Migration task requires environment variables for database connection and configuration",
            },
          ],
        },
      },
      "Properties": {
        "ContainerDefinitions": [
          {
            "Cpu": 1024,
            "Environment": [
              {
                "Name": "MAIN_TABLE_NAME",
                "Value": "",
              },
              {
                "Name": "PARAM_TABLE_NAME",
                "Value": "",
              },
              {
                "Name": "DATABASE_HOST",
                "Value": {
                  "Fn::GetAtt": [
                    "DBAuroraPgAuroraCluster654F0C65",
                    "Endpoint.Address",
                  ],
                },
              },
              {
                "Name": "OTEL_RESOURCE_ATTRIBUTES",
                "Value": "service.name=count,deployment.environment=production,service.version=1.0.0",
              },
              {
                "Name": "OTEL_AWS_APPLICATION_SIGNALS_ENABLED",
                "Value": "true",
              },
              {
                "Name": "OTEL_METRICS_EXPORTER",
                "Value": "none",
              },
              {
                "Name": "OTEL_LOGS_EXPORTER",
                "Value": "none",
              },
              {
                "Name": "OTEL_TRACES_EXPORTER",
                "Value": "otlp",
              },
              {
                "Name": "OTEL_EXPORTER_OTLP_PROTOCOL",
                "Value": "http/protobuf",
              },
              {
                "Name": "OTEL_EXPORTER_OTLP_ENDPOINT",
                "Value": "http://localhost:4316",
              },
              {
                "Name": "OTEL_NODE_RESOURCE_DETECTORS",
                "Value": "env,host,os,process",
              },
              {
                "Name": "OTEL_PROPAGATORS",
                "Value": "xray",
              },
              {
                "Name": "NODE_OPTIONS",
                "Value": "--require /otel-auto-instrumentation-node/autoinstrumentation.js",
              },
              {
                "Name": "OTEL_TRACES_SAMPLER",
                "Value": "xray",
              },
            ],
            "Essential": true,
            "Image": {
              "Fn::Sub": "111111111111.dkr.ecr.ap-northeast-3.\${AWS::URLSuffix}/cdk-hnb659fds-container-assets-111111111111-ap-northeast-3:cf424555b90be351a7e0578b0dff6a7954df6e242cea9762506bedbd231fa759",
            },
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "SampleMultiRegionAppCountMigrationTaskEcsAppLogGroupD113B88D",
                },
                "awslogs-region": "ap-northeast-3",
                "awslogs-stream-prefix": "BLEA-Migration-",
              },
            },
            "Memory": 2048,
            "MemoryReservation": 2048,
            "Name": "EcsApp",
            "Secrets": [
              {
                "Name": "DATABASE_USER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:ap-northeast-3:111111111111:secret:",
                      {
                        "Fn::Join": [
                          "-",
                          [
                            {
                              "Fn::Select": [
                                0,
                                {
                                  "Fn::Split": [
                                    "-",
                                    {
                                      "Fn::Select": [
                                        6,
                                        {
                                          "Fn::Split": [
                                            ":",
                                            {
                                              "Fn::GetAtt": [
                                                "ExportsReader8B249524",
                                                "/cdk/exports/BLEAFSI-CoreBanking-secondary/BLEAFSICoreBankingprimaryapnortheast1RefBLEAFSICoreBankingprimaryDBAuroraPgAuroraClusterSecret7B31D2F13fdaad7efa858a3daf9490cf0a702aeb632D9498",
                                              ],
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  ],
                                },
                              ],
                            },
                            {
                              "Fn::Select": [
                                1,
                                {
                                  "Fn::Split": [
                                    "-",
                                    {
                                      "Fn::Select": [
                                        6,
                                        {
                                          "Fn::Split": [
                                            ":",
                                            {
                                              "Fn::GetAtt": [
                                                "ExportsReader8B249524",
                                                "/cdk/exports/BLEAFSI-CoreBanking-secondary/BLEAFSICoreBankingprimaryapnortheast1RefBLEAFSICoreBankingprimaryDBAuroraPgAuroraClusterSecret7B31D2F13fdaad7efa858a3daf9490cf0a702aeb632D9498",
                                              ],
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  ],
                                },
                              ],
                            },
                          ],
                        ],
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DATABASE_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:ap-northeast-3:111111111111:secret:",
                      {
                        "Fn::Join": [
                          "-",
                          [
                            {
                              "Fn::Select": [
                                0,
                                {
                                  "Fn::Split": [
                                    "-",
                                    {
                                      "Fn::Select": [
                                        6,
                                        {
                                          "Fn::Split": [
                                            ":",
                                            {
                                              "Fn::GetAtt": [
                                                "ExportsReader8B249524",
                                                "/cdk/exports/BLEAFSI-CoreBanking-secondary/BLEAFSICoreBankingprimaryapnortheast1RefBLEAFSICoreBankingprimaryDBAuroraPgAuroraClusterSecret7B31D2F13fdaad7efa858a3daf9490cf0a702aeb632D9498",
                                              ],
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  ],
                                },
                              ],
                            },
                            {
                              "Fn::Select": [
                                1,
                                {
                                  "Fn::Split": [
                                    "-",
                                    {
                                      "Fn::Select": [
                                        6,
                                        {
                                          "Fn::Split": [
                                            ":",
                                            {
                                              "Fn::GetAtt": [
                                                "ExportsReader8B249524",
                                                "/cdk/exports/BLEAFSI-CoreBanking-secondary/BLEAFSICoreBankingprimaryapnortheast1RefBLEAFSICoreBankingprimaryDBAuroraPgAuroraClusterSecret7B31D2F13fdaad7efa858a3daf9490cf0a702aeb632D9498",
                                              ],
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  ],
                                },
                              ],
                            },
                          ],
                        ],
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
        ],
        "Cpu": "1024",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppCountMigrationTaskExecutionRoleB359099F",
            "Arn",
          ],
        },
        "Family": "BLEAFSICoreBankingsecondarySampleMultiRegionAppCountMigrationTask13B11B86",
        "Memory": "2048",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppCountMigrationTaskTaskRole588A52BB",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "SampleMultiRegionAppCountMigrationTaskEcsAppLogGroupD113B88D": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "SampleMultiRegionAppCountMigrationTaskExecutionRoleB359099F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "SampleMultiRegionAppCountMigrationTaskExecutionRoleDefaultPolicy96368832": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Migration task execution role requires wildcard permissions for CloudWatch Logs access",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:ap-northeast-3:111111111111:repository/cdk-hnb659fds-container-assets-111111111111-ap-northeast-3",
                  ],
                ],
              },
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppCountMigrationTaskEcsAppLogGroupD113B88D",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":secretsmanager:ap-northeast-3:111111111111:secret:",
                    {
                      "Fn::Join": [
                        "-",
                        [
                          {
                            "Fn::Select": [
                              0,
                              {
                                "Fn::Split": [
                                  "-",
                                  {
                                    "Fn::Select": [
                                      6,
                                      {
                                        "Fn::Split": [
                                          ":",
                                          {
                                            "Fn::GetAtt": [
                                              "ExportsReader8B249524",
                                              "/cdk/exports/BLEAFSI-CoreBanking-secondary/BLEAFSICoreBankingprimaryapnortheast1RefBLEAFSICoreBankingprimaryDBAuroraPgAuroraClusterSecret7B31D2F13fdaad7efa858a3daf9490cf0a702aeb632D9498",
                                            ],
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                          {
                            "Fn::Select": [
                              1,
                              {
                                "Fn::Split": [
                                  "-",
                                  {
                                    "Fn::Select": [
                                      6,
                                      {
                                        "Fn::Split": [
                                          ":",
                                          {
                                            "Fn::GetAtt": [
                                              "ExportsReader8B249524",
                                              "/cdk/exports/BLEAFSI-CoreBanking-secondary/BLEAFSICoreBankingprimaryapnortheast1RefBLEAFSICoreBankingprimaryDBAuroraPgAuroraClusterSecret7B31D2F13fdaad7efa858a3daf9490cf0a702aeb632D9498",
                                            ],
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      ],
                    },
                    "-??????",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SampleMultiRegionAppCountMigrationTaskExecutionRoleDefaultPolicy96368832",
        "Roles": [
          {
            "Ref": "SampleMultiRegionAppCountMigrationTaskExecutionRoleB359099F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SampleMultiRegionAppCountMigrationTaskTaskRole588A52BB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "SampleMultiRegionAppCountTask9E5764AB": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-ECS2",
              "reason": "CloudWatch Application Signals requires environment variables for proper configuration",
            },
            {
              "id": "AwsSolutions-ECS2",
              "reason": "CloudWatch Agent requires environment variables for Application Signals configuration",
            },
          ],
        },
      },
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "cp",
              "-a",
              "/autoinstrumentation/.",
              "/otel-auto-instrumentation-node/",
            ],
            "Cpu": 64,
            "Essential": false,
            "Image": "public.ecr.aws/aws-observability/adot-autoinstrumentation-node:v0.7.0",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "SampleMultiRegionAppCountTaskinitLogGroupB759B4B5",
                },
                "awslogs-region": "ap-northeast-3",
                "awslogs-stream-prefix": "BLEA-Init-",
              },
            },
            "Memory": 128,
            "MemoryReservation": 64,
            "MountPoints": [
              {
                "ContainerPath": "/otel-auto-instrumentation-node",
                "ReadOnly": false,
                "SourceVolume": "opentelemetry-auto-instrumentation-node",
              },
            ],
            "Name": "init",
          },
          {
            "Cpu": 0,
            "Environment": [
              {
                "Name": "ECS_ENABLE_CONTAINER_METADATA",
                "Value": "true",
              },
              {
                "Name": "OTEL_AWS_APPLICATION_SIGNALS_ENABLED",
                "Value": "true",
              },
              {
                "Name": "OTEL_METRICS_EXPORTER",
                "Value": "none",
              },
              {
                "Name": "OTEL_EXPORTER_OTLP_ENDPOINT",
                "Value": "http://localhost:4316",
              },
              {
                "Name": "OTEL_RESOURCE_ATTRIBUTES",
                "Value": "service.name=BLEAFSI-CoreBanking-secondary",
              },
            ],
            "Essential": true,
            "Image": "public.ecr.aws/cloudwatch-agent/cloudwatch-agent:1.300059.0b1207",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "SampleMultiRegionAppCountTaskecscwagentLogGroup90463DDD",
                },
                "awslogs-region": "ap-northeast-3",
                "awslogs-stream-prefix": "BLEA-CloudWatchAgent-",
              },
            },
            "Name": "ecs-cwagent",
            "Secrets": [
              {
                "Name": "CW_CONFIG_CONTENT",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":ssm:ap-northeast-3:111111111111:parameter/ecs/cloudwatch-agent/application-signals-config",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Cpu": 768,
            "DependsOn": [
              {
                "Condition": "SUCCESS",
                "ContainerName": "init",
              },
              {
                "Condition": "START",
                "ContainerName": "ecs-cwagent",
              },
            ],
            "Environment": [
              {
                "Name": "MAIN_TABLE_NAME",
                "Value": "",
              },
              {
                "Name": "PARAM_TABLE_NAME",
                "Value": "",
              },
              {
                "Name": "DATABASE_HOST",
                "Value": {
                  "Fn::GetAtt": [
                    "DBAuroraPgAuroraCluster654F0C65",
                    "Endpoint.Address",
                  ],
                },
              },
              {
                "Name": "OTEL_RESOURCE_ATTRIBUTES",
                "Value": "service.name=count,deployment.environment=production,service.version=1.0.0",
              },
              {
                "Name": "OTEL_AWS_APPLICATION_SIGNALS_ENABLED",
                "Value": "true",
              },
              {
                "Name": "OTEL_METRICS_EXPORTER",
                "Value": "none",
              },
              {
                "Name": "OTEL_LOGS_EXPORTER",
                "Value": "none",
              },
              {
                "Name": "OTEL_TRACES_EXPORTER",
                "Value": "otlp",
              },
              {
                "Name": "OTEL_EXPORTER_OTLP_PROTOCOL",
                "Value": "http/protobuf",
              },
              {
                "Name": "OTEL_EXPORTER_OTLP_ENDPOINT",
                "Value": "http://localhost:4316",
              },
              {
                "Name": "OTEL_NODE_RESOURCE_DETECTORS",
                "Value": "env,host,os,process",
              },
              {
                "Name": "OTEL_PROPAGATORS",
                "Value": "xray",
              },
              {
                "Name": "NODE_OPTIONS",
                "Value": "--require /otel-auto-instrumentation-node/autoinstrumentation.js",
              },
              {
                "Name": "OTEL_TRACES_SAMPLER",
                "Value": "xray",
              },
            ],
            "Essential": true,
            "Image": {
              "Fn::Sub": "111111111111.dkr.ecr.ap-northeast-3.\${AWS::URLSuffix}/cdk-hnb659fds-container-assets-111111111111-ap-northeast-3:cf424555b90be351a7e0578b0dff6a7954df6e242cea9762506bedbd231fa759",
            },
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "SampleMultiRegionAppCountTaskEcsAppLogGroupF40366CD",
                },
                "awslogs-region": "ap-northeast-3",
                "awslogs-stream-prefix": "BLEA-ECSApp-",
              },
            },
            "Memory": 1792,
            "MemoryReservation": 1792,
            "MountPoints": [
              {
                "ContainerPath": "/otel-auto-instrumentation-node",
                "ReadOnly": false,
                "SourceVolume": "opentelemetry-auto-instrumentation-node",
              },
            ],
            "Name": "EcsApp",
            "PortMappings": [
              {
                "ContainerPort": 3000,
                "Protocol": "tcp",
              },
            ],
            "Secrets": [
              {
                "Name": "DATABASE_USER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:ap-northeast-3:111111111111:secret:",
                      {
                        "Fn::Join": [
                          "-",
                          [
                            {
                              "Fn::Select": [
                                0,
                                {
                                  "Fn::Split": [
                                    "-",
                                    {
                                      "Fn::Select": [
                                        6,
                                        {
                                          "Fn::Split": [
                                            ":",
                                            {
                                              "Fn::GetAtt": [
                                                "ExportsReader8B249524",
                                                "/cdk/exports/BLEAFSI-CoreBanking-secondary/BLEAFSICoreBankingprimaryapnortheast1RefBLEAFSICoreBankingprimaryDBAuroraPgAuroraClusterSecret7B31D2F13fdaad7efa858a3daf9490cf0a702aeb632D9498",
                                              ],
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  ],
                                },
                              ],
                            },
                            {
                              "Fn::Select": [
                                1,
                                {
                                  "Fn::Split": [
                                    "-",
                                    {
                                      "Fn::Select": [
                                        6,
                                        {
                                          "Fn::Split": [
                                            ":",
                                            {
                                              "Fn::GetAtt": [
                                                "ExportsReader8B249524",
                                                "/cdk/exports/BLEAFSI-CoreBanking-secondary/BLEAFSICoreBankingprimaryapnortheast1RefBLEAFSICoreBankingprimaryDBAuroraPgAuroraClusterSecret7B31D2F13fdaad7efa858a3daf9490cf0a702aeb632D9498",
                                              ],
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  ],
                                },
                              ],
                            },
                          ],
                        ],
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DATABASE_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:ap-northeast-3:111111111111:secret:",
                      {
                        "Fn::Join": [
                          "-",
                          [
                            {
                              "Fn::Select": [
                                0,
                                {
                                  "Fn::Split": [
                                    "-",
                                    {
                                      "Fn::Select": [
                                        6,
                                        {
                                          "Fn::Split": [
                                            ":",
                                            {
                                              "Fn::GetAtt": [
                                                "ExportsReader8B249524",
                                                "/cdk/exports/BLEAFSI-CoreBanking-secondary/BLEAFSICoreBankingprimaryapnortheast1RefBLEAFSICoreBankingprimaryDBAuroraPgAuroraClusterSecret7B31D2F13fdaad7efa858a3daf9490cf0a702aeb632D9498",
                                              ],
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  ],
                                },
                              ],
                            },
                            {
                              "Fn::Select": [
                                1,
                                {
                                  "Fn::Split": [
                                    "-",
                                    {
                                      "Fn::Select": [
                                        6,
                                        {
                                          "Fn::Split": [
                                            ":",
                                            {
                                              "Fn::GetAtt": [
                                                "ExportsReader8B249524",
                                                "/cdk/exports/BLEAFSI-CoreBanking-secondary/BLEAFSICoreBankingprimaryapnortheast1RefBLEAFSICoreBankingprimaryDBAuroraPgAuroraClusterSecret7B31D2F13fdaad7efa858a3daf9490cf0a702aeb632D9498",
                                              ],
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  ],
                                },
                              ],
                            },
                          ],
                        ],
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
        ],
        "Cpu": "1024",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppCountTaskExecutionRoleA2265BAB",
            "Arn",
          ],
        },
        "Family": "BLEAFSICoreBankingsecondarySampleMultiRegionAppCountTask34303954",
        "Memory": "2048",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppCountTaskTaskRole45DC9375",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Name": "opentelemetry-auto-instrumentation-node",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "SampleMultiRegionAppCountTaskEcsAppLogGroupF40366CD": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "SampleMultiRegionAppCountTaskExecutionRoleA2265BAB": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Policy::arn:<AWS::Partition>:iam::aws:policy/CloudWatchAgentServerPolicy",
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "CloudWatch Agent requires AWS managed policy CloudWatchAgentServerPolicy for proper operation",
            },
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "ECR Public access requires wildcard permissions for authentication tokens",
            },
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Application Signals requires wildcard permissions for metrics and configuration access",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/CloudWatchAgentServerPolicy",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SampleMultiRegionAppCountTaskExecutionRoleDefaultPolicyFF11097E": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CloudWatch Application Signals execution role requires wildcard permissions for ECR and CloudWatch access",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr-public:GetAuthorizationToken",
                "sts:GetServiceBearerToken",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:ap-northeast-3:111111111111:parameter/ecs/cloudwatch-agent/application-signals-config",
                  ],
                ],
              },
            },
            {
              "Action": [
                "application-signals:*",
                "cloudwatch:PutMetricData",
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppCountTaskinitLogGroupB759B4B5",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppCountTaskecscwagentLogGroup90463DDD",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:ap-northeast-3:111111111111:parameter/ecs/cloudwatch-agent/application-signals-config",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:ap-northeast-3:111111111111:repository/cdk-hnb659fds-container-assets-111111111111-ap-northeast-3",
                  ],
                ],
              },
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppCountTaskEcsAppLogGroupF40366CD",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":secretsmanager:ap-northeast-3:111111111111:secret:",
                    {
                      "Fn::Join": [
                        "-",
                        [
                          {
                            "Fn::Select": [
                              0,
                              {
                                "Fn::Split": [
                                  "-",
                                  {
                                    "Fn::Select": [
                                      6,
                                      {
                                        "Fn::Split": [
                                          ":",
                                          {
                                            "Fn::GetAtt": [
                                              "ExportsReader8B249524",
                                              "/cdk/exports/BLEAFSI-CoreBanking-secondary/BLEAFSICoreBankingprimaryapnortheast1RefBLEAFSICoreBankingprimaryDBAuroraPgAuroraClusterSecret7B31D2F13fdaad7efa858a3daf9490cf0a702aeb632D9498",
                                            ],
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                          {
                            "Fn::Select": [
                              1,
                              {
                                "Fn::Split": [
                                  "-",
                                  {
                                    "Fn::Select": [
                                      6,
                                      {
                                        "Fn::Split": [
                                          ":",
                                          {
                                            "Fn::GetAtt": [
                                              "ExportsReader8B249524",
                                              "/cdk/exports/BLEAFSI-CoreBanking-secondary/BLEAFSICoreBankingprimaryapnortheast1RefBLEAFSICoreBankingprimaryDBAuroraPgAuroraClusterSecret7B31D2F13fdaad7efa858a3daf9490cf0a702aeb632D9498",
                                            ],
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      ],
                    },
                    "-??????",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SampleMultiRegionAppCountTaskExecutionRoleDefaultPolicyFF11097E",
        "Roles": [
          {
            "Ref": "SampleMultiRegionAppCountTaskExecutionRoleA2265BAB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SampleMultiRegionAppCountTaskTaskRole45DC9375": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Application Signals requires wildcard permissions for CloudWatch logs, X-Ray traces, and SSM parameters across multiple resources",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "SampleMultiRegionAppCountTaskTaskRoleDefaultPolicy49641718": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutLogEvents",
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:DescribeLogStreams",
                "logs:DescribeLogGroups",
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets",
                "xray:GetSamplingStatisticSummaries",
                "ssm:GetParameters",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:DescribeLogGroups",
                "logs:DescribeLogStreams",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:logs:ap-northeast-3:111111111111:log-group:/aws/application-signals/data:*",
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:ap-northeast-3:111111111111:parameter/ecs/cloudwatch-agent/application-signals-config",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SampleMultiRegionAppCountTaskTaskRoleDefaultPolicy49641718",
        "Roles": [
          {
            "Ref": "SampleMultiRegionAppCountTaskTaskRole45DC9375",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SampleMultiRegionAppCountTaskecscwagentLogGroup90463DDD": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "SampleMultiRegionAppCountTaskinitLogGroupB759B4B5": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "SampleMultiRegionAppMyRecordSet4189E06D": {
      "Properties": {
        "AliasTarget": {
          "DNSName": {
            "Fn::Join": [
              "",
              [
                "dualstack.",
                {
                  "Fn::GetAtt": [
                    "SampleMultiRegionAppAlb4934C8BB",
                    "DNSName",
                  ],
                },
              ],
            ],
          },
          "HostedZoneId": {
            "Fn::GetAtt": [
              "SampleMultiRegionAppAlb4934C8BB",
              "CanonicalHostedZoneID",
            ],
          },
        },
        "HostedZoneId": {
          "Fn::GetAtt": [
            "AssociateVpcWithHostedZonecrossRegionSsmParamGetParamPrivateHostedZoneIdDC466103",
            "Parameter.Value",
          ],
        },
        "Name": "api.ap-northeast-3.example.com.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "SampleMultiRegionAppParamTable7082CE0D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "PK",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": [
          {
            "AttributeName": "PK",
            "KeyType": "HASH",
          },
        ],
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "SampleMultiRegionAppTransactionFargateServiceC2F48BC5": {
      "DependsOn": [
        "SampleMultiRegionAppAlbListenertransactionRuleD04F551A",
        "SampleMultiRegionAppTransactionTaskTaskRoleDefaultPolicy89E5314C",
        "SampleMultiRegionAppTransactionTaskTaskRole209E6E33",
      ],
      "Properties": {
        "CapacityProviderStrategy": [
          {
            "CapacityProvider": "FARGATE",
            "Weight": 1,
          },
        ],
        "Cluster": {
          "Ref": "SampleMultiRegionAppCluster9D88E1C2",
        },
        "DeploymentConfiguration": {
          "Alarms": {
            "AlarmNames": [],
            "Enable": false,
            "Rollback": false,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LoadBalancers": [
          {
            "ContainerName": "EcsApp",
            "ContainerPort": 3000,
            "TargetGroupArn": {
              "Ref": "SampleMultiRegionAppTransactionGroupBBCBB2BD",
            },
          },
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppTransactionFargateServiceSecurityGroupAAC95742",
                  "GroupId",
                ],
              },
            ],
            "Subnets": [
              {
                "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
              },
              {
                "Ref": "VpcProtectedSubnet2SubnetC22C3325",
              },
            ],
          },
        },
        "TaskDefinition": {
          "Ref": "SampleMultiRegionAppTransactionTaskA16B11F7",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "SampleMultiRegionAppTransactionFargateServiceSecurityGroupAAC95742": {
      "DependsOn": [
        "SampleMultiRegionAppTransactionTaskTaskRoleDefaultPolicy89E5314C",
        "SampleMultiRegionAppTransactionTaskTaskRole209E6E33",
      ],
      "Properties": {
        "GroupDescription": "BLEAFSI-CoreBanking-secondary/SampleMultiRegionApp/Transaction/FargateService/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SampleMultiRegionAppTransactionFargateServiceSecurityGroupfromBLEAFSICoreBankingsecondarySampleMultiRegionAppAlbSecurityGroup550DBC7330004965F1F7": {
      "DependsOn": [
        "SampleMultiRegionAppTransactionTaskTaskRoleDefaultPolicy89E5314C",
        "SampleMultiRegionAppTransactionTaskTaskRole209E6E33",
      ],
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 3000,
        "GroupId": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppTransactionFargateServiceSecurityGroupAAC95742",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppAlbSecurityGroupE1B8B642",
            "GroupId",
          ],
        },
        "ToPort": 3000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "SampleMultiRegionAppTransactionGroupBBCBB2BD": {
      "Properties": {
        "HealthCheckIntervalSeconds": 15,
        "HealthCheckPath": "/health",
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "10",
          },
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "SampleMultiRegionAppTransactionTaskA16B11F7": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-ECS2",
              "reason": "CloudWatch Application Signals requires environment variables for proper configuration",
            },
            {
              "id": "AwsSolutions-ECS2",
              "reason": "CloudWatch Agent requires environment variables for Application Signals configuration",
            },
          ],
        },
      },
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "cp",
              "-a",
              "/autoinstrumentation/.",
              "/otel-auto-instrumentation-node/",
            ],
            "Cpu": 64,
            "Essential": false,
            "Image": "public.ecr.aws/aws-observability/adot-autoinstrumentation-node:v0.7.0",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "SampleMultiRegionAppTransactionTaskinitLogGroup76BB1229",
                },
                "awslogs-region": "ap-northeast-3",
                "awslogs-stream-prefix": "BLEA-Init-",
              },
            },
            "Memory": 128,
            "MemoryReservation": 64,
            "MountPoints": [
              {
                "ContainerPath": "/otel-auto-instrumentation-node",
                "ReadOnly": false,
                "SourceVolume": "opentelemetry-auto-instrumentation-node",
              },
            ],
            "Name": "init",
          },
          {
            "Cpu": 0,
            "Environment": [
              {
                "Name": "ECS_ENABLE_CONTAINER_METADATA",
                "Value": "true",
              },
              {
                "Name": "OTEL_AWS_APPLICATION_SIGNALS_ENABLED",
                "Value": "true",
              },
              {
                "Name": "OTEL_METRICS_EXPORTER",
                "Value": "none",
              },
              {
                "Name": "OTEL_EXPORTER_OTLP_ENDPOINT",
                "Value": "http://localhost:4316",
              },
              {
                "Name": "OTEL_RESOURCE_ATTRIBUTES",
                "Value": "service.name=BLEAFSI-CoreBanking-secondary",
              },
            ],
            "Essential": true,
            "Image": "public.ecr.aws/cloudwatch-agent/cloudwatch-agent:1.300059.0b1207",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "SampleMultiRegionAppTransactionTaskecscwagentLogGroup62A9DCC5",
                },
                "awslogs-region": "ap-northeast-3",
                "awslogs-stream-prefix": "BLEA-CloudWatchAgent-",
              },
            },
            "Name": "ecs-cwagent",
            "Secrets": [
              {
                "Name": "CW_CONFIG_CONTENT",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":ssm:ap-northeast-3:111111111111:parameter/ecs/cloudwatch-agent/application-signals-config",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Cpu": 768,
            "DependsOn": [
              {
                "Condition": "SUCCESS",
                "ContainerName": "init",
              },
              {
                "Condition": "START",
                "ContainerName": "ecs-cwagent",
              },
            ],
            "Environment": [
              {
                "Name": "MAIN_TABLE_NAME",
                "Value": {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "/",
                        {
                          "Fn::GetAtt": [
                            "ExportsReader8B249524",
                            "/cdk/exports/BLEAFSI-CoreBanking-secondary/BLEAFSICoreBankingprimaryapnortheast1FnGetAtttransactionDBDynamoDbArn1E79A864",
                          ],
                        },
                      ],
                    },
                  ],
                },
              },
              {
                "Name": "PARAM_TABLE_NAME",
                "Value": {
                  "Ref": "SampleMultiRegionAppParamTable7082CE0D",
                },
              },
              {
                "Name": "DATABASE_HOST",
                "Value": "",
              },
              {
                "Name": "OTEL_RESOURCE_ATTRIBUTES",
                "Value": "service.name=transaction,deployment.environment=production,service.version=1.0.0",
              },
              {
                "Name": "OTEL_AWS_APPLICATION_SIGNALS_ENABLED",
                "Value": "true",
              },
              {
                "Name": "OTEL_METRICS_EXPORTER",
                "Value": "none",
              },
              {
                "Name": "OTEL_LOGS_EXPORTER",
                "Value": "none",
              },
              {
                "Name": "OTEL_TRACES_EXPORTER",
                "Value": "otlp",
              },
              {
                "Name": "OTEL_EXPORTER_OTLP_PROTOCOL",
                "Value": "http/protobuf",
              },
              {
                "Name": "OTEL_EXPORTER_OTLP_ENDPOINT",
                "Value": "http://localhost:4316",
              },
              {
                "Name": "OTEL_NODE_RESOURCE_DETECTORS",
                "Value": "env,host,os,process",
              },
              {
                "Name": "OTEL_PROPAGATORS",
                "Value": "xray",
              },
              {
                "Name": "NODE_OPTIONS",
                "Value": "--require /otel-auto-instrumentation-node/autoinstrumentation.js",
              },
              {
                "Name": "OTEL_TRACES_SAMPLER",
                "Value": "xray",
              },
            ],
            "Essential": true,
            "Image": {
              "Fn::Sub": "111111111111.dkr.ecr.ap-northeast-3.\${AWS::URLSuffix}/cdk-hnb659fds-container-assets-111111111111-ap-northeast-3:810bff37c48d02f000c751e20b7fd61c573997c5c4aa9e84867f8017e6f5db1c",
            },
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "SampleMultiRegionAppTransactionTaskEcsAppLogGroupDC46D677",
                },
                "awslogs-region": "ap-northeast-3",
                "awslogs-stream-prefix": "BLEA-ECSApp-",
              },
            },
            "Memory": 1792,
            "MemoryReservation": 1792,
            "MountPoints": [
              {
                "ContainerPath": "/otel-auto-instrumentation-node",
                "ReadOnly": false,
                "SourceVolume": "opentelemetry-auto-instrumentation-node",
              },
            ],
            "Name": "EcsApp",
            "PortMappings": [
              {
                "ContainerPort": 3000,
                "Protocol": "tcp",
              },
            ],
          },
        ],
        "Cpu": "1024",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppTransactionTaskExecutionRole3D527536",
            "Arn",
          ],
        },
        "Family": "BLEAFSICoreBankingsecondarySampleMultiRegionAppTransactionTask5393C414",
        "Memory": "2048",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppTransactionTaskTaskRole209E6E33",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Name": "opentelemetry-auto-instrumentation-node",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "SampleMultiRegionAppTransactionTaskEcsAppLogGroupDC46D677": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "SampleMultiRegionAppTransactionTaskExecutionRole3D527536": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Policy::arn:<AWS::Partition>:iam::aws:policy/CloudWatchAgentServerPolicy",
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "CloudWatch Agent requires AWS managed policy CloudWatchAgentServerPolicy for proper operation",
            },
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "ECR Public access requires wildcard permissions for authentication tokens",
            },
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Application Signals requires wildcard permissions for metrics and configuration access",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/CloudWatchAgentServerPolicy",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SampleMultiRegionAppTransactionTaskExecutionRoleDefaultPolicy95A5AB7D": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CloudWatch Application Signals execution role requires wildcard permissions for ECR and CloudWatch access",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr-public:GetAuthorizationToken",
                "sts:GetServiceBearerToken",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:ap-northeast-3:111111111111:parameter/ecs/cloudwatch-agent/application-signals-config",
                  ],
                ],
              },
            },
            {
              "Action": [
                "application-signals:*",
                "cloudwatch:PutMetricData",
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppTransactionTaskinitLogGroup76BB1229",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppTransactionTaskecscwagentLogGroup62A9DCC5",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:ap-northeast-3:111111111111:parameter/ecs/cloudwatch-agent/application-signals-config",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:ap-northeast-3:111111111111:repository/cdk-hnb659fds-container-assets-111111111111-ap-northeast-3",
                  ],
                ],
              },
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppTransactionTaskEcsAppLogGroupDC46D677",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SampleMultiRegionAppTransactionTaskExecutionRoleDefaultPolicy95A5AB7D",
        "Roles": [
          {
            "Ref": "SampleMultiRegionAppTransactionTaskExecutionRole3D527536",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SampleMultiRegionAppTransactionTaskTaskRole209E6E33": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Application Signals requires wildcard permissions for CloudWatch logs, X-Ray traces, and SSM parameters across multiple resources",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "SampleMultiRegionAppTransactionTaskTaskRoleDefaultPolicy89E5314C": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutLogEvents",
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:DescribeLogStreams",
                "logs:DescribeLogGroups",
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets",
                "xray:GetSamplingStatisticSummaries",
                "ssm:GetParameters",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:DescribeLogGroups",
                "logs:DescribeLogStreams",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:logs:ap-northeast-3:111111111111:log-group:/aws/application-signals/data:*",
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:ap-northeast-3:111111111111:parameter/ecs/cloudwatch-agent/application-signals-config",
                  ],
                ],
              },
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SampleMultiRegionAppParamTable7082CE0D",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":dynamodb:ap-northeast-3:111111111111:table/",
                      {
                        "Fn::Select": [
                          1,
                          {
                            "Fn::Split": [
                              "/",
                              {
                                "Fn::GetAtt": [
                                  "ExportsReader8B249524",
                                  "/cdk/exports/BLEAFSI-CoreBanking-secondary/BLEAFSICoreBankingprimaryapnortheast1FnGetAtttransactionDBDynamoDbArn1E79A864",
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":dynamodb:ap-northeast-3:111111111111:table/",
                      {
                        "Fn::Select": [
                          1,
                          {
                            "Fn::Split": [
                              "/",
                              {
                                "Fn::GetAtt": [
                                  "ExportsReader8B249524",
                                  "/cdk/exports/BLEAFSI-CoreBanking-secondary/BLEAFSICoreBankingprimaryapnortheast1FnGetAtttransactionDBDynamoDbArn1E79A864",
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SampleMultiRegionAppTransactionTaskTaskRoleDefaultPolicy89E5314C",
        "Roles": [
          {
            "Ref": "SampleMultiRegionAppTransactionTaskTaskRole209E6E33",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SampleMultiRegionAppTransactionTaskecscwagentLogGroup62A9DCC5": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "SampleMultiRegionAppTransactionTaskinitLogGroup76BB1229": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "SampleMultiRegionAppTransactionWorkerFargateServiceCAD6D2BF": {
      "DependsOn": [
        "SampleMultiRegionAppTransactionWorkerTaskTaskRoleDefaultPolicy44090D01",
        "SampleMultiRegionAppTransactionWorkerTaskTaskRoleCC299E7B",
      ],
      "Properties": {
        "CapacityProviderStrategy": [
          {
            "CapacityProvider": "FARGATE",
            "Weight": 1,
          },
        ],
        "Cluster": {
          "Ref": "SampleMultiRegionAppCluster9D88E1C2",
        },
        "DeploymentConfiguration": {
          "Alarms": {
            "AlarmNames": [],
            "Enable": false,
            "Rollback": false,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 0,
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppTransactionWorkerFargateServiceSecurityGroup8D963150",
                  "GroupId",
                ],
              },
            ],
            "Subnets": [
              {
                "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
              },
              {
                "Ref": "VpcProtectedSubnet2SubnetC22C3325",
              },
            ],
          },
        },
        "TaskDefinition": {
          "Ref": "SampleMultiRegionAppTransactionWorkerTaskB2B4F976",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "SampleMultiRegionAppTransactionWorkerFargateServiceSecurityGroup8D963150": {
      "DependsOn": [
        "SampleMultiRegionAppTransactionWorkerTaskTaskRoleDefaultPolicy44090D01",
        "SampleMultiRegionAppTransactionWorkerTaskTaskRoleCC299E7B",
      ],
      "Properties": {
        "GroupDescription": "BLEAFSI-CoreBanking-secondary/SampleMultiRegionApp/TransactionWorker/FargateService/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SampleMultiRegionAppTransactionWorkerTaskB2B4F976": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-ECS2",
              "reason": "CloudWatch Application Signals requires environment variables for proper configuration",
            },
            {
              "id": "AwsSolutions-ECS2",
              "reason": "CloudWatch Agent requires environment variables for Application Signals configuration",
            },
          ],
        },
      },
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "cp",
              "-a",
              "/autoinstrumentation/.",
              "/otel-auto-instrumentation-node/",
            ],
            "Cpu": 64,
            "Essential": false,
            "Image": "public.ecr.aws/aws-observability/adot-autoinstrumentation-node:v0.7.0",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "SampleMultiRegionAppTransactionWorkerTaskinitLogGroup13747103",
                },
                "awslogs-region": "ap-northeast-3",
                "awslogs-stream-prefix": "BLEA-Init-",
              },
            },
            "Memory": 128,
            "MemoryReservation": 64,
            "MountPoints": [
              {
                "ContainerPath": "/otel-auto-instrumentation-node",
                "ReadOnly": false,
                "SourceVolume": "opentelemetry-auto-instrumentation-node",
              },
            ],
            "Name": "init",
          },
          {
            "Cpu": 0,
            "Environment": [
              {
                "Name": "ECS_ENABLE_CONTAINER_METADATA",
                "Value": "true",
              },
              {
                "Name": "OTEL_AWS_APPLICATION_SIGNALS_ENABLED",
                "Value": "true",
              },
              {
                "Name": "OTEL_METRICS_EXPORTER",
                "Value": "none",
              },
              {
                "Name": "OTEL_EXPORTER_OTLP_ENDPOINT",
                "Value": "http://localhost:4316",
              },
              {
                "Name": "OTEL_RESOURCE_ATTRIBUTES",
                "Value": "service.name=BLEAFSI-CoreBanking-secondary",
              },
            ],
            "Essential": true,
            "Image": "public.ecr.aws/cloudwatch-agent/cloudwatch-agent:1.300059.0b1207",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "SampleMultiRegionAppTransactionWorkerTaskecscwagentLogGroupE3353C45",
                },
                "awslogs-region": "ap-northeast-3",
                "awslogs-stream-prefix": "BLEA-CloudWatchAgent-",
              },
            },
            "Name": "ecs-cwagent",
            "Secrets": [
              {
                "Name": "CW_CONFIG_CONTENT",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":ssm:ap-northeast-3:111111111111:parameter/ecs/cloudwatch-agent/application-signals-config",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "node",
              "worker.js",
            ],
            "Cpu": 768,
            "DependsOn": [
              {
                "Condition": "SUCCESS",
                "ContainerName": "init",
              },
              {
                "Condition": "START",
                "ContainerName": "ecs-cwagent",
              },
            ],
            "Environment": [
              {
                "Name": "MAIN_TABLE_NAME",
                "Value": {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "/",
                        {
                          "Fn::GetAtt": [
                            "ExportsReader8B249524",
                            "/cdk/exports/BLEAFSI-CoreBanking-secondary/BLEAFSICoreBankingprimaryapnortheast1FnGetAtttransactionDBDynamoDbArn1E79A864",
                          ],
                        },
                      ],
                    },
                  ],
                },
              },
              {
                "Name": "PARAM_TABLE_NAME",
                "Value": {
                  "Ref": "SampleMultiRegionAppParamTable7082CE0D",
                },
              },
              {
                "Name": "BALANCE_ENDPOINT",
                "Value": {
                  "Fn::Join": [
                    "",
                    [
                      "http://",
                      {
                        "Fn::GetAtt": [
                          "SampleMultiRegionAppAlb4934C8BB",
                          "DNSName",
                        ],
                      },
                      "/balance",
                    ],
                  ],
                },
              },
              {
                "Name": "COUNT_ENDPOINT",
                "Value": {
                  "Fn::Join": [
                    "",
                    [
                      "http://",
                      {
                        "Fn::GetAtt": [
                          "SampleMultiRegionAppAlb4934C8BB",
                          "DNSName",
                        ],
                      },
                      "/count",
                    ],
                  ],
                },
              },
              {
                "Name": "SERVICE_NAME",
                "Value": "transaction-worker",
              },
              {
                "Name": "OTEL_RESOURCE_ATTRIBUTES",
                "Value": "service.name=transaction-worker,deployment.environment=production,service.version=1.0.0",
              },
              {
                "Name": "OTEL_AWS_APPLICATION_SIGNALS_ENABLED",
                "Value": "true",
              },
              {
                "Name": "OTEL_METRICS_EXPORTER",
                "Value": "none",
              },
              {
                "Name": "OTEL_LOGS_EXPORTER",
                "Value": "none",
              },
              {
                "Name": "OTEL_TRACES_EXPORTER",
                "Value": "otlp",
              },
              {
                "Name": "OTEL_EXPORTER_OTLP_PROTOCOL",
                "Value": "http/protobuf",
              },
              {
                "Name": "OTEL_EXPORTER_OTLP_ENDPOINT",
                "Value": "http://localhost:4316",
              },
              {
                "Name": "OTEL_PROPAGATORS",
                "Value": "xray",
              },
              {
                "Name": "NODE_OPTIONS",
                "Value": "--require /otel-auto-instrumentation-node/autoinstrumentation.js",
              },
              {
                "Name": "OTEL_TRACES_SAMPLER",
                "Value": "xray",
              },
            ],
            "Essential": true,
            "Image": {
              "Fn::Sub": "111111111111.dkr.ecr.ap-northeast-3.\${AWS::URLSuffix}/cdk-hnb659fds-container-assets-111111111111-ap-northeast-3:810bff37c48d02f000c751e20b7fd61c573997c5c4aa9e84867f8017e6f5db1c",
            },
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "SampleMultiRegionAppTransactionWorkerTaskEcsAppLogGroup275E0976",
                },
                "awslogs-region": "ap-northeast-3",
                "awslogs-stream-prefix": "BLEA-ECSApp-",
              },
            },
            "Memory": 1792,
            "MemoryReservation": 1792,
            "MountPoints": [
              {
                "ContainerPath": "/otel-auto-instrumentation-node",
                "ReadOnly": false,
                "SourceVolume": "opentelemetry-auto-instrumentation-node",
              },
            ],
            "Name": "EcsApp",
          },
        ],
        "Cpu": "1024",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppTransactionWorkerTaskExecutionRole0464601D",
            "Arn",
          ],
        },
        "Family": "BLEAFSICoreBankingsecondarySampleMultiRegionAppTransactionWorkerTaskDC416165",
        "Memory": "2048",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "SampleMultiRegionAppTransactionWorkerTaskTaskRoleCC299E7B",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Name": "opentelemetry-auto-instrumentation-node",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "SampleMultiRegionAppTransactionWorkerTaskEcsAppLogGroup275E0976": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "SampleMultiRegionAppTransactionWorkerTaskExecutionRole0464601D": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Policy::arn:<AWS::Partition>:iam::aws:policy/CloudWatchAgentServerPolicy",
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "CloudWatch Agent requires AWS managed policy CloudWatchAgentServerPolicy for proper operation",
            },
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "ECR Public access requires wildcard permissions for authentication tokens",
            },
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Application Signals requires wildcard permissions for metrics and configuration access",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/CloudWatchAgentServerPolicy",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SampleMultiRegionAppTransactionWorkerTaskExecutionRoleDefaultPolicy3B01D851": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CloudWatch Application Signals execution role requires wildcard permissions for ECR and CloudWatch access",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr-public:GetAuthorizationToken",
                "sts:GetServiceBearerToken",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:ap-northeast-3:111111111111:parameter/ecs/cloudwatch-agent/application-signals-config",
                  ],
                ],
              },
            },
            {
              "Action": [
                "application-signals:*",
                "cloudwatch:PutMetricData",
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppTransactionWorkerTaskinitLogGroup13747103",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppTransactionWorkerTaskecscwagentLogGroupE3353C45",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:ap-northeast-3:111111111111:parameter/ecs/cloudwatch-agent/application-signals-config",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:ap-northeast-3:111111111111:repository/cdk-hnb659fds-container-assets-111111111111-ap-northeast-3",
                  ],
                ],
              },
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SampleMultiRegionAppTransactionWorkerTaskEcsAppLogGroup275E0976",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SampleMultiRegionAppTransactionWorkerTaskExecutionRoleDefaultPolicy3B01D851",
        "Roles": [
          {
            "Ref": "SampleMultiRegionAppTransactionWorkerTaskExecutionRole0464601D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SampleMultiRegionAppTransactionWorkerTaskTaskRoleCC299E7B": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Application Signals requires wildcard permissions for CloudWatch logs, X-Ray traces, and SSM parameters across multiple resources",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "SampleMultiRegionAppTransactionWorkerTaskTaskRoleDefaultPolicy44090D01": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutLogEvents",
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:DescribeLogStreams",
                "logs:DescribeLogGroups",
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets",
                "xray:GetSamplingStatisticSummaries",
                "ssm:GetParameters",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:DescribeLogGroups",
                "logs:DescribeLogStreams",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:logs:ap-northeast-3:111111111111:log-group:/aws/application-signals/data:*",
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:ap-northeast-3:111111111111:parameter/ecs/cloudwatch-agent/application-signals-config",
                  ],
                ],
              },
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SampleMultiRegionAppParamTable7082CE0D",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":dynamodb:ap-northeast-3:111111111111:table/",
                      {
                        "Fn::Select": [
                          1,
                          {
                            "Fn::Split": [
                              "/",
                              {
                                "Fn::GetAtt": [
                                  "ExportsReader8B249524",
                                  "/cdk/exports/BLEAFSI-CoreBanking-secondary/BLEAFSICoreBankingprimaryapnortheast1FnGetAtttransactionDBDynamoDbArn1E79A864",
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":dynamodb:ap-northeast-3:111111111111:table/",
                      {
                        "Fn::Select": [
                          1,
                          {
                            "Fn::Split": [
                              "/",
                              {
                                "Fn::GetAtt": [
                                  "ExportsReader8B249524",
                                  "/cdk/exports/BLEAFSI-CoreBanking-secondary/BLEAFSICoreBankingprimaryapnortheast1FnGetAtttransactionDBDynamoDbArn1E79A864",
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SampleMultiRegionAppTransactionWorkerTaskTaskRoleDefaultPolicy44090D01",
        "Roles": [
          {
            "Ref": "SampleMultiRegionAppTransactionWorkerTaskTaskRoleCC299E7B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SampleMultiRegionAppTransactionWorkerTaskecscwagentLogGroupE3353C45": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "SampleMultiRegionAppTransactionWorkerTaskinitLogGroup13747103": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "Vpc8378EB38": {
      "Properties": {
        "CidrBlock": "10.101.0.0/20",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-secondary/Vpc/Default",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcDynamoDbEndpoint564903D1": {
      "Properties": {
        "RouteTableIds": [
          {
            "Ref": "VpcForTgwAttachmentsSubnet1RouteTable8C881736",
          },
          {
            "Ref": "VpcForTgwAttachmentsSubnet2RouteTableCA78E48E",
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".dynamodb",
            ],
          ],
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-secondary/Vpc/Default",
          },
        ],
        "VpcEndpointType": "Gateway",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcEcrDockerEndpointEnhanced87EBAE8F": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcVpcEndpointSecurityGroup7FA95FB5",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-3.ecr.dkr",
        "SubnetIds": [
          {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-secondary/Vpc/Default",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcEcrEndpointEnhancedA71B0D84": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcVpcEndpointSecurityGroup7FA95FB5",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-3.ecr.api",
        "SubnetIds": [
          {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-secondary/Vpc/Default",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcForTgwAttachmentsSubnet1RouteTable8C881736": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-secondary/Vpc/Default/ForTgwAttachmentsSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcForTgwAttachmentsSubnet1RouteTableAssociation8E490026": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcForTgwAttachmentsSubnet1RouteTable8C881736",
        },
        "SubnetId": {
          "Ref": "VpcForTgwAttachmentsSubnet1Subnet95D19052",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcForTgwAttachmentsSubnet1Subnet95D19052": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.101.12.0/28",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "ForTgwAttachments",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-secondary/Vpc/Default/ForTgwAttachmentsSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcForTgwAttachmentsSubnet2RouteTableAssociation87852F7E": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcForTgwAttachmentsSubnet2RouteTableCA78E48E",
        },
        "SubnetId": {
          "Ref": "VpcForTgwAttachmentsSubnet2SubnetAEDBB0E8",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcForTgwAttachmentsSubnet2RouteTableCA78E48E": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-secondary/Vpc/Default/ForTgwAttachmentsSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcForTgwAttachmentsSubnet2SubnetAEDBB0E8": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.101.12.16/28",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "ForTgwAttachments",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-secondary/Vpc/Default/ForTgwAttachmentsSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcIGWD7BA715C": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-secondary/Vpc/Default",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcIsolatedRouteToTgw0010E66EA7": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.100.0.0/20",
        "RouteTableId": {
          "Ref": "VpcForTgwAttachmentsSubnet1RouteTable8C881736",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcIsolatedRouteToTgw01215500D5": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.100.0.0/20",
        "RouteTableId": {
          "Ref": "VpcForTgwAttachmentsSubnet2RouteTableCA78E48E",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcIsolatedRouteToTgw104C2BA69B": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.100.16.0/24",
        "RouteTableId": {
          "Ref": "VpcForTgwAttachmentsSubnet1RouteTable8C881736",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcIsolatedRouteToTgw115B3B5E9B": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.100.16.0/24",
        "RouteTableId": {
          "Ref": "VpcForTgwAttachmentsSubnet2RouteTableCA78E48E",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcIsolatedRouteToTgw20DE9074DA": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.102.0.0/20",
        "RouteTableId": {
          "Ref": "VpcForTgwAttachmentsSubnet1RouteTable8C881736",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcIsolatedRouteToTgw217FCF0045": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.102.0.0/20",
        "RouteTableId": {
          "Ref": "VpcForTgwAttachmentsSubnet2RouteTableCA78E48E",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcLogsEndpointForPrivateEnhanced6028892D": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcVpcEndpointSecurityGroup7FA95FB5",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-3.logs",
        "SubnetIds": [
          {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-secondary/Vpc/Default",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcMonitoringEndpointEnhancedD2ABE4D5": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcVpcEndpointSecurityGroup7FA95FB5",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-3.monitoring",
        "SubnetIds": [
          {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-secondary/Vpc/Default",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcNaclPublicDefaultAssociationBLEAFSICoreBankingsecondaryVpcPublicSubnet133FD76514AF651D0": {
      "Properties": {
        "NetworkAclId": {
          "Ref": "VpcNaclPublicF3ACBBF5",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
      },
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
    },
    "VpcNaclPublicDefaultAssociationBLEAFSICoreBankingsecondaryVpcPublicSubnet210A14E5B3ADAC4BC": {
      "Properties": {
        "NetworkAclId": {
          "Ref": "VpcNaclPublicF3ACBBF5",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
      },
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
    },
    "VpcNaclPublicF3ACBBF5": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-secondary/Vpc/NaclPublic",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::NetworkAcl",
    },
    "VpcNaclPublicNaclEgressPublic7F2645E5": {
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": true,
        "NetworkAclId": {
          "Ref": "VpcNaclPublicF3ACBBF5",
        },
        "Protocol": -1,
        "RuleAction": "allow",
        "RuleNumber": 100,
      },
      "Type": "AWS::EC2::NetworkAclEntry",
    },
    "VpcNaclPublicNaclIngressPublicCA388ADE": {
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": false,
        "NetworkAclId": {
          "Ref": "VpcNaclPublicF3ACBBF5",
        },
        "Protocol": -1,
        "RuleAction": "allow",
        "RuleNumber": 100,
      },
      "Type": "AWS::EC2::NetworkAclEntry",
    },
    "VpcPrivateRouteToTgw00C759BD7B": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.100.0.0/20",
        "RouteTableId": {
          "Ref": "VpcProtectedSubnet1RouteTable69FCECD8",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateRouteToTgw016CC8C401": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.100.0.0/20",
        "RouteTableId": {
          "Ref": "VpcProtectedSubnet2RouteTableFA54AE0B",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateRouteToTgw102D7DA115": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.100.16.0/24",
        "RouteTableId": {
          "Ref": "VpcProtectedSubnet1RouteTable69FCECD8",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateRouteToTgw11FA0FAEA3": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.100.16.0/24",
        "RouteTableId": {
          "Ref": "VpcProtectedSubnet2RouteTableFA54AE0B",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateRouteToTgw20BB19812E": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.102.0.0/20",
        "RouteTableId": {
          "Ref": "VpcProtectedSubnet1RouteTable69FCECD8",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateRouteToTgw211FE6501E": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.102.0.0/20",
        "RouteTableId": {
          "Ref": "VpcProtectedSubnet2RouteTableFA54AE0B",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcProtectedSubnet1DefaultRouteAEBDEDB0": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA",
        },
        "RouteTableId": {
          "Ref": "VpcProtectedSubnet1RouteTable69FCECD8",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcProtectedSubnet1RouteTable69FCECD8": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-secondary/Vpc/Default/ProtectedSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcProtectedSubnet1RouteTableAssociation62F625F2": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcProtectedSubnet1RouteTable69FCECD8",
        },
        "SubnetId": {
          "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcProtectedSubnet1Subnet38ECE18A": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.101.4.0/22",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Protected",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-secondary/Vpc/Default/ProtectedSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcProtectedSubnet2DefaultRouteA5CFB1D1": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet2NATGateway9182C01D",
        },
        "RouteTableId": {
          "Ref": "VpcProtectedSubnet2RouteTableFA54AE0B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcProtectedSubnet2RouteTableAssociation960FE2AC": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcProtectedSubnet2RouteTableFA54AE0B",
        },
        "SubnetId": {
          "Ref": "VpcProtectedSubnet2SubnetC22C3325",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcProtectedSubnet2RouteTableFA54AE0B": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-secondary/Vpc/Default/ProtectedSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcProtectedSubnet2SubnetC22C3325": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.101.8.0/22",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Protected",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-secondary/Vpc/Default/ProtectedSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicRouteToTgw000F279134": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.100.0.0/20",
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicRouteToTgw010382C227": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.100.0.0/20",
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicRouteToTgw10C3652BD4": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.100.16.0/24",
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicRouteToTgw1164424897": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.100.16.0/24",
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicRouteToTgw20F2597E8C": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.102.0.0/20",
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicRouteToTgw21479C9DC9": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.102.0.0/20",
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet1DefaultRoute3DA9E72A": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet1EIPD7E02669": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-secondary/Vpc/Default/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet1NATGateway4D7517AA": {
      "DependsOn": [
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1RouteTableAssociation97140677",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet1EIPD7E02669",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-secondary/Vpc/Default/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet1RouteTable6C95E38E": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-secondary/Vpc/Default/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet1RouteTableAssociation97140677": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet1Subnet5C2D37C4": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.101.0.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-secondary/Vpc/Default/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet2DefaultRoute97F91067": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet2EIP3C605A87": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-secondary/Vpc/Default/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet2NATGateway9182C01D": {
      "DependsOn": [
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet2EIP3C605A87",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-secondary/Vpc/Default/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet2RouteTable94F7E489": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-secondary/Vpc/Default/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet2RouteTableAssociationDD5762D8": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet2Subnet691E08A3": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.101.1.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-secondary/Vpc/Default/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcR53ResolverEndpointE9CD13A7": {
      "Properties": {
        "Direction": "INBOUND",
        "IpAddresses": [
          {
            "SubnetId": {
              "Ref": "VpcForTgwAttachmentsSubnet1Subnet95D19052",
            },
          },
          {
            "SubnetId": {
              "Ref": "VpcForTgwAttachmentsSubnet2SubnetAEDBB0E8",
            },
          },
        ],
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcR53ResolverEndpointSg5A7EAA51",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::Route53Resolver::ResolverEndpoint",
    },
    "VpcR53ResolverEndpointSg5A7EAA51": {
      "Properties": {
        "GroupDescription": "BLEAFSI-CoreBanking-secondary/Vpc/R53ResolverEndpointSg",
        "SecurityGroupEgress": [
          {
            "CidrIp": "255.255.255.255/32",
            "Description": "Disallow all traffic",
            "FromPort": 252,
            "IpProtocol": "icmp",
            "ToPort": 86,
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "10.0.0.0/16",
            "Description": "from 10.0.0.0/16:53",
            "FromPort": 53,
            "IpProtocol": "tcp",
            "ToPort": 53,
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcRdsEndpointABC2CAAE": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcVpcEndpointSecurityGroup7FA95FB5",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-3.rds",
        "SubnetIds": [
          {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-secondary/Vpc/Default",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcS3EndpointEnhanced7E221DBC": {
      "Properties": {
        "RouteTableIds": [
          {
            "Ref": "VpcProtectedSubnet1RouteTable69FCECD8",
          },
          {
            "Ref": "VpcProtectedSubnet2RouteTableFA54AE0B",
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".s3",
            ],
          ],
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-secondary/Vpc/Default",
          },
        ],
        "VpcEndpointType": "Gateway",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcSecretsManagerEndpointForPrivate91BE082A": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcSecretsManagerEndpointForPrivateSecurityGroup732C6BAD",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-3.secretsmanager",
        "SubnetIds": [
          {
            "Ref": "VpcForTgwAttachmentsSubnet1Subnet95D19052",
          },
          {
            "Ref": "VpcForTgwAttachmentsSubnet2SubnetAEDBB0E8",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-secondary/Vpc/Default",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcSecretsManagerEndpointForPrivateSecurityGroup732C6BAD": {
      "Properties": {
        "GroupDescription": "BLEAFSI-CoreBanking-secondary/Vpc/Default/SecretsManagerEndpointForPrivate/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "Vpc8378EB38",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "Vpc8378EB38",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-secondary/Vpc/Default",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcSsmEndpointC46DB833": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcVpcEndpointSecurityGroup7FA95FB5",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-3.ssm",
        "SubnetIds": [
          {
            "Ref": "VpcForTgwAttachmentsSubnet1Subnet95D19052",
          },
          {
            "Ref": "VpcForTgwAttachmentsSubnet2SubnetAEDBB0E8",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-secondary/Vpc/Default",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcStsEndpointF89E8173": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcVpcEndpointSecurityGroup7FA95FB5",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-3.sts",
        "SubnetIds": [
          {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-secondary/Vpc/Default",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcTgw43A428E1": {
      "Properties": {
        "AmazonSideAsn": 64513,
        "Tags": [
          {
            "Key": "Name",
            "Value": "tgw-ap-northeast-3",
          },
        ],
      },
      "Type": "AWS::EC2::TransitGateway",
    },
    "VpcTgwAttachmentA32D0B42": {
      "Properties": {
        "SubnetIds": [
          {
            "Ref": "VpcForTgwAttachmentsSubnet1Subnet95D19052",
          },
          {
            "Ref": "VpcForTgwAttachmentsSubnet2SubnetAEDBB0E8",
          },
        ],
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::TransitGatewayAttachment",
    },
    "VpcVPCGWBF912B6E": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "VpcVpcEndpointSecurityGroup7FA95FB5": {
      "Properties": {
        "GroupDescription": "Security group for VPC endpoints used by CloudWatch Application Signals",
        "SecurityGroupEgress": [
          {
            "CidrIp": "255.255.255.255/32",
            "Description": "Disallow all traffic",
            "FromPort": 252,
            "IpProtocol": "icmp",
            "ToPort": 86,
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "Vpc8378EB38",
                "CidrBlock",
              ],
            },
            "Description": "Allow HTTPS from VPC CIDR for VPC endpoint access",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcVpcFlowLogsFlowLog421D53F0": {
      "Properties": {
        "DeliverLogsPermissionArn": {
          "Fn::GetAtt": [
            "VpcVpcFlowLogsLogRoleED2BD382",
            "Arn",
          ],
        },
        "LogDestinationType": "cloud-watch-logs",
        "LogGroupName": {
          "Ref": "VpcVpcFlowLogsLogGroup8558C776",
        },
        "ResourceId": {
          "Ref": "Vpc8378EB38",
        },
        "ResourceType": "VPC",
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-secondary/Vpc/VpcFlowLogs/VpcFlowLogs",
          },
        ],
        "TrafficType": "ALL",
      },
      "Type": "AWS::EC2::FlowLog",
    },
    "VpcVpcFlowLogsLogGroup8558C776": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 180,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "VpcVpcFlowLogsLogRoleDefaultPolicyD30183D1": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:DescribeLogStreams",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "VpcVpcFlowLogsLogGroup8558C776",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "VpcVpcFlowLogsLogRoleED2BD382",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "VpcVpcFlowLogsLogRoleDefaultPolicyD30183D1",
        "Roles": [
          {
            "Ref": "VpcVpcFlowLogsLogRoleED2BD382",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "VpcVpcFlowLogsLogRoleED2BD382": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "vpc-flow-logs.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "VpcXRayEdnpointD4EF46C8": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcXRayEdnpointSecurityGroupF647B21E",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-3.xray",
        "SubnetIds": [
          {
            "Ref": "VpcForTgwAttachmentsSubnet1Subnet95D19052",
          },
          {
            "Ref": "VpcForTgwAttachmentsSubnet2SubnetAEDBB0E8",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-secondary/Vpc/Default",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcXRayEdnpointSecurityGroupF647B21E": {
      "Properties": {
        "GroupDescription": "BLEAFSI-CoreBanking-secondary/Vpc/Default/XRayEdnpoint/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "Vpc8378EB38",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "Vpc8378EB38",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-secondary/Vpc/Default",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpccreateTgwPeeringAttachmentTgwPrimaryIdapnortheast1AA7928EE": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "VpccreateTgwPeeringAttachmentTgwPrimaryIdapnortheast1CustomResourcePolicy29E15986",
      ],
      "Properties": {
        "Create": {
          "Fn::Join": [
            "",
            [
              "{"service":"EC2","action":"createTransitGatewayPeeringAttachment","parameters":{"PeerAccountId":"111111111111","PeerRegion":"ap-northeast-1","PeerTransitGatewayId":"",
              {
                "Fn::GetAtt": [
                  "VpccrossRegionSsmParampeerTgwIdTgwPrimaryIdapnortheast1GetParamTgwPrimaryId4730D181",
                  "Parameter.Value",
                ],
              },
              "","TransitGatewayId":"",
              {
                "Ref": "VpcTgw43A428E1",
              },
              ""},"region":"ap-northeast-3","physicalResourceId":{"id":"createTgwPeeringAttachment-TgwPrimaryId-ap-northeast-1"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": {
          "Fn::Join": [
            "",
            [
              "{"service":"EC2","action":"createTransitGatewayPeeringAttachment","parameters":{"PeerAccountId":"111111111111","PeerRegion":"ap-northeast-1","PeerTransitGatewayId":"",
              {
                "Fn::GetAtt": [
                  "VpccrossRegionSsmParampeerTgwIdTgwPrimaryIdapnortheast1GetParamTgwPrimaryId4730D181",
                  "Parameter.Value",
                ],
              },
              "","TransitGatewayId":"",
              {
                "Ref": "VpcTgw43A428E1",
              },
              ""},"region":"ap-northeast-3","physicalResourceId":{"id":"createTgwPeeringAttachment-TgwPrimaryId-ap-northeast-1"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "VpccreateTgwPeeringAttachmentTgwPrimaryIdapnortheast1CustomResourcePolicy29E15986": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ec2:CreateTransitGatewayPeeringAttachment",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "VpccreateTgwPeeringAttachmentTgwPrimaryIdapnortheast1CustomResourcePolicy29E15986",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "VpccrossRegionSsmParamaddTgwIdSsmParamTgwSecondaryId56CAAB3A": {
      "Properties": {
        "Name": "/bleafsi/test/TgwSecondaryId",
        "Type": "String",
        "Value": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "VpccrossRegionSsmParampeerTgwIdTgwPrimaryIdapnortheast1GetParamTgwPrimaryId4730D181": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "VpccrossRegionSsmParampeerTgwIdTgwPrimaryIdapnortheast1GetParamTgwPrimaryIdCustomResourcePolicy767E1DD7",
      ],
      "Properties": {
        "Create": "{"service":"SSM","action":"getParameter","parameters":{"Name":"/bleafsi/test/TgwPrimaryId","WithDecryption":true},"region":"ap-northeast-1","physicalResourceId":{"id":"param-/bleafsi/test/TgwPrimaryId"}}",
        "InstallLatestAwsSdk": true,
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": "{"service":"SSM","action":"getParameter","parameters":{"Name":"/bleafsi/test/TgwPrimaryId","WithDecryption":true},"region":"ap-northeast-1","physicalResourceId":{"id":"param-/bleafsi/test/TgwPrimaryId"}}",
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "VpccrossRegionSsmParampeerTgwIdTgwPrimaryIdapnortheast1GetParamTgwPrimaryIdCustomResourcePolicy767E1DD7": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ssm:GetParameter",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "VpccrossRegionSsmParampeerTgwIdTgwPrimaryIdapnortheast1GetParamTgwPrimaryIdCustomResourcePolicy767E1DD7",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "WafWebAclBE24253C": {
      "Properties": {
        "DefaultAction": {
          "Allow": {},
        },
        "Name": "BLEAFSIAWebAcl",
        "Rules": [
          {
            "Name": "AWSManagedRulesCommonRuleSet",
            "OverrideAction": {
              "Count": {},
            },
            "Priority": 1,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesCommonRuleSet",
                "VendorName": "AWS",
              },
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWS-AWSManagedRulesCommonRuleSet",
              "SampledRequestsEnabled": true,
            },
          },
          {
            "Name": "AWSManagedRulesKnownBadInputsRuleSet",
            "OverrideAction": {
              "Count": {},
            },
            "Priority": 2,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesKnownBadInputsRuleSet",
                "VendorName": "AWS",
              },
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWS-AWSManagedRulesKnownBadInputsRuleSet",
              "SampledRequestsEnabled": true,
            },
          },
          {
            "Name": "AWSManagedRulesAmazonIpReputationList",
            "OverrideAction": {
              "Count": {},
            },
            "Priority": 3,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesAmazonIpReputationList",
                "VendorName": "AWS",
              },
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWS-AWSManagedRulesAmazonIpReputationList",
              "SampledRequestsEnabled": true,
            },
          },
          {
            "Name": "AWSManagedRulesLinuxRuleSet",
            "OverrideAction": {
              "Count": {},
            },
            "Priority": 4,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesLinuxRuleSet",
                "VendorName": "AWS",
              },
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWS-AWSManagedRulesLinuxRuleSet",
              "SampledRequestsEnabled": true,
            },
          },
          {
            "Name": "AWSManagedRulesSQLiRuleSet",
            "OverrideAction": {
              "Count": {},
            },
            "Priority": 5,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesSQLiRuleSet",
                "VendorName": "AWS",
              },
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWS-AWSManagedRulesSQLiRuleSet",
              "SampledRequestsEnabled": true,
            },
          },
        ],
        "Scope": "REGIONAL",
        "VisibilityConfig": {
          "CloudWatchMetricsEnabled": true,
          "MetricName": "BLEAFSIWebAcl",
          "SampledRequestsEnabled": true,
        },
      },
      "Type": "AWS::WAFv2::WebACL",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`BLEAFSI-CoreBanking snapshot check Core banking sample Stacks 3`] = `
{
  "Outputs": {
    "CLIforTGWpeeringacceptancetoprimaryregion": {
      "Description": "1. Subsequent CLI for TGW peering acceptance to primary region",
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws ec2 accept-transit-gateway-peering-attachment --region ap-northeast-1 --transit-gateway-attachment-id ",
            {
              "Fn::GetAtt": [
                "VpccreateTgwPeeringAttachmentTgwPrimaryIdapnortheast1AA7928EE",
                "TransitGatewayPeeringAttachment.TransitGatewayAttachmentId",
              ],
            },
            " --profile ct-guest-sso",
          ],
        ],
      },
    },
    "CLIforTGWpeeringacceptancetosecondaryregion": {
      "Description": "4. Subsequent CLI for TGW peering acceptance to secondary region",
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws ec2 accept-transit-gateway-peering-attachment --region ap-northeast-3 --transit-gateway-attachment-id ",
            {
              "Fn::GetAtt": [
                "VpccreateTgwPeeringAttachmentTgwSecondaryIdapnortheast3C673D5A1",
                "TransitGatewayPeeringAttachment.TransitGatewayAttachmentId",
              ],
            },
            " --profile ct-guest-sso",
          ],
        ],
      },
    },
    "CLIforaddingTGWrouteinprimaryregion": {
      "Description": "2. Subsequent CLI for adding TGW route in primary region",
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws ec2 create-transit-gateway-route --region ap-northeast-1 --destination-cidr-block 10.102.0.0/16 --transit-gateway-route-table-id ",
            {
              "Fn::GetAtt": [
                "ExportsReader8B249524",
                "/cdk/exports/BLEAFSI-CoreBanking-monitoring/BLEAFSICoreBankingprimaryapnortheast1FnGetAttGetDefaultRouteTableId6DB194BATransitGateways0OptionsAssociationDefaultRouteTableIdFC78B5FF",
              ],
            },
            " --transit-gateway-attachment-id ",
            {
              "Fn::GetAtt": [
                "VpccreateTgwPeeringAttachmentTgwPrimaryIdapnortheast1AA7928EE",
                "TransitGatewayPeeringAttachment.TransitGatewayAttachmentId",
              ],
            },
            " --profile ct-guest-sso",
          ],
        ],
      },
    },
    "CLIforaddingTGWrouteinsecondaryregion": {
      "Description": "5. Subsequent CLI for adding TGW route in secondary region",
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws ec2 create-transit-gateway-route --region ap-northeast-3 --destination-cidr-block 10.102.0.0/16 --transit-gateway-route-table-id ",
            {
              "Fn::GetAtt": [
                "ExportsReader8B249524",
                "/cdk/exports/BLEAFSI-CoreBanking-monitoring/BLEAFSICoreBankingsecondaryapnortheast3FnGetAttGetDefaultRouteTableId6DB194BATransitGateways0OptionsAssociationDefaultRouteTableId795B05C5",
              ],
            },
            " --transit-gateway-attachment-id ",
            {
              "Fn::GetAtt": [
                "VpccreateTgwPeeringAttachmentTgwSecondaryIdapnortheast3C673D5A1",
                "TransitGatewayPeeringAttachment.TransitGatewayAttachmentId",
              ],
            },
            " --profile ct-guest-sso",
          ],
        ],
      },
    },
    "CLIforaddingTGWroutetoprimaryregioninmonitoringregion": {
      "Description": "3. Subsequent CLI for adding TGW route to primary region in monitoring region",
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws ec2 create-transit-gateway-route --region us-west-2 --destination-cidr-block 10.100.0.0/16 --transit-gateway-route-table-id ",
            {
              "Fn::GetAtt": [
                "GetDefaultRouteTableId6DB194BA",
                "TransitGateways.0.Options.AssociationDefaultRouteTableId",
              ],
            },
            " --transit-gateway-attachment-id ",
            {
              "Fn::GetAtt": [
                "VpccreateTgwPeeringAttachmentTgwPrimaryIdapnortheast1AA7928EE",
                "TransitGatewayPeeringAttachment.TransitGatewayAttachmentId",
              ],
            },
            " --profile ct-guest-sso",
          ],
        ],
      },
    },
    "CLIforaddingTGWroutetosecondaryregioninmonitoringregion": {
      "Description": "6. Subsequent CLI for adding TGW route to secondary region in monitoring region",
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws ec2 create-transit-gateway-route --region us-west-2 --destination-cidr-block 10.101.0.0/16 --transit-gateway-route-table-id ",
            {
              "Fn::GetAtt": [
                "GetDefaultRouteTableId6DB194BA",
                "TransitGateways.0.Options.AssociationDefaultRouteTableId",
              ],
            },
            " --transit-gateway-attachment-id ",
            {
              "Fn::GetAtt": [
                "VpccreateTgwPeeringAttachmentTgwSecondaryIdapnortheast3C673D5A1",
                "TransitGatewayPeeringAttachment.TransitGatewayAttachmentId",
              ],
            },
            " --profile ct-guest-sso",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
      "DependsOn": [
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-111111111111-us-west-2",
          "S3Key": "4cd2f2411231aa073e609dc99a49b5c5e974252bf9abf0f9350d237d17cce8be.zip",
        },
        "Handler": "index.handler",
        "MemorySize": 256,
        "Role": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AssociateVpcWithHostedZoneRoute53AssociateVpc15E9B44F": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "AssociateVpcWithHostedZoneRoute53AssociateVpcCustomResourcePolicy891619A5",
        "VpccreateTgwPeeringAttachmentTgwPrimaryIdapnortheast1CustomResourcePolicy29E15986",
        "VpccreateTgwPeeringAttachmentTgwPrimaryIdapnortheast1AA7928EE",
        "VpccreateTgwPeeringAttachmentTgwSecondaryIdapnortheast3CustomResourcePolicy17380867",
        "VpccreateTgwPeeringAttachmentTgwSecondaryIdapnortheast3C673D5A1",
        "VpccrossRegionSsmParampeerTgwIdTgwPrimaryIdapnortheast1GetParamTgwPrimaryIdCustomResourcePolicy767E1DD7",
        "VpccrossRegionSsmParampeerTgwIdTgwPrimaryIdapnortheast1GetParamTgwPrimaryId4730D181",
        "VpccrossRegionSsmParampeerTgwIdTgwSecondaryIdapnortheast3GetParamTgwSecondaryIdCustomResourcePolicy1C69C266",
        "VpccrossRegionSsmParampeerTgwIdTgwSecondaryIdapnortheast3GetParamTgwSecondaryIdEA3626EF",
        "VpcDynamoDbEndpoint564903D1",
        "VpcEcrDockerEndpointEnhanced87EBAE8F",
        "VpcEcrEndpointEnhancedA71B0D84",
        "VpcForTgwAttachmentsSubnet1RouteTable8C881736",
        "VpcForTgwAttachmentsSubnet1RouteTableAssociation8E490026",
        "VpcForTgwAttachmentsSubnet1Subnet95D19052",
        "VpcForTgwAttachmentsSubnet2RouteTableCA78E48E",
        "VpcForTgwAttachmentsSubnet2RouteTableAssociation87852F7E",
        "VpcForTgwAttachmentsSubnet2SubnetAEDBB0E8",
        "VpcIGWD7BA715C",
        "VpcLogsEndpointForPrivateEnhanced6028892D",
        "VpcMonitoringEndpointEnhancedD2ABE4D5",
        "VpcProtectedSubnet1DefaultRouteAEBDEDB0",
        "VpcProtectedSubnet1RouteTable69FCECD8",
        "VpcProtectedSubnet1RouteTableAssociation62F625F2",
        "VpcProtectedSubnet1Subnet38ECE18A",
        "VpcProtectedSubnet2DefaultRouteA5CFB1D1",
        "VpcProtectedSubnet2RouteTableFA54AE0B",
        "VpcProtectedSubnet2RouteTableAssociation960FE2AC",
        "VpcProtectedSubnet2SubnetC22C3325",
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1EIPD7E02669",
        "VpcPublicSubnet1NATGateway4D7517AA",
        "VpcPublicSubnet1RouteTable6C95E38E",
        "VpcPublicSubnet1RouteTableAssociation97140677",
        "VpcPublicSubnet1Subnet5C2D37C4",
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2EIP3C605A87",
        "VpcPublicSubnet2NATGateway9182C01D",
        "VpcPublicSubnet2RouteTable94F7E489",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
        "VpcPublicSubnet2Subnet691E08A3",
        "VpcRdsEndpointABC2CAAE",
        "Vpc8378EB38",
        "VpcS3EndpointEnhanced7E221DBC",
        "VpcSecretsManagerEndpointForPrivate91BE082A",
        "VpcSecretsManagerEndpointForPrivateSecurityGroup732C6BAD",
        "VpcSsmEndpointC46DB833",
        "VpcStsEndpointF89E8173",
        "VpcVPCGWBF912B6E",
        "VpcXRayEdnpointD4EF46C8",
        "VpcXRayEdnpointSecurityGroupF647B21E",
        "VpcIsolatedRouteToTgw0010E66EA7",
        "VpcIsolatedRouteToTgw01215500D5",
        "VpcIsolatedRouteToTgw104C2BA69B",
        "VpcIsolatedRouteToTgw115B3B5E9B",
        "VpcNaclPublicDefaultAssociationBLEAFSICoreBankingmonitoringVpcPublicSubnet1B680A1C12993054D",
        "VpcNaclPublicDefaultAssociationBLEAFSICoreBankingmonitoringVpcPublicSubnet20097E43A0E131461",
        "VpcNaclPublicNaclEgressPublic7F2645E5",
        "VpcNaclPublicNaclIngressPublicCA388ADE",
        "VpcNaclPublicF3ACBBF5",
        "VpcPrivateRouteToTgw00C759BD7B",
        "VpcPrivateRouteToTgw016CC8C401",
        "VpcPrivateRouteToTgw102D7DA115",
        "VpcPrivateRouteToTgw11FA0FAEA3",
        "VpcPublicRouteToTgw000F279134",
        "VpcPublicRouteToTgw010382C227",
        "VpcPublicRouteToTgw10C3652BD4",
        "VpcPublicRouteToTgw1164424897",
        "VpcR53ResolverEndpointE9CD13A7",
        "VpcR53ResolverEndpointSg5A7EAA51",
        "VpcTgw43A428E1",
        "VpcTgwAttachmentA32D0B42",
        "VpcVpcEndpointSecurityGroup7FA95FB5",
        "VpcVpcFlowLogsLogGroup8558C776",
        "VpcVpcFlowLogsLogRoleDefaultPolicyD30183D1",
        "VpcVpcFlowLogsLogRoleED2BD382",
        "VpcVpcFlowLogsFlowLog421D53F0",
      ],
      "Properties": {
        "Create": {
          "Fn::Join": [
            "",
            [
              "{"service":"Route53","action":"associateVPCWithHostedZone","parameters":{"HostedZoneId":"",
              {
                "Fn::GetAtt": [
                  "AssociateVpcWithHostedZonecrossRegionSsmParamGetParamPrivateHostedZoneIdDC466103",
                  "Parameter.Value",
                ],
              },
              "","VPC":{"VPCRegion":"us-west-2","VPCId":"",
              {
                "Ref": "Vpc8378EB38",
              },
              ""}},"region":"ap-northeast-1","physicalResourceId":{"id":"Route53AssociateVpc"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": {
          "Fn::Join": [
            "",
            [
              "{"service":"Route53","action":"associateVPCWithHostedZone","parameters":{"HostedZoneId":"",
              {
                "Fn::GetAtt": [
                  "AssociateVpcWithHostedZonecrossRegionSsmParamGetParamPrivateHostedZoneIdDC466103",
                  "Parameter.Value",
                ],
              },
              "","VPC":{"VPCRegion":"us-west-2","VPCId":"",
              {
                "Ref": "Vpc8378EB38",
              },
              ""}},"region":"ap-northeast-1","physicalResourceId":{"id":"Route53AssociateVpc"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "AssociateVpcWithHostedZoneRoute53AssociateVpcCustomResourcePolicy891619A5": {
      "DependsOn": [
        "VpccreateTgwPeeringAttachmentTgwPrimaryIdapnortheast1CustomResourcePolicy29E15986",
        "VpccreateTgwPeeringAttachmentTgwPrimaryIdapnortheast1AA7928EE",
        "VpccreateTgwPeeringAttachmentTgwSecondaryIdapnortheast3CustomResourcePolicy17380867",
        "VpccreateTgwPeeringAttachmentTgwSecondaryIdapnortheast3C673D5A1",
        "VpccrossRegionSsmParampeerTgwIdTgwPrimaryIdapnortheast1GetParamTgwPrimaryIdCustomResourcePolicy767E1DD7",
        "VpccrossRegionSsmParampeerTgwIdTgwPrimaryIdapnortheast1GetParamTgwPrimaryId4730D181",
        "VpccrossRegionSsmParampeerTgwIdTgwSecondaryIdapnortheast3GetParamTgwSecondaryIdCustomResourcePolicy1C69C266",
        "VpccrossRegionSsmParampeerTgwIdTgwSecondaryIdapnortheast3GetParamTgwSecondaryIdEA3626EF",
        "VpcDynamoDbEndpoint564903D1",
        "VpcEcrDockerEndpointEnhanced87EBAE8F",
        "VpcEcrEndpointEnhancedA71B0D84",
        "VpcForTgwAttachmentsSubnet1RouteTable8C881736",
        "VpcForTgwAttachmentsSubnet1RouteTableAssociation8E490026",
        "VpcForTgwAttachmentsSubnet1Subnet95D19052",
        "VpcForTgwAttachmentsSubnet2RouteTableCA78E48E",
        "VpcForTgwAttachmentsSubnet2RouteTableAssociation87852F7E",
        "VpcForTgwAttachmentsSubnet2SubnetAEDBB0E8",
        "VpcIGWD7BA715C",
        "VpcLogsEndpointForPrivateEnhanced6028892D",
        "VpcMonitoringEndpointEnhancedD2ABE4D5",
        "VpcProtectedSubnet1DefaultRouteAEBDEDB0",
        "VpcProtectedSubnet1RouteTable69FCECD8",
        "VpcProtectedSubnet1RouteTableAssociation62F625F2",
        "VpcProtectedSubnet1Subnet38ECE18A",
        "VpcProtectedSubnet2DefaultRouteA5CFB1D1",
        "VpcProtectedSubnet2RouteTableFA54AE0B",
        "VpcProtectedSubnet2RouteTableAssociation960FE2AC",
        "VpcProtectedSubnet2SubnetC22C3325",
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1EIPD7E02669",
        "VpcPublicSubnet1NATGateway4D7517AA",
        "VpcPublicSubnet1RouteTable6C95E38E",
        "VpcPublicSubnet1RouteTableAssociation97140677",
        "VpcPublicSubnet1Subnet5C2D37C4",
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2EIP3C605A87",
        "VpcPublicSubnet2NATGateway9182C01D",
        "VpcPublicSubnet2RouteTable94F7E489",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
        "VpcPublicSubnet2Subnet691E08A3",
        "VpcRdsEndpointABC2CAAE",
        "Vpc8378EB38",
        "VpcS3EndpointEnhanced7E221DBC",
        "VpcSecretsManagerEndpointForPrivate91BE082A",
        "VpcSecretsManagerEndpointForPrivateSecurityGroup732C6BAD",
        "VpcSsmEndpointC46DB833",
        "VpcStsEndpointF89E8173",
        "VpcVPCGWBF912B6E",
        "VpcXRayEdnpointD4EF46C8",
        "VpcXRayEdnpointSecurityGroupF647B21E",
        "VpcIsolatedRouteToTgw0010E66EA7",
        "VpcIsolatedRouteToTgw01215500D5",
        "VpcIsolatedRouteToTgw104C2BA69B",
        "VpcIsolatedRouteToTgw115B3B5E9B",
        "VpcNaclPublicDefaultAssociationBLEAFSICoreBankingmonitoringVpcPublicSubnet1B680A1C12993054D",
        "VpcNaclPublicDefaultAssociationBLEAFSICoreBankingmonitoringVpcPublicSubnet20097E43A0E131461",
        "VpcNaclPublicNaclEgressPublic7F2645E5",
        "VpcNaclPublicNaclIngressPublicCA388ADE",
        "VpcNaclPublicF3ACBBF5",
        "VpcPrivateRouteToTgw00C759BD7B",
        "VpcPrivateRouteToTgw016CC8C401",
        "VpcPrivateRouteToTgw102D7DA115",
        "VpcPrivateRouteToTgw11FA0FAEA3",
        "VpcPublicRouteToTgw000F279134",
        "VpcPublicRouteToTgw010382C227",
        "VpcPublicRouteToTgw10C3652BD4",
        "VpcPublicRouteToTgw1164424897",
        "VpcR53ResolverEndpointE9CD13A7",
        "VpcR53ResolverEndpointSg5A7EAA51",
        "VpcTgw43A428E1",
        "VpcTgwAttachmentA32D0B42",
        "VpcVpcEndpointSecurityGroup7FA95FB5",
        "VpcVpcFlowLogsLogGroup8558C776",
        "VpcVpcFlowLogsLogRoleDefaultPolicyD30183D1",
        "VpcVpcFlowLogsLogRoleED2BD382",
        "VpcVpcFlowLogsFlowLog421D53F0",
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "route53:*",
                "ec2:*",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AssociateVpcWithHostedZoneRoute53AssociateVpcCustomResourcePolicy891619A5",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AssociateVpcWithHostedZonecrossRegionSsmParamGetParamPrivateHostedZoneIdCustomResourcePolicy2A6004B6": {
      "DependsOn": [
        "VpccreateTgwPeeringAttachmentTgwPrimaryIdapnortheast1CustomResourcePolicy29E15986",
        "VpccreateTgwPeeringAttachmentTgwPrimaryIdapnortheast1AA7928EE",
        "VpccreateTgwPeeringAttachmentTgwSecondaryIdapnortheast3CustomResourcePolicy17380867",
        "VpccreateTgwPeeringAttachmentTgwSecondaryIdapnortheast3C673D5A1",
        "VpccrossRegionSsmParampeerTgwIdTgwPrimaryIdapnortheast1GetParamTgwPrimaryIdCustomResourcePolicy767E1DD7",
        "VpccrossRegionSsmParampeerTgwIdTgwPrimaryIdapnortheast1GetParamTgwPrimaryId4730D181",
        "VpccrossRegionSsmParampeerTgwIdTgwSecondaryIdapnortheast3GetParamTgwSecondaryIdCustomResourcePolicy1C69C266",
        "VpccrossRegionSsmParampeerTgwIdTgwSecondaryIdapnortheast3GetParamTgwSecondaryIdEA3626EF",
        "VpcDynamoDbEndpoint564903D1",
        "VpcEcrDockerEndpointEnhanced87EBAE8F",
        "VpcEcrEndpointEnhancedA71B0D84",
        "VpcForTgwAttachmentsSubnet1RouteTable8C881736",
        "VpcForTgwAttachmentsSubnet1RouteTableAssociation8E490026",
        "VpcForTgwAttachmentsSubnet1Subnet95D19052",
        "VpcForTgwAttachmentsSubnet2RouteTableCA78E48E",
        "VpcForTgwAttachmentsSubnet2RouteTableAssociation87852F7E",
        "VpcForTgwAttachmentsSubnet2SubnetAEDBB0E8",
        "VpcIGWD7BA715C",
        "VpcLogsEndpointForPrivateEnhanced6028892D",
        "VpcMonitoringEndpointEnhancedD2ABE4D5",
        "VpcProtectedSubnet1DefaultRouteAEBDEDB0",
        "VpcProtectedSubnet1RouteTable69FCECD8",
        "VpcProtectedSubnet1RouteTableAssociation62F625F2",
        "VpcProtectedSubnet1Subnet38ECE18A",
        "VpcProtectedSubnet2DefaultRouteA5CFB1D1",
        "VpcProtectedSubnet2RouteTableFA54AE0B",
        "VpcProtectedSubnet2RouteTableAssociation960FE2AC",
        "VpcProtectedSubnet2SubnetC22C3325",
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1EIPD7E02669",
        "VpcPublicSubnet1NATGateway4D7517AA",
        "VpcPublicSubnet1RouteTable6C95E38E",
        "VpcPublicSubnet1RouteTableAssociation97140677",
        "VpcPublicSubnet1Subnet5C2D37C4",
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2EIP3C605A87",
        "VpcPublicSubnet2NATGateway9182C01D",
        "VpcPublicSubnet2RouteTable94F7E489",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
        "VpcPublicSubnet2Subnet691E08A3",
        "VpcRdsEndpointABC2CAAE",
        "Vpc8378EB38",
        "VpcS3EndpointEnhanced7E221DBC",
        "VpcSecretsManagerEndpointForPrivate91BE082A",
        "VpcSecretsManagerEndpointForPrivateSecurityGroup732C6BAD",
        "VpcSsmEndpointC46DB833",
        "VpcStsEndpointF89E8173",
        "VpcVPCGWBF912B6E",
        "VpcXRayEdnpointD4EF46C8",
        "VpcXRayEdnpointSecurityGroupF647B21E",
        "VpcIsolatedRouteToTgw0010E66EA7",
        "VpcIsolatedRouteToTgw01215500D5",
        "VpcIsolatedRouteToTgw104C2BA69B",
        "VpcIsolatedRouteToTgw115B3B5E9B",
        "VpcNaclPublicDefaultAssociationBLEAFSICoreBankingmonitoringVpcPublicSubnet1B680A1C12993054D",
        "VpcNaclPublicDefaultAssociationBLEAFSICoreBankingmonitoringVpcPublicSubnet20097E43A0E131461",
        "VpcNaclPublicNaclEgressPublic7F2645E5",
        "VpcNaclPublicNaclIngressPublicCA388ADE",
        "VpcNaclPublicF3ACBBF5",
        "VpcPrivateRouteToTgw00C759BD7B",
        "VpcPrivateRouteToTgw016CC8C401",
        "VpcPrivateRouteToTgw102D7DA115",
        "VpcPrivateRouteToTgw11FA0FAEA3",
        "VpcPublicRouteToTgw000F279134",
        "VpcPublicRouteToTgw010382C227",
        "VpcPublicRouteToTgw10C3652BD4",
        "VpcPublicRouteToTgw1164424897",
        "VpcR53ResolverEndpointE9CD13A7",
        "VpcR53ResolverEndpointSg5A7EAA51",
        "VpcTgw43A428E1",
        "VpcTgwAttachmentA32D0B42",
        "VpcVpcEndpointSecurityGroup7FA95FB5",
        "VpcVpcFlowLogsLogGroup8558C776",
        "VpcVpcFlowLogsLogRoleDefaultPolicyD30183D1",
        "VpcVpcFlowLogsLogRoleED2BD382",
        "VpcVpcFlowLogsFlowLog421D53F0",
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ssm:GetParameter",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AssociateVpcWithHostedZonecrossRegionSsmParamGetParamPrivateHostedZoneIdCustomResourcePolicy2A6004B6",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AssociateVpcWithHostedZonecrossRegionSsmParamGetParamPrivateHostedZoneIdDC466103": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "AssociateVpcWithHostedZonecrossRegionSsmParamGetParamPrivateHostedZoneIdCustomResourcePolicy2A6004B6",
        "VpccreateTgwPeeringAttachmentTgwPrimaryIdapnortheast1CustomResourcePolicy29E15986",
        "VpccreateTgwPeeringAttachmentTgwPrimaryIdapnortheast1AA7928EE",
        "VpccreateTgwPeeringAttachmentTgwSecondaryIdapnortheast3CustomResourcePolicy17380867",
        "VpccreateTgwPeeringAttachmentTgwSecondaryIdapnortheast3C673D5A1",
        "VpccrossRegionSsmParampeerTgwIdTgwPrimaryIdapnortheast1GetParamTgwPrimaryIdCustomResourcePolicy767E1DD7",
        "VpccrossRegionSsmParampeerTgwIdTgwPrimaryIdapnortheast1GetParamTgwPrimaryId4730D181",
        "VpccrossRegionSsmParampeerTgwIdTgwSecondaryIdapnortheast3GetParamTgwSecondaryIdCustomResourcePolicy1C69C266",
        "VpccrossRegionSsmParampeerTgwIdTgwSecondaryIdapnortheast3GetParamTgwSecondaryIdEA3626EF",
        "VpcDynamoDbEndpoint564903D1",
        "VpcEcrDockerEndpointEnhanced87EBAE8F",
        "VpcEcrEndpointEnhancedA71B0D84",
        "VpcForTgwAttachmentsSubnet1RouteTable8C881736",
        "VpcForTgwAttachmentsSubnet1RouteTableAssociation8E490026",
        "VpcForTgwAttachmentsSubnet1Subnet95D19052",
        "VpcForTgwAttachmentsSubnet2RouteTableCA78E48E",
        "VpcForTgwAttachmentsSubnet2RouteTableAssociation87852F7E",
        "VpcForTgwAttachmentsSubnet2SubnetAEDBB0E8",
        "VpcIGWD7BA715C",
        "VpcLogsEndpointForPrivateEnhanced6028892D",
        "VpcMonitoringEndpointEnhancedD2ABE4D5",
        "VpcProtectedSubnet1DefaultRouteAEBDEDB0",
        "VpcProtectedSubnet1RouteTable69FCECD8",
        "VpcProtectedSubnet1RouteTableAssociation62F625F2",
        "VpcProtectedSubnet1Subnet38ECE18A",
        "VpcProtectedSubnet2DefaultRouteA5CFB1D1",
        "VpcProtectedSubnet2RouteTableFA54AE0B",
        "VpcProtectedSubnet2RouteTableAssociation960FE2AC",
        "VpcProtectedSubnet2SubnetC22C3325",
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1EIPD7E02669",
        "VpcPublicSubnet1NATGateway4D7517AA",
        "VpcPublicSubnet1RouteTable6C95E38E",
        "VpcPublicSubnet1RouteTableAssociation97140677",
        "VpcPublicSubnet1Subnet5C2D37C4",
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2EIP3C605A87",
        "VpcPublicSubnet2NATGateway9182C01D",
        "VpcPublicSubnet2RouteTable94F7E489",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
        "VpcPublicSubnet2Subnet691E08A3",
        "VpcRdsEndpointABC2CAAE",
        "Vpc8378EB38",
        "VpcS3EndpointEnhanced7E221DBC",
        "VpcSecretsManagerEndpointForPrivate91BE082A",
        "VpcSecretsManagerEndpointForPrivateSecurityGroup732C6BAD",
        "VpcSsmEndpointC46DB833",
        "VpcStsEndpointF89E8173",
        "VpcVPCGWBF912B6E",
        "VpcXRayEdnpointD4EF46C8",
        "VpcXRayEdnpointSecurityGroupF647B21E",
        "VpcIsolatedRouteToTgw0010E66EA7",
        "VpcIsolatedRouteToTgw01215500D5",
        "VpcIsolatedRouteToTgw104C2BA69B",
        "VpcIsolatedRouteToTgw115B3B5E9B",
        "VpcNaclPublicDefaultAssociationBLEAFSICoreBankingmonitoringVpcPublicSubnet1B680A1C12993054D",
        "VpcNaclPublicDefaultAssociationBLEAFSICoreBankingmonitoringVpcPublicSubnet20097E43A0E131461",
        "VpcNaclPublicNaclEgressPublic7F2645E5",
        "VpcNaclPublicNaclIngressPublicCA388ADE",
        "VpcNaclPublicF3ACBBF5",
        "VpcPrivateRouteToTgw00C759BD7B",
        "VpcPrivateRouteToTgw016CC8C401",
        "VpcPrivateRouteToTgw102D7DA115",
        "VpcPrivateRouteToTgw11FA0FAEA3",
        "VpcPublicRouteToTgw000F279134",
        "VpcPublicRouteToTgw010382C227",
        "VpcPublicRouteToTgw10C3652BD4",
        "VpcPublicRouteToTgw1164424897",
        "VpcR53ResolverEndpointE9CD13A7",
        "VpcR53ResolverEndpointSg5A7EAA51",
        "VpcTgw43A428E1",
        "VpcTgwAttachmentA32D0B42",
        "VpcVpcEndpointSecurityGroup7FA95FB5",
        "VpcVpcFlowLogsLogGroup8558C776",
        "VpcVpcFlowLogsLogRoleDefaultPolicyD30183D1",
        "VpcVpcFlowLogsLogRoleED2BD382",
        "VpcVpcFlowLogsFlowLog421D53F0",
      ],
      "Properties": {
        "Create": "{"service":"SSM","action":"getParameter","parameters":{"Name":"/bleafsi/test/PrivateHostedZoneId","WithDecryption":true},"region":"ap-northeast-1","physicalResourceId":{"id":"param-/bleafsi/test/PrivateHostedZoneId"}}",
        "InstallLatestAwsSdk": true,
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": "{"service":"SSM","action":"getParameter","parameters":{"Name":"/bleafsi/test/PrivateHostedZoneId","WithDecryption":true},"region":"ap-northeast-1","physicalResourceId":{"id":"param-/bleafsi/test/PrivateHostedZoneId"}}",
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "CanaryA549F651": {
      "Properties": {
        "ArtifactS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "CanaryArtifactsBucketD0EC6C2C",
              },
            ],
          ],
        },
        "Code": {
          "Handler": "index.handler",
          "S3Bucket": "cdk-hnb659fds-assets-111111111111-us-west-2",
          "S3Key": "788a63e18e6631079273ca4cc3f10184ed0aace8ff705d116fb6eba96d48971b.zip",
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CanaryServiceRoleA33C950A",
            "Arn",
          ],
        },
        "Name": "bleafsicorebankdb0c3e",
        "RunConfig": {
          "EnvironmentVariables": {
            "BASE_URL": "http://api.example.com",
          },
        },
        "RuntimeVersion": "syn-nodejs-puppeteer-7.0",
        "Schedule": {
          "DurationInSeconds": "0",
          "Expression": "rate(1 minute)",
        },
        "StartCanaryAfterCreation": true,
        "VPCConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "CanarySecurityGroup28FB6A69",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": [
            {
              "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
            },
            {
              "Ref": "VpcProtectedSubnet2SubnetC22C3325",
            },
            {
              "Ref": "VpcForTgwAttachmentsSubnet1Subnet95D19052",
            },
            {
              "Ref": "VpcForTgwAttachmentsSubnet2SubnetAEDBB0E8",
            },
          ],
          "VpcId": {
            "Ref": "Vpc8378EB38",
          },
        },
      },
      "Type": "AWS::Synthetics::Canary",
    },
    "CanaryArtifactsBucketD0EC6C2C": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "CanaryArtifactsBucketPolicy1FBFB5D2": {
      "Properties": {
        "Bucket": {
          "Ref": "CanaryArtifactsBucketD0EC6C2C",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CanaryArtifactsBucketD0EC6C2C",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CanaryArtifactsBucketD0EC6C2C",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "CanarySecurityGroup28FB6A69": {
      "Properties": {
        "GroupDescription": "Automatic security group for Canary BLEAFSICoreBankingmonitoringCanaryC82058E2",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "CanaryServiceRoleA33C950A": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "CanaryArtifactsBucketD0EC6C2C",
                      "Arn",
                    ],
                  },
                },
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "CanaryArtifactsBucketD0EC6C2C",
                            "Arn",
                          ],
                        },
                        "/*",
                      ],
                    ],
                  },
                },
                {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": {
                    "StringEquals": {
                      "cloudwatch:namespace": "CloudWatchSynthetics",
                    },
                  },
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:us-west-2:111111111111:log-group:/aws/lambda/cwsyn-*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "canaryPolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudWatchAlarmCanaryToTokyoAlarm52646CAF": {
      "Properties": {
        "ActionsEnabled": true,
        "AlarmName": "canaryAlerm-us-west-2",
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 2,
        "Dimensions": [
          {
            "Name": "CanaryName",
            "Value": {
              "Ref": "CanaryA549F651",
            },
          },
        ],
        "EvaluationPeriods": 2,
        "MetricName": "SuccessPercent",
        "Namespace": "CloudWatchSynthetics",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 100,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "CustomCrossRegionExportReaderCustomResourceProviderHandler46647B68": {
      "DependsOn": [
        "CustomCrossRegionExportReaderCustomResourceProviderRole10531BBD",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-111111111111-us-west-2",
          "S3Key": "d41c8e6342cd078b5ea5aec11522bdb605eae00f4bb98a3fb0b44c827e9b5ca9.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomCrossRegionExportReaderCustomResourceProviderRole10531BBD",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomCrossRegionExportReaderCustomResourceProviderRole10531BBD": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:AddTagsToResource",
                    "ssm:RemoveTagsFromResource",
                    "ssm:GetParameters",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":ssm:us-west-2:111111111111:parameter/cdk/exports/BLEAFSI-CoreBanking-monitoring/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ExportsReader8B249524": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ReaderProps": {
          "imports": {
            "/cdk/exports/BLEAFSI-CoreBanking-monitoring/BLEAFSICoreBankingprimaryapnortheast1FnGetAttGetDefaultRouteTableId6DB194BATransitGateways0OptionsAssociationDefaultRouteTableIdFC78B5FF": "{{resolve:ssm:/cdk/exports/BLEAFSI-CoreBanking-monitoring/BLEAFSICoreBankingprimaryapnortheast1FnGetAttGetDefaultRouteTableId6DB194BATransitGateways0OptionsAssociationDefaultRouteTableIdFC78B5FF}}",
            "/cdk/exports/BLEAFSI-CoreBanking-monitoring/BLEAFSICoreBankingsecondaryapnortheast3FnGetAttGetDefaultRouteTableId6DB194BATransitGateways0OptionsAssociationDefaultRouteTableId795B05C5": "{{resolve:ssm:/cdk/exports/BLEAFSI-CoreBanking-monitoring/BLEAFSICoreBankingsecondaryapnortheast3FnGetAttGetDefaultRouteTableId6DB194BATransitGateways0OptionsAssociationDefaultRouteTableId795B05C5}}",
          },
          "prefix": "BLEAFSI-CoreBanking-monitoring",
          "region": "us-west-2",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomCrossRegionExportReaderCustomResourceProviderHandler46647B68",
            "Arn",
          ],
        },
      },
      "Type": "Custom::CrossRegionExportReader",
      "UpdateReplacePolicy": "Delete",
    },
    "GetDefaultRouteTableId6DB194BA": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "GetDefaultRouteTableIdCustomResourcePolicy2240EBDC",
      ],
      "Properties": {
        "Create": {
          "Fn::Join": [
            "",
            [
              "{"service":"EC2","action":"describeTransitGateways","parameters":{"TransitGatewayIds":["",
              {
                "Ref": "VpcTgw43A428E1",
              },
              ""]},"physicalResourceId":{"id":"GetDefaultRouteTableId"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": {
          "Fn::Join": [
            "",
            [
              "{"service":"EC2","action":"describeTransitGateways","parameters":{"TransitGatewayIds":["",
              {
                "Ref": "VpcTgw43A428E1",
              },
              ""]},"physicalResourceId":{"id":"GetDefaultRouteTableId"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "GetDefaultRouteTableIdCustomResourcePolicy2240EBDC": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ec2:DescribeTransitGateways",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GetDefaultRouteTableIdCustomResourcePolicy2240EBDC",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "Vpc8378EB38": {
      "Properties": {
        "CidrBlock": "10.102.0.0/20",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-monitoring/Vpc/Default",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcDynamoDbEndpoint564903D1": {
      "Properties": {
        "RouteTableIds": [
          {
            "Ref": "VpcForTgwAttachmentsSubnet1RouteTable8C881736",
          },
          {
            "Ref": "VpcForTgwAttachmentsSubnet2RouteTableCA78E48E",
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".dynamodb",
            ],
          ],
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-monitoring/Vpc/Default",
          },
        ],
        "VpcEndpointType": "Gateway",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcEcrDockerEndpointEnhanced87EBAE8F": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcVpcEndpointSecurityGroup7FA95FB5",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.us-west-2.ecr.dkr",
        "SubnetIds": [
          {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-monitoring/Vpc/Default",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcEcrEndpointEnhancedA71B0D84": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcVpcEndpointSecurityGroup7FA95FB5",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.us-west-2.ecr.api",
        "SubnetIds": [
          {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-monitoring/Vpc/Default",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcForTgwAttachmentsSubnet1RouteTable8C881736": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-monitoring/Vpc/Default/ForTgwAttachmentsSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcForTgwAttachmentsSubnet1RouteTableAssociation8E490026": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcForTgwAttachmentsSubnet1RouteTable8C881736",
        },
        "SubnetId": {
          "Ref": "VpcForTgwAttachmentsSubnet1Subnet95D19052",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcForTgwAttachmentsSubnet1Subnet95D19052": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.102.12.0/28",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "ForTgwAttachments",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-monitoring/Vpc/Default/ForTgwAttachmentsSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcForTgwAttachmentsSubnet2RouteTableAssociation87852F7E": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcForTgwAttachmentsSubnet2RouteTableCA78E48E",
        },
        "SubnetId": {
          "Ref": "VpcForTgwAttachmentsSubnet2SubnetAEDBB0E8",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcForTgwAttachmentsSubnet2RouteTableCA78E48E": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-monitoring/Vpc/Default/ForTgwAttachmentsSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcForTgwAttachmentsSubnet2SubnetAEDBB0E8": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.102.12.16/28",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "ForTgwAttachments",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-monitoring/Vpc/Default/ForTgwAttachmentsSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcIGWD7BA715C": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-monitoring/Vpc/Default",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcIsolatedRouteToTgw0010E66EA7": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.100.0.0/20",
        "RouteTableId": {
          "Ref": "VpcForTgwAttachmentsSubnet1RouteTable8C881736",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcIsolatedRouteToTgw01215500D5": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.100.0.0/20",
        "RouteTableId": {
          "Ref": "VpcForTgwAttachmentsSubnet2RouteTableCA78E48E",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcIsolatedRouteToTgw104C2BA69B": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.101.0.0/20",
        "RouteTableId": {
          "Ref": "VpcForTgwAttachmentsSubnet1RouteTable8C881736",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcIsolatedRouteToTgw115B3B5E9B": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.101.0.0/20",
        "RouteTableId": {
          "Ref": "VpcForTgwAttachmentsSubnet2RouteTableCA78E48E",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcLogsEndpointForPrivateEnhanced6028892D": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcVpcEndpointSecurityGroup7FA95FB5",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.us-west-2.logs",
        "SubnetIds": [
          {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-monitoring/Vpc/Default",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcMonitoringEndpointEnhancedD2ABE4D5": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcVpcEndpointSecurityGroup7FA95FB5",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.us-west-2.monitoring",
        "SubnetIds": [
          {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-monitoring/Vpc/Default",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcNaclPublicDefaultAssociationBLEAFSICoreBankingmonitoringVpcPublicSubnet1B680A1C12993054D": {
      "Properties": {
        "NetworkAclId": {
          "Ref": "VpcNaclPublicF3ACBBF5",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
      },
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
    },
    "VpcNaclPublicDefaultAssociationBLEAFSICoreBankingmonitoringVpcPublicSubnet20097E43A0E131461": {
      "Properties": {
        "NetworkAclId": {
          "Ref": "VpcNaclPublicF3ACBBF5",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
      },
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
    },
    "VpcNaclPublicF3ACBBF5": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-monitoring/Vpc/NaclPublic",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::NetworkAcl",
    },
    "VpcNaclPublicNaclEgressPublic7F2645E5": {
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": true,
        "NetworkAclId": {
          "Ref": "VpcNaclPublicF3ACBBF5",
        },
        "Protocol": -1,
        "RuleAction": "allow",
        "RuleNumber": 100,
      },
      "Type": "AWS::EC2::NetworkAclEntry",
    },
    "VpcNaclPublicNaclIngressPublicCA388ADE": {
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": false,
        "NetworkAclId": {
          "Ref": "VpcNaclPublicF3ACBBF5",
        },
        "Protocol": -1,
        "RuleAction": "allow",
        "RuleNumber": 100,
      },
      "Type": "AWS::EC2::NetworkAclEntry",
    },
    "VpcPrivateRouteToTgw00C759BD7B": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.100.0.0/20",
        "RouteTableId": {
          "Ref": "VpcProtectedSubnet1RouteTable69FCECD8",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateRouteToTgw016CC8C401": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.100.0.0/20",
        "RouteTableId": {
          "Ref": "VpcProtectedSubnet2RouteTableFA54AE0B",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateRouteToTgw102D7DA115": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.101.0.0/20",
        "RouteTableId": {
          "Ref": "VpcProtectedSubnet1RouteTable69FCECD8",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateRouteToTgw11FA0FAEA3": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.101.0.0/20",
        "RouteTableId": {
          "Ref": "VpcProtectedSubnet2RouteTableFA54AE0B",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcProtectedSubnet1DefaultRouteAEBDEDB0": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA",
        },
        "RouteTableId": {
          "Ref": "VpcProtectedSubnet1RouteTable69FCECD8",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcProtectedSubnet1RouteTable69FCECD8": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-monitoring/Vpc/Default/ProtectedSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcProtectedSubnet1RouteTableAssociation62F625F2": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcProtectedSubnet1RouteTable69FCECD8",
        },
        "SubnetId": {
          "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcProtectedSubnet1Subnet38ECE18A": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.102.4.0/22",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Protected",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-monitoring/Vpc/Default/ProtectedSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcProtectedSubnet2DefaultRouteA5CFB1D1": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet2NATGateway9182C01D",
        },
        "RouteTableId": {
          "Ref": "VpcProtectedSubnet2RouteTableFA54AE0B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcProtectedSubnet2RouteTableAssociation960FE2AC": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcProtectedSubnet2RouteTableFA54AE0B",
        },
        "SubnetId": {
          "Ref": "VpcProtectedSubnet2SubnetC22C3325",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcProtectedSubnet2RouteTableFA54AE0B": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-monitoring/Vpc/Default/ProtectedSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcProtectedSubnet2SubnetC22C3325": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.102.8.0/22",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Protected",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-monitoring/Vpc/Default/ProtectedSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicRouteToTgw000F279134": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.100.0.0/20",
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicRouteToTgw010382C227": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.100.0.0/20",
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicRouteToTgw10C3652BD4": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.101.0.0/20",
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicRouteToTgw1164424897": {
      "DependsOn": [
        "VpcTgwAttachmentA32D0B42",
      ],
      "Properties": {
        "DestinationCidrBlock": "10.101.0.0/20",
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet1DefaultRoute3DA9E72A": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet1EIPD7E02669": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-monitoring/Vpc/Default/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet1NATGateway4D7517AA": {
      "DependsOn": [
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1RouteTableAssociation97140677",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet1EIPD7E02669",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-monitoring/Vpc/Default/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet1RouteTable6C95E38E": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-monitoring/Vpc/Default/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet1RouteTableAssociation97140677": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet1Subnet5C2D37C4": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.102.0.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-monitoring/Vpc/Default/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet2DefaultRoute97F91067": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet2EIP3C605A87": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-monitoring/Vpc/Default/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet2NATGateway9182C01D": {
      "DependsOn": [
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet2EIP3C605A87",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-monitoring/Vpc/Default/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet2RouteTable94F7E489": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-monitoring/Vpc/Default/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet2RouteTableAssociationDD5762D8": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet2Subnet691E08A3": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.102.1.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-monitoring/Vpc/Default/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcR53ResolverEndpointE9CD13A7": {
      "Properties": {
        "Direction": "INBOUND",
        "IpAddresses": [
          {
            "SubnetId": {
              "Ref": "VpcForTgwAttachmentsSubnet1Subnet95D19052",
            },
          },
          {
            "SubnetId": {
              "Ref": "VpcForTgwAttachmentsSubnet2SubnetAEDBB0E8",
            },
          },
        ],
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcR53ResolverEndpointSg5A7EAA51",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::Route53Resolver::ResolverEndpoint",
    },
    "VpcR53ResolverEndpointSg5A7EAA51": {
      "Properties": {
        "GroupDescription": "BLEAFSI-CoreBanking-monitoring/Vpc/R53ResolverEndpointSg",
        "SecurityGroupEgress": [
          {
            "CidrIp": "255.255.255.255/32",
            "Description": "Disallow all traffic",
            "FromPort": 252,
            "IpProtocol": "icmp",
            "ToPort": 86,
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "10.0.0.0/16",
            "Description": "from 10.0.0.0/16:53",
            "FromPort": 53,
            "IpProtocol": "tcp",
            "ToPort": 53,
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcRdsEndpointABC2CAAE": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcVpcEndpointSecurityGroup7FA95FB5",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.us-west-2.rds",
        "SubnetIds": [
          {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-monitoring/Vpc/Default",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcS3EndpointEnhanced7E221DBC": {
      "Properties": {
        "RouteTableIds": [
          {
            "Ref": "VpcProtectedSubnet1RouteTable69FCECD8",
          },
          {
            "Ref": "VpcProtectedSubnet2RouteTableFA54AE0B",
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".s3",
            ],
          ],
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-monitoring/Vpc/Default",
          },
        ],
        "VpcEndpointType": "Gateway",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcSecretsManagerEndpointForPrivate91BE082A": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcSecretsManagerEndpointForPrivateSecurityGroup732C6BAD",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.us-west-2.secretsmanager",
        "SubnetIds": [
          {
            "Ref": "VpcForTgwAttachmentsSubnet1Subnet95D19052",
          },
          {
            "Ref": "VpcForTgwAttachmentsSubnet2SubnetAEDBB0E8",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-monitoring/Vpc/Default",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcSecretsManagerEndpointForPrivateSecurityGroup732C6BAD": {
      "Properties": {
        "GroupDescription": "BLEAFSI-CoreBanking-monitoring/Vpc/Default/SecretsManagerEndpointForPrivate/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "Vpc8378EB38",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "Vpc8378EB38",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-monitoring/Vpc/Default",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcSsmEndpointC46DB833": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcVpcEndpointSecurityGroup7FA95FB5",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.us-west-2.ssm",
        "SubnetIds": [
          {
            "Ref": "VpcForTgwAttachmentsSubnet1Subnet95D19052",
          },
          {
            "Ref": "VpcForTgwAttachmentsSubnet2SubnetAEDBB0E8",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-monitoring/Vpc/Default",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcStsEndpointF89E8173": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcVpcEndpointSecurityGroup7FA95FB5",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.us-west-2.sts",
        "SubnetIds": [
          {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-monitoring/Vpc/Default",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcTgw43A428E1": {
      "Properties": {
        "AmazonSideAsn": 64514,
        "Tags": [
          {
            "Key": "Name",
            "Value": "tgw-us-west-2",
          },
        ],
      },
      "Type": "AWS::EC2::TransitGateway",
    },
    "VpcTgwAttachmentA32D0B42": {
      "Properties": {
        "SubnetIds": [
          {
            "Ref": "VpcForTgwAttachmentsSubnet1Subnet95D19052",
          },
          {
            "Ref": "VpcForTgwAttachmentsSubnet2SubnetAEDBB0E8",
          },
        ],
        "TransitGatewayId": {
          "Ref": "VpcTgw43A428E1",
        },
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::TransitGatewayAttachment",
    },
    "VpcVPCGWBF912B6E": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "VpcVpcEndpointSecurityGroup7FA95FB5": {
      "Properties": {
        "GroupDescription": "Security group for VPC endpoints used by CloudWatch Application Signals",
        "SecurityGroupEgress": [
          {
            "CidrIp": "255.255.255.255/32",
            "Description": "Disallow all traffic",
            "FromPort": 252,
            "IpProtocol": "icmp",
            "ToPort": 86,
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "Vpc8378EB38",
                "CidrBlock",
              ],
            },
            "Description": "Allow HTTPS from VPC CIDR for VPC endpoint access",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcVpcFlowLogsFlowLog421D53F0": {
      "Properties": {
        "DeliverLogsPermissionArn": {
          "Fn::GetAtt": [
            "VpcVpcFlowLogsLogRoleED2BD382",
            "Arn",
          ],
        },
        "LogDestinationType": "cloud-watch-logs",
        "LogGroupName": {
          "Ref": "VpcVpcFlowLogsLogGroup8558C776",
        },
        "ResourceId": {
          "Ref": "Vpc8378EB38",
        },
        "ResourceType": "VPC",
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-monitoring/Vpc/VpcFlowLogs/VpcFlowLogs",
          },
        ],
        "TrafficType": "ALL",
      },
      "Type": "AWS::EC2::FlowLog",
    },
    "VpcVpcFlowLogsLogGroup8558C776": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 180,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "VpcVpcFlowLogsLogRoleDefaultPolicyD30183D1": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:DescribeLogStreams",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "VpcVpcFlowLogsLogGroup8558C776",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "VpcVpcFlowLogsLogRoleED2BD382",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "VpcVpcFlowLogsLogRoleDefaultPolicyD30183D1",
        "Roles": [
          {
            "Ref": "VpcVpcFlowLogsLogRoleED2BD382",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "VpcVpcFlowLogsLogRoleED2BD382": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "vpc-flow-logs.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "VpcXRayEdnpointD4EF46C8": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcXRayEdnpointSecurityGroupF647B21E",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.us-west-2.xray",
        "SubnetIds": [
          {
            "Ref": "VpcForTgwAttachmentsSubnet1Subnet95D19052",
          },
          {
            "Ref": "VpcForTgwAttachmentsSubnet2SubnetAEDBB0E8",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-monitoring/Vpc/Default",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcXRayEdnpointSecurityGroupF647B21E": {
      "Properties": {
        "GroupDescription": "BLEAFSI-CoreBanking-monitoring/Vpc/Default/XRayEdnpoint/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "Vpc8378EB38",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "Vpc8378EB38",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "BLEAFSI-CoreBanking-monitoring/Vpc/Default",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpccreateTgwPeeringAttachmentTgwPrimaryIdapnortheast1AA7928EE": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "VpccreateTgwPeeringAttachmentTgwPrimaryIdapnortheast1CustomResourcePolicy29E15986",
      ],
      "Properties": {
        "Create": {
          "Fn::Join": [
            "",
            [
              "{"service":"EC2","action":"createTransitGatewayPeeringAttachment","parameters":{"PeerAccountId":"111111111111","PeerRegion":"ap-northeast-1","PeerTransitGatewayId":"",
              {
                "Fn::GetAtt": [
                  "VpccrossRegionSsmParampeerTgwIdTgwPrimaryIdapnortheast1GetParamTgwPrimaryId4730D181",
                  "Parameter.Value",
                ],
              },
              "","TransitGatewayId":"",
              {
                "Ref": "VpcTgw43A428E1",
              },
              ""},"region":"us-west-2","physicalResourceId":{"id":"createTgwPeeringAttachment-TgwPrimaryId-ap-northeast-1"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": {
          "Fn::Join": [
            "",
            [
              "{"service":"EC2","action":"createTransitGatewayPeeringAttachment","parameters":{"PeerAccountId":"111111111111","PeerRegion":"ap-northeast-1","PeerTransitGatewayId":"",
              {
                "Fn::GetAtt": [
                  "VpccrossRegionSsmParampeerTgwIdTgwPrimaryIdapnortheast1GetParamTgwPrimaryId4730D181",
                  "Parameter.Value",
                ],
              },
              "","TransitGatewayId":"",
              {
                "Ref": "VpcTgw43A428E1",
              },
              ""},"region":"us-west-2","physicalResourceId":{"id":"createTgwPeeringAttachment-TgwPrimaryId-ap-northeast-1"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "VpccreateTgwPeeringAttachmentTgwPrimaryIdapnortheast1CustomResourcePolicy29E15986": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ec2:CreateTransitGatewayPeeringAttachment",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "VpccreateTgwPeeringAttachmentTgwPrimaryIdapnortheast1CustomResourcePolicy29E15986",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "VpccreateTgwPeeringAttachmentTgwSecondaryIdapnortheast3C673D5A1": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "VpccreateTgwPeeringAttachmentTgwSecondaryIdapnortheast3CustomResourcePolicy17380867",
      ],
      "Properties": {
        "Create": {
          "Fn::Join": [
            "",
            [
              "{"service":"EC2","action":"createTransitGatewayPeeringAttachment","parameters":{"PeerAccountId":"111111111111","PeerRegion":"ap-northeast-3","PeerTransitGatewayId":"",
              {
                "Fn::GetAtt": [
                  "VpccrossRegionSsmParampeerTgwIdTgwSecondaryIdapnortheast3GetParamTgwSecondaryIdEA3626EF",
                  "Parameter.Value",
                ],
              },
              "","TransitGatewayId":"",
              {
                "Ref": "VpcTgw43A428E1",
              },
              ""},"region":"us-west-2","physicalResourceId":{"id":"createTgwPeeringAttachment-TgwSecondaryId-ap-northeast-3"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": {
          "Fn::Join": [
            "",
            [
              "{"service":"EC2","action":"createTransitGatewayPeeringAttachment","parameters":{"PeerAccountId":"111111111111","PeerRegion":"ap-northeast-3","PeerTransitGatewayId":"",
              {
                "Fn::GetAtt": [
                  "VpccrossRegionSsmParampeerTgwIdTgwSecondaryIdapnortheast3GetParamTgwSecondaryIdEA3626EF",
                  "Parameter.Value",
                ],
              },
              "","TransitGatewayId":"",
              {
                "Ref": "VpcTgw43A428E1",
              },
              ""},"region":"us-west-2","physicalResourceId":{"id":"createTgwPeeringAttachment-TgwSecondaryId-ap-northeast-3"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "VpccreateTgwPeeringAttachmentTgwSecondaryIdapnortheast3CustomResourcePolicy17380867": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ec2:CreateTransitGatewayPeeringAttachment",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "VpccreateTgwPeeringAttachmentTgwSecondaryIdapnortheast3CustomResourcePolicy17380867",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "VpccrossRegionSsmParampeerTgwIdTgwPrimaryIdapnortheast1GetParamTgwPrimaryId4730D181": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "VpccrossRegionSsmParampeerTgwIdTgwPrimaryIdapnortheast1GetParamTgwPrimaryIdCustomResourcePolicy767E1DD7",
      ],
      "Properties": {
        "Create": "{"service":"SSM","action":"getParameter","parameters":{"Name":"/bleafsi/test/TgwPrimaryId","WithDecryption":true},"region":"ap-northeast-1","physicalResourceId":{"id":"param-/bleafsi/test/TgwPrimaryId"}}",
        "InstallLatestAwsSdk": true,
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": "{"service":"SSM","action":"getParameter","parameters":{"Name":"/bleafsi/test/TgwPrimaryId","WithDecryption":true},"region":"ap-northeast-1","physicalResourceId":{"id":"param-/bleafsi/test/TgwPrimaryId"}}",
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "VpccrossRegionSsmParampeerTgwIdTgwPrimaryIdapnortheast1GetParamTgwPrimaryIdCustomResourcePolicy767E1DD7": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ssm:GetParameter",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "VpccrossRegionSsmParampeerTgwIdTgwPrimaryIdapnortheast1GetParamTgwPrimaryIdCustomResourcePolicy767E1DD7",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "VpccrossRegionSsmParampeerTgwIdTgwSecondaryIdapnortheast3GetParamTgwSecondaryIdCustomResourcePolicy1C69C266": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ssm:GetParameter",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "VpccrossRegionSsmParampeerTgwIdTgwSecondaryIdapnortheast3GetParamTgwSecondaryIdCustomResourcePolicy1C69C266",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "VpccrossRegionSsmParampeerTgwIdTgwSecondaryIdapnortheast3GetParamTgwSecondaryIdEA3626EF": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "VpccrossRegionSsmParampeerTgwIdTgwSecondaryIdapnortheast3GetParamTgwSecondaryIdCustomResourcePolicy1C69C266",
      ],
      "Properties": {
        "Create": "{"service":"SSM","action":"getParameter","parameters":{"Name":"/bleafsi/test/TgwSecondaryId","WithDecryption":true},"region":"ap-northeast-3","physicalResourceId":{"id":"param-/bleafsi/test/TgwSecondaryId"}}",
        "InstallLatestAwsSdk": true,
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": "{"service":"SSM","action":"getParameter","parameters":{"Name":"/bleafsi/test/TgwSecondaryId","WithDecryption":true},"region":"ap-northeast-3","physicalResourceId":{"id":"param-/bleafsi/test/TgwSecondaryId"}}",
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
